export default {
  "attributes": {
    "id": "372c259c-4339-437d-b5e5-af02fe0d9dae",
    "timestamp": 1393877713000,
    "title": "AJAX upload souborů v Nette pomocí Fine Uploaderu",
    "slug": "ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2"
  },
  "body": "[Dříve](ajax-upload-souboru-v-nette-pomoci-fine-uploaderu) jsem psal o tom, jak použít Fine Uploader jakožto nástroj pro AJAXové nahrávání souborů na server. Původní článek však platí pouze pro verzi `3.*`, která je dnes již zastaralá. Pojďme si dnes ukázat v podstatě to samé, ale pro novější verzi `4.3+`, která se v učitých směrech poměrně zásadně liší od svého předchůdce. Tentokrát se to však pokusím vyřešit co nejjednodušeji.\n\nZačátek je vlastně úplně stejný. Musíme nalinkovat javascriptové soubory:\n\n```html\n<!-- jQuery -->\n<script src=\"{$basePath}/js/jquery.fineuploader-4.3.1.min.js\"></script>\n<script src=\"{$basePath}/js/nette.ajax.js\"></script>\n<script src=\"{$basePath}/js/main.js\"></script>\n```\n\nPoužití je úplně jednoduché, ve zjednodušené formě:\n\n```html\n<div id=\"image-uploader\"></div>\n```\n\nSnažím se ukázat opravdu jen kritické minimum, protože ty základní věci jsou stejné, případně dohledatelné v dokumentaci, takže se dají oba dva návody z velké části doplnit. Minule jsem však zatáhl do ukázek i poměrně hodně balastu, takže ten u staré verze nechám, ale bude následovat opravdu jen to nejnutnější.\n\nStejně tedy jako v předchozí verzi následuje javascriptový spouštěcí kód. Zde již vznikají určité odlišnosti:\n\n```javascript\n$(function () {\n\t$('#image-uploader').fineUploader({\n\t\tdebug: true, //hodí se pro lazení\n\t\trequest: {\n\t\t\tendpoint: 'pictures?do=uploadPicture'\n\t\t},\n\t\tretry: {\n\t\t\tenableAuto: true\n\t\t}\n\t});\n});\n```\n\nPoužití je tedy téměř stejné, až na to, že jsem úplně vypustil překlad textů. V této nové verzi jsou totiž novinkou šablony (ostatně proto také nové číslo verze). Uživatel-programátor má tak více pod kontrolou výsledný vzhled uploaderu:\n\n```html\n<script type=\"text/template\" id=\"qq-template\">\n\t<div class=\"qq-uploader-selector qq-uploader\">\n\t\t<div class=\"qq-upload-drop-area-selector qq-upload-drop-area\" qq-hide-dropzone>\n\t\t\t<span>Přetáhněte soubory sem</span>\n\t\t</div>\n\t\t<div class=\"qq-upload-button-selector qq-upload-button\">\n\t\t\t<div>Klikněte, nebo přetáhněte obrázky</div>\n\t\t</div>\n        <span class=\"qq-drop-processing-selector qq-drop-processing\">\n           <span>Zpracovávám přetažené soubory...</span>\n           <span class=\"qq-drop-processing-spinner-selector qq-drop-processing-spinner\"></span>\n        </span>\n\t\t<ul class=\"qq-upload-list-selector qq-upload-list\">\n\t\t\t<li>\n\t\t\t\t<div class=\"qq-progress-bar-container-selector\">\n\t\t\t\t\t<div class=\"qq-progress-bar-selector qq-progress-bar\"></div>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"qq-upload-spinner-selector qq-upload-spinner\"></span>\n\t\t\t\t<img class=\"qq-thumbnail-selector\" qq-max-size=\"100\" qq-server-scale>\n\t\t\t\t<span class=\"qq-edit-filename-icon-selector qq-edit-filename-icon\"></span>\n\t\t\t\t<span class=\"qq-upload-file-selector qq-upload-file\"></span>\n\t\t\t\t<input class=\"qq-edit-filename-selector qq-edit-filename\" tabindex=\"0\" type=\"text\">\n\t\t\t\t<span class=\"qq-upload-size-selector qq-upload-size\"></span>\n\t\t\t\t<a class=\"qq-upload-cancel-selector qq-upload-cancel\" href=\"#\">Zrušit</a>\n\t\t\t\t<a class=\"qq-upload-retry-selector qq-upload-retry\" href=\"#\">Opakovat</a>\n\t\t\t\t<a class=\"qq-upload-delete-selector qq-upload-delete\" href=\"#\">Smazat</a>\n\t\t\t\t<span class=\"qq-upload-status-text-selector qq-upload-status-text\"></span>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</script>\n```\n\nA opět následuje zpracování v handleru:\n\n```php\npublic function handleUploadPicture() {\n\t$uploader = new \\UploadHandler();\n\t$uploader->allowedExtensions = array(\"jpeg\", \"jpg\", \"png\", \"gif\");\n\t$result = $uploader->handleUpload(__DIR__ . '/../../www/uploads');\n\t$this->sendResponse(new Nette\\Application\\Responses\\JsonResponse($result));\n}\n```\n\nZde celkem není co pokazit, ale pokud by bylo potřeba vrátit chybu, provede se to opět pomocí `JsonResponse`:\n\n```php\n$this->sendResponse(new Nette\\Application\\Responses\\JsonResponse(array(\n\t\t'error' => $exc->getMessage(),\n)));\n```\n\nSamotná třída `UploadHandler` je pak opět k nalezení na [GitHubu](https://github.com/Widen/fine-uploader-server/blob/master/php/traditional/handler.php). Tento návod tedy mohu zakončit vlastní citací:\n\n> A to je vlastně úplně celé. Stačí tedy spustit Fine Uploader na straně klienta například podle oficiálních návodů, endpoint nastavit na nějaký handle v aplikaci a ten správně použit. To konkrétně obnáší odeslání JSON odpovědi o úspěšném zpracování obrázku."
}
