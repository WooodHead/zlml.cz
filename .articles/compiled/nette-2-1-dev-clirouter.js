export default {
  "attributes": {
    "id": "01c2866b-fd82-4562-ab63-dbab3505ee8e",
    "timestamp": 1363554156000,
    "title": "Nette 2.1-dev CliRouter",
    "slug": "nette-2-1-dev-clirouter"
  },
  "body": "<p>Routování CLI((Command Line Interface)) aplikací je oblast, o které se v Nette moc nemluví. A když mluví, tak divně (nebo staře). Což na jednu stranu dává smysl, protože tato routa existuje už od roku 2009. Na druhou stranu je to zvláštní, protože je stále experimentální.</p>\n<blockquote>\n<p>The unidirectional router for CLI.</p>\n<p>(experimental)</p>\n</blockquote>\n<p>Dokonce se už mluvilo o tom, že se zruší. No snad se to nestane...</p>\n<p>Proč o tom mluvím? Rád bych ukázal, jak se dá v nastávající verzi Nette tato routa použít. V nové verzi Nette se již routy nepíší do bootsrap.php jak tomu bylo (alespoň myslím) dříve. Tentokrát je v adresářové struktuře soubor router/<strong>RouterFactory.php</strong>, který se právě o routování postará. Tento soubor může vypadat například takto:</p>\n<pre><code class=\"lang-php\">&lt;?php\n\nnamespace App;\n\nuse Nette,\n    Nette\\Application\\Routers\\RouteList,\n    Nette\\Application\\Routers\\Route,\n    Nette\\Application\\Routers\\CliRouter;\n\n/**\n * Router factory.\n */\nclass RouterFactory {\n\n    private $container;\n\n    public function __construct(Nette\\DI\\Container $container) {\n        $this-&gt;container = $container;\n    }\n\n    /**\n     * @return \\Nette\\Application\\IRouter\n     */\n    public function createRouter() {\n        $router = new RouteList();\n        if ($this-&gt;container-&gt;parameters[&#39;consoleMode&#39;]) {\n            $router[] = new CliRouter(array(&#39;action&#39; =&gt; &#39;Cli:Cli:cron&#39;));\n        } else {\n            $router[] = new Route(&#39;rss.xml&#39;, &#39;Front:Blog:rss&#39;);\n            $router[] = new Route(&#39;user/&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]&#39;, array(\n                &#39;module&#39; =&gt; &#39;User&#39;,\n                &#39;presenter&#39; =&gt; &#39;Board&#39;,\n                &#39;action&#39; =&gt; &#39;default&#39;,\n            ));\n            $router[] = new Route(&#39;&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]&#39;, array(\n                &#39;module&#39; =&gt; &#39;Front&#39;,\n                &#39;presenter&#39; =&gt; &#39;Homepage&#39;,\n                &#39;action&#39; =&gt; &#39;default&#39;,\n            ));\n        }\n        return $router;\n    }\n\n}\n</code></pre>\n<p>Toto je reálná funkční ukázka (ze které jsem něco nepodstatného umazal). Jak je vidět, tak aplikaci mám rozdělenou na moduly, takže defaultní routa ukazuje do modulu Front, pak je k dispozici User modul, link na RSS a konečně CliRouter, který se naroutuje pouze v případě, že běží aplikace v konzolovém módu (CLI).</p>\n<p>Pokud se teď přesunu k presenterové části modulu Cli, mohu zde umístit dvě třídy. Klasický BasePresenter, který bude pro jistotu kontrolovat, jestli se opravdu jedná o consoleMode například takto:</p>\n<pre><code class=\"lang-php\">&lt;?php\n\nnamespace App\\CliModule;\n\nuse Nette;\n\nabstract class BasePresenter extends Nette\\Application\\UI\\Presenter {\n\n    public function startup() {\n        parent::startup();\n        if (!$this-&gt;context-&gt;parameters[&#39;consoleMode&#39;]) {\n            throw new Nette\\Security\\AuthenticationException;\n        }\n    }\n\n}\n</code></pre>\n<p>No a pak už stačí jen CliPresenter, který bude dědit od BasePresenteru, takže vždy dojde ke kontrole. Zde stačí metoda action*(), která se spustí podle naroutování. V mém případě se tedy jedná o actionCron():</p>\n<pre><code class=\"lang-php\">&lt;?php\n\nnamespace App\\CliModule;\n\nuse Nette;\n\nclass CliPresenter extends BasePresenter {\n\n    public function actionCron() {\n        echo &#39;FUNGUJU!&#39;;\n        $this-&gt;terminate();\n    }\n\n}\n</code></pre>\n<p>A teď to nejdůležitější! Aplikace se spustí pomocí terminálu jednoduchým příkazem <code>php index.php</code>. Samozřejmě je nutné ukázat na index Nette aplikace. No a samozřejmě se mohu odkázat i na jinou část aplikace dopsání parametru. Pokud bych chtěl podle výše uvedených souborů přejít na hlavní stránku, stačí napsat pouze <code>php index.php Front:Homepage:default</code>.</p>\n"
}
