[{"attributes":{"id":"2151f134-7f0e-43c0-8382-eab9d336b7ee","timestamp":1500731161000,"title":"How do we do serverless?","slug":"how-do-we-do-serverless"},"body":"In past few months, I moved completely from PHP backend to the JavaScript semi-frontend (not really backend but definitely not frontend - somewhere between). And I am glad I did it because finally, I can try every cool technology I always wanted but haven't had the opportunity. And one of these technologies is a serverless approach. It basically means that you still have servers but you are not taking care of the bare metal but you'll rather get computational power with all the fancy stuff like auto-scaling, high availability, related services orchestration and so on.\n\nHere at Kiwi.com (Prague), we are working on a lot of projects but one of them is more often pronounced - [the chatbot](http://www.czechcrunch.cz/2017/05/brnenske-kiwi-com-otevira-v-praze-novou-pobocku-se-zamerenim-na-umelou-inteligenci/). This chatbot should help our customer support to manage tasks more easily. But the interesting part is that this application is **completely serverless**. This is how it works.\n\n# It's just a function\n\nThe whole chatbot is just a function. Quite long and complicated one though. It's written in Node.js (ECMAScript 2017 - ES8 with a shit-ton of transpilers) and it runs on AWS Lambda. One of the best parts of the serverless is its deployment. We are using [Serverless Framework](https://serverless.com/) and that means that deployment to the serverless infrastructure is as easy as writing `serverless deploy`:\n\n```\n$ serverless deploy --stage staging\nServerless: Packaging service...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading artifacts...\nServerless: Uploading service .zip file to S3...\nServerless: Validating template...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n..........\nServerless: Stack update finished...\nService Information\nservice: chatbot\nstage: staging\nregion: eu-west-1\napi keys:\n  None\nendpoints:\n  POST - https://secret.eu-west-1.amazonaws.com/staging/\nfunctions:\n  chatbot: chatbot-staging-chatbot\nServerless: Removing old service versions...\n```\n\nWhat does this framework do? Firstly it creates a ZIP file with the already transpiled and tested code. It also creates [AWS CloudFormation](https://aws.amazon.com/cloudformation/) template and uploads it to the AWS S3 storage. Now the magic happens. The new environment is created/updated thanks to the CloudFormation template. In our case, it means that it creates API Gateways, Lambda functions, and DynamoDB tables. This way you can invoke Lambda function just by calling URL address.\n\nThe interesting part is that you can extend CloudFormation template however you want. In your case, we are just creating DynamoDB tables but I think you can do whatever you want (means whatever CloudFormation is able to do).\n\n# Dazzle me\n\nI'll show you just a simplified serverless definition (without the DynamoDB because it's too long), but the overall picture should be clear. The whole serverless infrastructure is defined in `serverless.yml`:\n\n```neon\nservice: chatbot\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  region: eu-west-1 # Ireland\n\nfunctions:\n  chatbot:\n    handler: dist/basicLambda.handler\n    events:\n      - http:\n          path: /\n          method: POST\n          cors: true\n          integration: lambda-proxy\n```\n\nIt's quite self-explanatory. It's like a scenario: just create AWS Lambda function from `dist/basicLambda.js` file and on `POST` invoke a function in that file called `handler` (and yeah, also support CORS please). Since we are executing only transpiled and tested code it's a good idea to upload just that file:\n\n```neon\npackage:\n  exclude:\n    - ./**\n  include:\n    - dist/*\n```\n\nDynamoDB and other services can be defined in the `resources` section. You just have to make sure that you'll setup IAM role permissions as well.\n\nAnd that's it. This is your \"ready for production\" environment. The last thing you have to do is just write the Lambda function for the chatbot. Easy...\n\n# Chatbot AWS Lambda function\n\nSince we are using so called `lambda-proxy` integration you have to take care of the inputs and outputs in your code on your own. But it's recommended and you should definitely do that.\n\n```javascript\nexport async function handler(\n  event: Object,\n  context: ?Object,\n  callback: (error: null, success: Object) => void,\n) {\n  // error handling and so on...\n\n  callback(null, {\n    statusCode: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*', // manual CORS (because of lambda-proxy)\n    },\n    body: JSON.stringify({\n      response: \"Sorry, I didn't understand your question. Say that again?\",\n    }),\n  });\n}\n```\n\nNow, for me, this was always so confusing. It's because you hear - just run the function on AWS Lambda. But what does it mean? You have your shiny program full of classes and files and not only one function to run. Well, this is why you have Webpack right? You just inline everything into one file with all the mangling and uglifying and you are almost ready. The last thing is to expose your program via one handler and for AWS Lambda it should be in form of CommonJS (Webpack fragment):\n\n```javascript\noutput: {\n  path: path.resolve(appDirectory, 'dist'),\n  filename: '[name].js',\n  libraryTarget: \"commonjs2\",\n},\n```\n\nAnd that's it. This is how we do serverless (not only for chatbot). You should definitely try it if you are courageous enough.","frontmatter":"id: 2151f134-7f0e-43c0-8382-eab9d336b7ee\ntimestamp: 1500731161000\ntitle: How do we do serverless?\nslug: how-do-we-do-serverless"},{"attributes":{"id":"ce9721e7-697b-4834-bb4c-89977f1b8399","timestamp":1497708814000,"title":"Get rid of GraphQLNonNull","slug":"get-rid-of-graphqlnonnull"},"body":"I mean not all of the occurrences but at least in GraphQL fields. This is exactly what we did in [Kiwi.com](https://www.kiwi.com/us/) while working on GraphQL API.\n\nThis idea didn't come out of nowhere. Actually, I've been thinking about it for a while but after [GraphQL-Europe](https://graphql-europe.org/) I have been convinced (unfortunately I haven't been there personally). But you may ask why? Why would I do that?\n\nThere are several reasons for it. Firstly it's prepared for the future (in terms of backward compatibility). This means that if you want to make field non-nullable you can do it anytime you want. But you cannot do the same thing vice versa because it's huge BC break for consumers of your API.\n\nBut more importantly, it has a more practical reason. As you probably know the graph in GraphQL consists of a lot of complicated paths and leaves. And every leaf can have different resolver function. In extreme situation, each resolver may be some kind of microservice and this microservice may fail unexpectedly. It's very wrong to let the whole node of the graph fail. And that's exactly what happens if you don't satisfy the non-null rule.\n\nFor example, let's run this query:\n\n```graphql\n{\n  allLocations(term: \"PRG\") {\n    edges {\n      node {\n        locationId\n        name\n      }\n      cursor\n    }\n  }\n}\n```\n\nThis query returns an array of all locations related to the search term sorted starting with the best result:\n\n```javascript\n{\n  \"data\": {\n    \"allLocations\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"type\": \"airport\",\n            \"name\": \"VÃ¡clav Havel Airport Prague\"\n          },\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjA=\"\n        },\n        {\n          \"node\": {\n            \"type\": \"city\",\n            \"name\": \"Prague\"\n          },\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjE=\"\n        },\n        ...\n      ]\n    }\n  }\n}\n```\n\nNow let's say that the field `name` is required (means non-nullable). Therefore server MUST return this field. But what happens if resolver for this field for some reason fails?\n\n```javascript\n{\n  \"data\": {\n    \"allLocations\": {\n      \"edges\": [\n        {\n          \"node\": null,\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjA=\"\n        },\n        {\n          \"node\": null,\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjE=\"\n        }\n      ]\n    }\n  },\n  \"errors\": [\n    {\n      \"message\": \"Cannot return null for non-nullable field Location.name.\",\n      \"locations\": ...,\n      \"path\": ...\n    },\n    ...\n  ]\n}\n```\n\nThis is not very nice. Especially if we know that the `type` field did not fail. This is why we prefer to write all fields as nullable. The result is much better in this case:\n\n\n```javascript\n{\n  \"data\": {\n    \"allLocations\": {\n      \"edges\": [\n        {\n          \"node\": {\n            \"type\": \"airport\",\n            \"name\": null\n          },\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjA=\"\n        },\n        {\n          \"node\": {\n            \"type\": \"city\",\n            \"name\": null\n          },\n          \"cursor\": \"YXJyYXljb25uZWN0aW9uOjE=\"\n        }\n      ]\n    }\n  }\n}\n```\n\nEven though it failed we still got as much as possible in the response. And that's way better. It's a responsibility of the customer (means implementer) to take into account that every field is nullable while implementing GraphQL API.\n\nIt worth to mention that there are very good use cases of `GraphQLNonNull`. For example, you want to make fields required (non-nullable) for input arguments and for `GraphQLInputObjectType`. So from this point of view, the title of this article should be \"Get rid of GraphQLNonNull in output types\"... :)\n\nIf you want to know more about this topic, I recommend you to read this thread on GitHub: https://github.com/facebook/graphql/issues/63. There is a lot of good arguments directly from creators of GraphQL and Facebook engineers.\n\nAfter converting your mind to this new approach it should be quite easy to write eslint rule for this (or whatever lint are you using). So far it really worth it.","frontmatter":"id: ce9721e7-697b-4834-bb4c-89977f1b8399\ntimestamp: 1497708814000\ntitle: Get rid of GraphQLNonNull\nslug: get-rid-of-graphqlnonnull"},{"attributes":{"id":"6952eca3-3942-4bfa-b68e-432772912eca","timestamp":1490538013000,"title":"React + Redux - Apollo =  FapFap","slug":"react-redux-apollo-fapfap"},"body":"Na konci minulÃ©ho roku jsem zaÄal nÄco jako virtuÃ¡lnÃ­ seriÃ¡l o React vs. PHP aplikaci. VÄera jsem na PoslednÃ­ sobotÄ byl upozornÄn na to, Å¾e uÅ¾ asi nepokraÄuju. To nenÃ­ pravda - pouze jsem je pÅestal ÄÃ­slovat... :) Po [GraphQL](2-graphql), vyÅeÅ¡enÃ­ [N+1 problÃ©mu](reseni-n-1-problemu-v-graphql), [architektuÅe serverovÃ© ÄÃ¡sti](hexagonalni-architektura) a [omezenÃ­ CSS kontextu](jak-na-lokalni-css-pro-react) v React komponentÃ¡ch je Äas podÃ­vat se podrobnÄji na komunikaci se serverem.\n\nVe vÃ½sledku jsem hodnÄ rÃ¡d, Å¾e jsem to tak oddaloval, protoÅ¾e jsem to asi tak tÅikrÃ¡t celÃ© pÅedÄlÃ¡val a koneÄnÄ mÃ¡m radost z toho jak to vypadÃ¡. VeÅ¡kerÃ© kÃ³dy tÃ½kajÃ­cÃ­ se [frontendu](https://github.com/adeira/connector-frontend) i [backendu](https://github.com/adeira/connector) jsou jako vÅ¾dy k dispozici online pod MIT.\n\n# KlientskÃ© komponenty\n\nAÅ¾ do nedÃ¡vnÃ© chvÃ­le jsem na stranÄ webovÃ©ho prohlÃ­Å¾eÄe pouÅ¾Ã­val pro komunikaci se serverem knihovnu Apollo. InternÄ Apollo vyuÅ¾Ã­vÃ¡ Redux store a jÃ¡ zaÄal hodnÄ vÃ¡Å¾nÄ zvaÅ¾ovat, Å¾e zaÄnu Redux store vyuÅ¾Ã­vat mnohem vÃ­ce. V tu chvÃ­li uÅ¾ nedÃ¡valo moc velkÃ½ smysl pouÅ¾Ã­vat Apollo a pÅiÅ¡lo mi zajÃ­mavÄjÅ¡Ã­ starat se o Redux store sÃ¡m.\n\nDÅÃ­ve jsem Apollo pouÅ¾Ã­val tak, Å¾e existovala vÅ¾dy nÄjakÃ¡ nadÅazenÃ¡ komponenta, kterÃ¡ se dotazovala serveru a pÅedÃ¡vala data jinÃ© komponentÄ. TakÅ¾e jsem mÄl komponenty, kterÃ½m se ÅÃ­kÃ¡ kontejnery (pouze tahajÃ­ data) a pÅedÃ¡vajÃ­ data pro vykreslenÃ­ tzv. prezentaÄnÃ­m komponentÃ¡m (pouze vykreslujÃ­, ale netahajÃ­ data).\n\nMyÅ¡lenka kontejnerÅ¯ a prezentaÄnÃ­ch komponent poÅÃ¡d zÅ¯stÃ¡vÃ¡. RozdÃ­l je teÄ v tom, Å¾e mÃ­sto toho, aby kontejner zÃ­skÃ¡val data prostÅednictvÃ­m Apolla, tak je pÅipojen k Redux ÃºloÅ¾iÅ¡ti a v okamÅ¾iku pÅipojenÃ­ komponenty do DOMu se spustÃ­ Redux akce pro naÄtenÃ­ dat:\n\n```javascript\nexport const AllCamerasContainer = class extends React.Component {\n\n  componentWillMount() {\n    this.props.dispatch(loadAllCameras());\n  }\n\n  render = () => { /* ... */ }\n\n};\n\nexport default connect()(AllCamerasContainer);\n```\n\nFunkce `this.props.dispatch` je k dispozici dÃ­ky nadÅazenÃ© komponentÄ, kterÃ¡ se vytvÃ¡ÅÃ­ pripojenÃ­m k Redux ÃºloÅ¾iÅ¡ti pomocÃ­ `connect()`.\n\nRedux funguje tak, Å¾e se pomocÃ­ funkce `dispatch` vyvolÃ¡ nÄjakÃ¡ akce/pÅÃ­kaz (zde naÄtenÃ­ vÅ¡ech kamer), ta prolÃ­tne reducerama coÅ¾ jsou ÃºplnÄ obyÄejnÃ© funkce, kterÃ© umÃ­ mÄnit podobu stavu Redux ÃºloÅ¾iÅ¡tÄ a nÃ¡slednÄ se tento novÃ½ stav uloÅ¾Ã­ a komponenta se automaticky pÅekreslÃ­. DÅ¯leÅ¾itÃ© je, Å¾e Redux si vlastnÄ drÅ¾Ã­ stav vÅ¡ech komponent u sebe v jednom velkÃ©m globÃ¡lnÃ­m ÃºloÅ¾iÅ¡ti a akce resp. reducery slouÅ¾Ã­ pro alespoÅ troÅ¡ku rozumnÃ© ovlÃ¡dÃ¡nÃ­ jeho obsahu. ZÃ¡roveÅ Redux ÃºloÅ¾iÅ¡tÄ nemÃ¡ z hlediska kÃ³du **nic spoleÄnÃ©ho s Reactem**. Redux je ke komponentÄ nÄjak napojen, ale mÅ¯Å¾e fungovat ÃºplnÄ bez Reactu.\n\nFunkce `loadAllCameras` slouÅ¾Ã­ pro vytvoÅenÃ­ objektu reprezentujÃ­cÃ­ nÄjakou akci. Ta se potom spouÅ¡tÃ­ pomocÃ­ `dispatch`. Akce je obyÄejnÃ½ JS objekt, kterÃ½ si nese informaci o typu akce + nÄjakÃ¡ dalÅ¡Ã­ dodateÄnÃ¡ data. Pokud vÅ¡ak chci data teprve naÄÃ­st, je nutnÃ© vytvÃ¡Ået mÃ­sto objektu funkci, kterÃ¡ tak uÄinÃ­:\n\n```javascript\n// relies on Redux Thunk middleware\nexport const loadAllCameras = () => {\n  return dispatch => {\n\n    dispatch({ // spuÅ¡tÄnÃ­ akce (coÅ¾ je jen obyÄejnÃ½ objekt) uvnitÅ jinÃ© akce\n      type: ALL_CAMERAS_LOADING,\n    });\n\n    fetch(allCamerasQuery).then(({data}) => { // funkce pro zÃ­skÃ¡nÃ­ dat (kvÅ¯li tomu je nutnÃ½ Thunk)\n\n      dispatch({ // opÄt jen obyÄejnÃ¡ akce spuÅ¡tÄnÃ¡ uvnitÅ jinÃ© akce\n        type: ALL_CAMERAS_LOAD_SUCCESS,\n        cameras: data.allCameras,\n      });\n\n    });\n  }\n};\n```\n\nZde zaÄÃ­nÃ¡ bÃ½t vidÄt dÅ¯vod, proÄ jsem opustil Apollo. DÃ­ky tomu, Å¾e mÃ¡m teÄ v ruce veÅ¡kerÃ© akce a reducery, tak mohu pohodlnÄ spouÅ¡tÄt a ÅetÄzit akce jak se mi zachce. AÅ¾ Redux spustÃ­ tuto akci (resp. [Redux Thunk](https://github.com/gaearon/redux-thunk)), tak si jen najde ten sprÃ¡vnÃ½ reducer (podle typu `ALL_CAMERAS_LOADING` resp. `ALL_CAMERAS_LOAD_SUCCESS`), ten upravÃ­ obsah Redux ÃºloÅ¾iÅ¡tÄ a protoÅ¾e mÃ¡me deklarativnÃ­ React, tak se data automaticky pÅekreslÃ­.\n\n# Server Fetcher\n\nV pÅedchozÃ­ akci bylo vidÄt, Å¾e se volÃ¡ funkce `fetch`. To je ÃºplnÄ jednoduchÃ¡ funkce, kterÃ¡ poÅ¡le na server GraphQL dotaz a vrÃ¡tÃ­ odpovÄÄ (resp. Promise). VlastnÄ dÄlÃ¡ jen to, Å¾e pomocÃ­ [isomorphic-fetch](https://github.com/matthew-andrews/isomorphic-fetch) poloÅ¾Ã­ dotaz ve sprÃ¡vnÃ©m formÃ¡tu:\n\n```javascript\nreturn fetch(config.apiAddress, {\n  method: 'POST',\n  body: JSON.stringify({\n    query: graphQuery, // pÅichÃ¡zÃ­ jako argument fetcheru\n    variables: variables, // dtto\n    operationName: operationName // dtto\n  }),\n  headers\n}).then(response => response.json())\n  .then(json => {\n    return json; // zde budou pÅÃ­chozÃ­ data z API\n  });\n```\n\nPosklÃ¡dat potÅebnÃ© hlaviÄky je otÃ¡zkou nÄkolika mÃ¡lo sekund:\n\n```javascript\nlet headers = {\n  Accept: '*/*',\n  'Content-Type': 'application/json'\n};\nlet token = Authenticator.getToken(); // localStorage\nif (token !== null) {\n  headers.authorization = token;\n}\n```\n\nAsi by bylo moÅ¾nÃ© vracet rovnou pole `data`, kterÃ© GraphQL API vracÃ­, aby nebylo nutnÃ© dÄlat destructing v akcÃ­ch, ale to uÅ¾ jsou jen kosmetickÃ© detaily.\n\nTeÄ by tedy mÄlo bÃ½t zÅejmÃ© nÃ¡sledujÃ­cÃ­:\n- v Reactu existujÃ­ kontejnery, coÅ¾ jsou komponenty, kterÃ© **tahajÃ­ data**\n- existujÃ­ takÃ© prezentaÄnÃ­ komponenty, kterÃ© **jen vykreslujÃ­ data** podle `props`\n- kontejnery zÃ­skÃ¡vajÃ­ data z Redux ÃºloÅ¾iÅ¡tÄ spuÅ¡tÄnÃ­m akce pÅi pÅipojovÃ¡nÃ­ kontejneru do DOMu (`componentWillMount`)\n- souÄÃ¡stÃ­ spuÅ¡tÄnÃ­ akce mÅ¯Å¾e bÃ½t naÄtenÃ­ tÄchto dat do ÃºloÅ¾iÅ¡tÄ (pokud tam jiÅ¾ nejsou)\n- na server se poÅ¾adavky posÃ­lajÃ­ jako jednoduchÃ½ POST s tÄlem obsahujÃ­cÃ­m GraphQL dotaz\n- soubÄÅ¾nÄ s tÄlem POST poÅ¾adavku je nutnÃ© odeslat takÃ© autorizaÄnÃ­ hlaviÄky (pokud to aplikace vyÅ¾aduje)\nOK? MoÅ¾nÃ¡ to bylo rychlÃ©, ale [mrknÄte na kÃ³d](https://github.com/adeira/connector-frontend) a popÅ. si to vyzkouÅ¡ejte. Nic sloÅ¾itÃ©ho... :)\n\n# PÅijetÃ­ poÅ¾adavku na PHP serveru\n\nDostÃ¡vÃ¡me se do oblasti, ve kterÃ© [se vypastÃ­](https://forum.nette.org/cs/28370-data-z-post-request-body-reactjs-appka-se-po-ceste-do-php-ztrati) pÅekvapivÄ hodnÄ lidÃ­. Na stranÄ serveru je tÅeba pÅistupovat k POST datÅ¯m [troÅ¡ku jinak](https://github.com/adeira/connector/blob/c501227a4429dba493624ca9fa85745fb5f1839c/instances/Connector/Infrastructure/Delivery/Http/GraphqlEndpoint.php#L62), neÅ¾ by mohlo bÃ½t zÅejmÃ©. K tÃ©to troÅ¡ce teorie bude potÅeba nÃ¡sledujÃ­cÃ­ PHP kÃ³d:\n\n```php\n<?php\n\nvar_dump(\n  $_POST,\n  file_get_contents('php://input')\n);\n```\n\nCo se stane, pokud odeÅ¡leme POST poÅ¾adavek obsahujÃ­cÃ­ JSON tÅeba pomocÃ­ konzole v prohlÃ­Å¾eÄi?\n\n```javascript\nvar xhr = new XMLHttpRequest();\nxhr.open(\"POST\", \"test.php\", true);\nxhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\nxhr.send(\"{a:'b'}\");\n```\n\nVrÃ¡tÃ­ se tato odpoveÄ:\n\n```\narray(1) {\n  [\"{a:'b'}\"]=>\n  string(0) \"\"\n}\nstring(7) \"{a:'b'}\"\n```\n\nObsah `$_POST` pole mÅ¯Å¾e bÃ½t zvlÃ¡Å¡tnÃ­, ale s tÃ­m by se dalo Å¾Ã­t. Vzhledem k tomu, Å¾e se poÅ¾adavek posÃ­lÃ¡ jako formulÃ¡Å, tak se oÄekÃ¡vÃ¡ troÅ¡ku jinÃ½ formÃ¡t dat:\n\n```javascript\nxhr.send(\"a=1&b=2\");\n```\n\nV tomto pÅÃ­padÄ pole pÄknÄ expanduje:\n\n```\narray(2) {\n  [\"a\"]=>\n  string(1) \"1\"\n  [\"b\"]=>\n  string(1) \"2\"\n}\nstring(7) \"a=1&b=2\"\n```\n\nCo se vÅ¡ak stane, pokud zmÄnÃ­me hlaviÄku poÅ¾adavku `Content-Type`?\n\n```javascript\nvar xhr = new XMLHttpRequest();\nxhr.open(\"POST\", \"test.php\", true);\nxhr.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\nxhr.send(\"a=1&b=2\");\n```\n\nPOST pole bude zcela prÃ¡zdnÃ©! (nikoliv vÅ¡ak `php://input`)\n\n```\narray(0) {\n}\nstring(7) \"a=1&b=2\"\n```\n\nJak je totiÅ¾ psÃ¡no v dokumentaci, tak `$_POST` neobsahuje vÅ¡echna data, kterÃ¡ jsou na server odeslÃ¡na jako POST, nÃ½brÅ¾:\n\n> An associative array of variables passed to the current script via the HTTP POST method **when using application/x-www-form-urlencoded or multipart/form-data as the HTTP Content-Type** in the request.\n\nDruhÃ¡ polovina vÄty je extrÃ©mnÄ dÅ¯leÅ¾itÃ¡. TakÃ© je z pÅedchozÃ­ch ukÃ¡zek vidÄt, Å¾e jedinÃ© mÃ­sto, kde jsou data k dispozici je prÃ¡vÄ input stream `php://input`. Z toho dÅ¯vodu je na serveru k JSON datÅ¯m nutnÃ© pÅistupovat rovnou pÅÃ­mo pomocÃ­ `file_get_contents('php://input')` (tak to dÄlÃ¡ vnitÅnÄ `Nette/Http/RequestFactory`) nebo pomocÃ­ `$httpRequest->getRawBody()`, coÅ¾ je ÃºplnÄ to samÃ©, jen vÃ­ce schovanÃ© a vÃ­ce objektovÃ©.\n\nNynÃ­ jiÅ¾ staÄÃ­ pouze ovÄÅit uÅ¾ivatele, jestli se mÅ¯Å¾e API vÅ¯bec ptÃ¡t, zÃ­skat JSON, rozparsovat dotaz a poslat jej nÄjakÃ© GraphQL knihovnÄ aÅ¥ se postarÃ¡ o vÅ¡echny strasti tohoto API. VÅ¡e je vidÄt v tomto jednoduchÃ©m [GraphQL endpointu](https://github.com/adeira/connector/blob/c501227a4429dba493624ca9fa85745fb5f1839c/instances/Connector/Infrastructure/Delivery/Http/GraphqlEndpoint.php).\n\nKdyby nÄkdo prahnul po poÅÃ¡dnÃ© nÃ¡loÅ¾i ucelenÃ©ho textu, tak je moÅ¾nÃ© sledovat [tento soubor](https://github.com/mrtnzlml/dp-latex/blob/master/main.pdf) (stÃ¡le rozdÄlanÃ½), kterÃ½ jednou zaÄas troÅ¡ku povyroste. NÄjakÃ© zÃ¡kladnÃ­ znalosti problematicky jsou nutnÃ©, ale pouÅ¾itÃ½ jazyk by mÄl bÃ½t srozumitelnÃ½ vÄtÅ¡inÄ lidÃ­. PÅipomÃ­nky jsou vÃ­tÃ¡ny, neÅ¾ bude pozdÄ... :)","frontmatter":"id: 6952eca3-3942-4bfa-b68e-432772912eca\ntimestamp: 1490538013000\ntitle: React + Redux - Apollo =  FapFap\nslug: react-redux-apollo-fapfap"},{"attributes":{"id":"112c84ae-680a-4d72-8aa3-96e8efeb8f1d","timestamp":1488119652000,"title":"Jak na lokÃ¡lnÃ­ CSS pro React","slug":"jak-na-lokalni-css-pro-react"},"body":"KdyÅ¾ jsem opouÅ¡tÄl koncept [webovÃ½ch komponent](1-od-komponent-zpet-ke-komponentam) a pÅechÃ¡zel jsem k Reactu, tak mÄ nejvÃ­ce mrzelo, Å¾e pÅijdu o vÅ¡echny zajÃ­mavÃ© vlastnosti shadow DOMu. Ve webovÃ½ch komponentÃ¡ch se to mÃ¡ tak, Å¾e jak JS tak CSS jsou souÄÃ¡stÃ­ jednÃ© Å¡ablony a neovlivÅujÃ­ globÃ¡lnÃ­ prostor. To je u Reactu bez problÃ©mu z pohledu JS. Z pohledu CSS je to vÅ¡ak jinÃ¡ pohÃ¡dka. JakÃ½koliv styl definovanÃ½ v rÃ¡mci komponenty se definuje pro celou aplikaci. PÅÃ­klad jednoduchÃ© hlaviÄky:\n\n```js\nimport React from 'react';\nimport './Header.css';\n\nexport default () =>\n  <div className=\"header\">\n\t  {/* dalÅ¡Ã­ JSX hlaviÄky */}\n  </div>\n```\n\nKdy CSS soubor obsahuje styly pro header:\n\n```css\n.header {\n  /* nÄjakÃ© ty styly */\n}\n```\n\nDÃ­ky Webpacku je moÅ¾nÃ© takto naÄÃ­tat CSS styly v komponentÄ, ale `.header` je k dispozici v celÃ© aplikaci (pokud je tam komponenta pouÅ¾ita). Pak ale komponenty troÅ¡ku postrÃ¡dajÃ­ smysl a mohl bych to klidnÄ zase patlat v jednom hlavnÃ­m CSS souboru. VlastnÄ jsem vÅ¯bec nic nezÃ­skal a musÃ­m si dÃ¡vat velkÃ½ pozor na to, co dÄlÃ¡m.\n\nNaÅ¡tÄstÃ­ existuje jednoduchÃ© ÅeÅ¡enÃ­ a tÃ­m jsou [CSS moduly](https://github.com/css-modules/css-modules). StaÄÃ­ pouze troÅ¡ku zmÄnit Webpack nastavenÃ­ a chovÃ¡nÃ­ CSS se kompletnÄ zmÄnÃ­. ZatÃ­mco pÅ¯vodnÃ­ nastavenÃ­ bylo takovÃ©:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: 'style-loader!css-loader?importLoaders=1!postcss-loader'\n      }\n    ]\n  }\n}\n```\n\nTak novÃ© bude vypadat takto:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'style-loader'\n          },\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 1,\n              modules: true, // Enable/Disable CSS Modules\n              localIdentName: '[name]__[local]--[hash:base64:5]',\n            }\n          },\n          {\n            loader: 'postcss-loader'\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nJe to vlastnÄ ta samÃ¡ konfigurace, jen jsem zapnul CSS moduly. Od tÃ©to chvÃ­le se veÅ¡kerÃ© CSS chovajÃ­ lokÃ¡lnÄ pouze pro danou komponentu. Je tÅeba jen upravit pouÅ¾itÃ­ tÄchto novÃ½ch stylÅ¯ v komponentÄ:\n\n```js\nimport React from 'react';\nimport styles from './Header.css';\n\nexport default () =>\n  <div className={styles.header}>\n\t  {/* dalÅ¡Ã­ JSX hlaviÄky */}\n  </div>\n```\n\nCo se stane s vÃ½stupem? MÃ­sto CSS tÅÃ­dy se budou generovat (+-) unikÃ¡tnÃ­ idenfikÃ¡tory (s nÄjakou nÃ¡povÄdou pro development):\n\n```html\n<div class=\"Header__header--3dxwh\">\n  <!-- dalÅ¡Ã­ HTML hlaviÄky -->\n</div>\n```\n\nResp. na produkci kde nenÃ­ nastaveno `localIdentName` takto:\n\n```html\n<div class=\"_3dxwhqIVz2ZHHrfQ6crpKp\">\n  <!-- dalÅ¡Ã­ HTML hlaviÄky -->\n</div>\n```\n\nTÃ­m se zajistÃ­, Å¾e CSS bude fungovat jen v rÃ¡mci jednÃ© komponenty. JenÅ¾e to nenÃ­ ÃºplnÄ ultimÃ¡tnÃ­ ÅeÅ¡enÃ­. NÄkterÃ© styly je dobrÃ© mÃ­t dostupnÃ© v celÃ© aplikaci. No tak tÅeba styly zÃ¡kladnÃ­ch HTML elementÅ¯ jsou stÃ¡le definovÃ¡ny jako globÃ¡lnÃ­. Pokud vÅ¡ak potÅebujeme nÄjakou CSS tÅÃ­du, tak je to moÅ¾nÃ© pomocÃ­ `:global` prefixu:\n\n```css\n:global .clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n:global .wrapper--fluid {\n  margin-left: 5rem;\n  margin-right: 5rem;\n}\n```\n\nAÄkoliv je z tohoto ÃºtrÅ¾ku vidÄt pozÅ¯statek BEM zÃ¡pisu, tak uÅ¾ to prakticky nenÃ­ potÅeba.\n\nPodÃ­vejte se, jak vypadÃ¡ [takovÃ¡ zmÄna](https://github.com/adeira/connector-frontend/commit/e3106bd84952da4350af0d9a9329a3f747724571) v jednom commitu. To Åekne vÃ­ce neÅ¾ 1000 slov... :)","frontmatter":"id: 112c84ae-680a-4d72-8aa3-96e8efeb8f1d\ntimestamp: 1488119652000\ntitle: Jak na lokÃ¡lnÃ­ CSS pro React\nslug: jak-na-lokalni-css-pro-react"},{"attributes":{"id":"ad9d4e96-b786-4f75-a6ca-96c85746cef7","timestamp":1488109164000,"title":"4 zpÅ¯soby prÃ¡ce s formulÃ¡Åem v Å¡ablonÄ","slug":"4-zpusoby-prace-s-formularem"},"body":"VelkÃ¡ ÄÃ¡st ÄlÃ¡nkÅ¯ na tomto blogu jsou reakcÃ­ na nÄjakÃ½ reÃ¡lnÃ½ problÃ©m. NehledÄ na to, kde jsem (tÅeba na vÄerejÅ¡Ã­m [React workshopu](http://blog.id-sign.com/react-workshop/)), tak odpovÃ­dÃ¡m na dotazy ohlednÄ Nette. Je to v poÅÃ¡dku, rÃ¡d pomÅ¯Å¾u. Jsou vÅ¡ak dotazy, kterÃ© se neustÃ¡le opakujÃ­. Toto je jeden z nich:\n\n> FormulÃ¡Åe v Nette jsou straÅ¡nÃ½ voser. Jak to dÄlat lÃ©pe?\n\nVÄtÅ¡inou takto vÃ¡gnÄ to vÅ¾dy zaÄÃ­nÃ¡. NÃ¡sleduje stejnÃ© koleÄko - vysvÄtlÃ­m proÄ se to tak dÄlÃ¡, popÃ­Å¡u jinÃ½ pÅÃ­stup k formulÃ¡ÅÅ¯m, tazatel je spokojen, podÃ­vÃ¡m se do dokumentace, Å¾e to tam opravdu je a ÄekÃ¡m na dalÅ¡Ã­ stejnÃ½ dotaz. Proto si teÄ dovolÃ­m vyzdvihnout nad rÃ¡mec dokumentace nÄkolik zÃ¡kladnÃ­ch zpÅ¯sobÅ¯, jak s formulÃ¡Åi v Nette pracovat.\n\n# PrvnÃ­ zpÅ¯sob - lÃ­nÃ½ Ota\n\nTento zpÅ¯sob znÃ¡ asi ÃºplnÄ kaÅ¾dÃ½. Pro superrychlÃ© vytvoÅenÃ­ formulÃ¡Åe jej staÄÃ­ nadefinovat v presenteru nÄjak takto:\n\n```php\nprotected function createComponentComplicatedForm(): \\Nette\\Application\\UI\\Form\n{\n  $form = new \\Nette\\Application\\UI\\Form;\n  $form->addSelect('selectNo1', NULL, ['Item 1', 'Item 2']);\n  $form->addSubmit('send', 'Odeslat');\n  $form->onSuccess[] = function (\\Nette\\Application\\UI\\Form $form, \\stdClass $values) {\n    bdump($values);\n    throw new \\Nette\\NotImplementedException;\n  };\n  return $form;\n}\n```\n\nA pouÅ¾Ã­t v pÅÃ­sluÅ¡nÃ© Å¡ablonÄ pomocÃ­ `control` makra:\n\n```\n{control complicatedForm}\n```\n\nJe to velmi jednoduchÃ© ÅeÅ¡enÃ­ a prakticky se zase aÅ¾ tolik nepouÅ¾Ã­vÃ¡. VÄtÅ¡ina lidÃ­ pÅijde pomÄrnÄ rychle na to, Å¾e potÅebujÃ­ daleko vÄtÅ¡Ã­ flexibilitu, kterou nabÃ­zÃ­ dalÅ¡Ã­ zpÅ¯sob v poÅadÃ­. PodÃ­vejme se vÅ¡ak co se dÄje kdyÅ¾ se takovÃ½ formulÃ¡Å odeÅ¡le. Plyne z toho totiÅ¾ jedna dÅ¯leÅ¾itÃ¡ vlastnost, na kterou bude potÅeba myslet pozdÄji.\n\nFormulÃ¡Å se odesÃ­lÃ¡ jako takovÃ½ zvlÃ¡Å¡tnÃ­ signÃ¡l s tÄmito POST daty:\n\n```\nselectNo1=0&send=Odeslat&_do=complicatedForm-submit\n```\n\nV prÅ¯bÄhu Å¾ivotnÃ­ho cyklu presenteru (pÅed `beforeRender`) dojde ke zpracovÃ¡nÃ­ tohoto signÃ¡lu. KonkrÃ©tnÄ se nad formulÃ¡Åem zavolÃ¡ metoda `signalReceived` resp. v pÅÃ­padÄ formulÃ¡Åe `fireEvents`. PomÄrnÄ zÃ¡hy se zavolajÃ­ zÃ¡kladnÃ­ validace vÅ¡ech formulÃ¡ÅovÃ½ch prvkÅ¯. SchvÃ¡lnÄ jsem v pÅÃ­kladu zvolil select, protoÅ¾e je na nÄm hezky vidÄt, Å¾e kontroluje co uÅ¾ivatel odeslal v selectu za hodnoty. Pokud je odeslanÃ¡ hodnota k dispozici v pÅedem nadefinovanÃ©m formulÃ¡Åi, tak se vybere. Co se stane pokud uÅ¾ivatel (zÃ¡Å¡kodnÃ­k) odeÅ¡le nÄco jinÃ©ho?\n\n```\nselectNo1=666&send=Odeslat&_do=complicatedForm-submit\n```\n\nV tomto pÅÃ­padÄ metoda `getValue` vrÃ¡tÃ­ hodnotu `NULL` a validace takovÃ©ho formulÃ¡Åe nebude ÃºspÄÅ¡nÃ¡. To vyÃºstÃ­ v chybovou hlÃ¡Å¡ku `Please select a valid option.` - automaticky. Asi znÃ¡mÃ¡ vlastnost a do chvÃ­le neÅ¾ Åeknu jinak bude platit.\n\n# DruhÃ½ zpÅ¯sob - neÅ¡Å¥astnÃ½ Karel\n\nZde se vÄtÅ¡ina lidÃ­ zasekne a nÃ¡dÃ¡vÃ¡. ProtoÅ¾e vykreslovÃ¡nÃ­ formulÃ¡Åe je v pÅedchozÃ­m pÅÃ­padÄ moc kostrbatÃ¡ a vlastnÃ­ PHP rendery nejsou moc nÃ¡pomocnÃ©, pÅistoupÃ­me k ruÄnÃ­mu vykreslovÃ¡nÃ­ (mÃ­sto `control` makra):\n\n```\n{form complicatedForm}\n  {input send}\n{/form}\n```\n\nUÅ¾ tady si vÄtÅ¡ina lidÃ­ alespoÅ jednou vylÃ¡me zuby (jÃ¡ to dÄlÃ¡m pravidelnÄ). PÅedchozÃ­ kÃ³d totiÅ¾ **nebude fungovat**. FormulÃ¡Å se ke vÅ¡Ã­ smÅ¯le sice odeÅ¡le, ale neudÄlÃ¡ vÅ¯bec nic. Pro sprÃ¡vnÃ© fungovÃ¡nÃ­ je nutnÃ© vykreslit vÅ¡echny formulÃ¡ÅovÃ© prvky:\n\n```\n{form complicatedForm}\n  {input selectNo1}\n  {input send}\n{/form}\n```\n\nProÄ? Co se dÄje? Tato definice formulÃ¡Åe totiÅ¾ nenÃ­ sprÃ¡vnÃ¡. Nette vÃ­, Å¾e mÃ¡ bÃ½t ve formulÃ¡Åi select a mÃ¡ mÃ­t nÄjakÃ© hodnoty, ale ty hodnoty nesedÃ­ s tÃ­m, co bylo odeslÃ¡no (pamatujete?). InternÄ se skuteÄnÄ vyhodÃ­ chyba `Please select a valid option.`, ale tu nikde nevykreslujeme, takÅ¾e se zdÃ¡, Å¾e to prostÄ nefunguje. No fakt, vyzkouÅ¡ejte si to:\n\n```html\n{form complicatedForm}\n  <ul class=\"errors\" n:if=\"$form->hasErrors()\">\n    <li n:foreach=\"$form->errors as $error\">{$error}</li>\n  </ul>\n  {*{input selectNo1}*}\n  {input send}\n{/form}\n```\n\nNa to je tÅeba dÃ¡vat velkÃ½ bacha. Tento zpÅ¯sob je dostateÄnÃ½ snad pro vÅ¡echno co je potÅeba. Prakticky je vÅ¡ak nevhodnÃ½...\n\n# TÅetÃ­ zpÅ¯sob - kodÃ©rka Silvie\n\nJe velkÃ¡ Å¡koda, Å¾e o tomto zpÅ¯sobu nevÃ­ spousta lidÃ­ co potkÃ¡vÃ¡m. KodÃ©r vÄtÅ¡inou vymyslÃ­ nÃ¡dhernou Å¡ablonu s formulÃ¡Åem (s mnohem komplikovanÄjÅ¡Ã­m neÅ¾ je tento):\n\n```html\n<form action=\"\" method=\"post\" id=\"myAwesomeFormId\">\n  <select name=\"selectNo1\" id=\"myAwesomeSelectId\">\n    <option value=\"0\" selected=\"true\">Item 1</option>\n    <option value=\"1\">Item 2</option>\n  </select>\n  <input type=\"submit\" name=\"send\" value=\"Odeslat\">\n</form>\n```\n\nTeÄ se ale dostÃ¡vÃ¡m do problÃ©mu, protoÅ¾e mÃ¡m krÃ¡snÃ½ formulÃ¡Å a mÄl bych jej zachovat. MÃ¡m vÅ¡ak takÃ© jeho PHP definici a teÄ bych to potÅeboval nÄjak naroubovat. Zde se stÃ¡vajÃ­ ty osudovÃ© chyby, kvÅ¯li kterÃ½m kaÅ¾dÃ½ nadÃ¡vÃ¡ - zaÄne pÅepisovÃ¡nÃ­ do druhÃ©ho zpÅ¯sobu a hackovÃ¡nÃ­ vÅ¡eho co si kodÃ©r vymyslel. KdyÅ¾ to dobÅe dopadne, tak bude formulÃ¡Å vypadat snad stejnÄ jako vypadal pÅ¯vodnÄ. Snad...\n\nTo je ale zbyteÄnÃ©. Existuje lepÅ¡Ã­ zpÅ¯sob pomocÃ­ `n:name` makra v Latte. SkuteÄnÄ formulÃ¡Å pouze naroubujeme na ten v PHP a smaÅ¾eme nepotÅebnÃ© vÄci:\n\n```html\n<form n:name=\"complicatedForm\" id=\"myAwesomeFormId\">\n  <select n:name=\"selectNo1\" id=\"myAwesomeSelectId\"/>\n  <input n:name=\"send\"/>\n</form>\n```\n\nFormulÃ¡Å funguje poÅÃ¡d stejnÄ, ale dokonce se i zjednoduÅ¡il! No nicmÃ©nÄ asi je z toho cÃ­tit, Å¾e poÅÃ¡d je na stranÄ PHP dost prÃ¡ce (vlastnÄ veÅ¡kÃ¡ potÅebnÃ¡ zodpovÄdnost) a svoboda v Å¡ablonÄ je jen ÄÃ¡steÄnÃ¡. Zde pÅichÃ¡zÃ­ ke slovu poslednÃ­ zpÅ¯sob.\n\n# ÄtvrtÃ½ zpÅ¯sob - blÃ¡znivÃ½ Joe\n\nVÅ¡echno dÅÃ­ve zmÃ­nÄnÃ© se mi nemusÃ­ lÃ­bit. KaÅ¡lu na nÄjakÃ© definice v PHP, kaÅ¡lu na automatickÃ© kontroly. Chci prostÄ vzÃ­t formulÃ¡Å od kodÃ©ra, odeslat ho a sÃ¡m si ho zpracovat. Je to tak tÄÅ¾kÃ© pochopit?! NenÃ­ milÃ½ Joe. Co to udÄlat takto - zaÄnÄme s naroubouvÃ¡nÃ­m formulÃ¡Åe (ale jen fomulÃ¡Åe!):\n\n```html\n<form n:name=complicatedForm id=\"myAwesomeFormId\">\n  <select name=\"selectNo1\" id=\"myAwesomeSelectId\">\n    <option value=\"0\" selected=\"true\">Item 1</option>\n    <option value=\"1\">Item 2</option>\n  </select>\n  <input type=\"submit\" name=\"send\" value=\"Odeslat\">\n</form>\n```\n\nTÃ­m se zajistÃ­, Å¾e se fomulÃ¡Å odeÅ¡le na tu sprÃ¡vnou adresu tou sprÃ¡vnou metodou. Jinak jinak jsem do formulÃ¡Åe nezasÃ¡hl a je tedy ÃºplnÄ stejnÃ½, jako jej poslal kodÃ©r. Do puntÃ­ku. VeÅ¡kerÃ¡ data z formulÃ¡Åe jsou potom k dispozici zde:\n\n```php\nprotected function createComponentComplicatedForm(): \\Nette\\Application\\UI\\Form\n{\n  $form = new \\Nette\\Application\\UI\\Form;\n  $form->onSuccess[] = function (\\Nette\\Application\\UI\\Form $form) {\n    dump($form->getHttpData()); //ZDE\n  };\n  return $form;\n}\n```\n\nCo se stane, kdyÅ¾ zÃ¡Å¡kodnÃ­k odeÅ¡le nÄco co by nemÄlo v selectu bÃ½t (viz prvnÃ­ pÅÃ­klad)? PÅesnÄ tak, prostÄ se to odeÅ¡le a na serveru to pÅistane. VeÅ¡kerÃ¡ kontrola je tedy na programÃ¡torovi. K samotnÃ© hodnotÄ selectu je moÅ¾no pÅistouput takto:\n\n```php\n$form->getHttpData($form::DATA_LINE, 'selectNo1')\n```\n\nTo `DATA_LINE` je vhodnÃ© pro jednoÅÃ¡dkovÃ© vstupy, protoÅ¾e se na pozadÃ­ provede nÃ¡sledujÃ­cÃ­ oÅ¡etÅenÃ­:\n\n```php\n\\Nette\\Utils\\Strings::trim(strtr($value, \"\\r\n\", '  '))\n```\n\nPoÅÃ¡d ale platÃ­, Å¾e mÅ¯Å¾e pÅijÃ­t ze selectu neÄekanÃ¡ hodnota a nelze niÄemu vÄÅit. JednÃ¡ se vÅ¡ak o naprosto svobodnÃ½ zpÅ¯sob, kterÃ½ je moÅ¾nÃ© kombinovat s pÅedchozÃ­m. Pokud tedy mÃ¡te _\"neskuteÄnÄ sloÅ¾itÃ½ formulÃ¡Å\"_, kterÃ½ je _\"uÅ¾ nakÃ³dovanÃ½\"_ a jeho definice _\"mÃ¡ asi 500 ÅÃ¡dek\"_ a je to _\"tak komplikovanÃ©, Å¾e se v tom nikdo nevyznÃ¡\"_ a bylo by _\"lepÅ¡Ã­, kdybych si to mohl udÄlat sÃ¡m\"_, tak vÄzte, Å¾e to jde.\n\n# ÄastÃ© dotazy\n\n- PouÅ¾il jsi to nÄkdy ve skuteÄnosti? Ano.\n- Je tam nÄjakÃ½ problÃ©m o kterÃ©m bych mÄl vÄdÄt? Krom jiÅ¾ zmiÅovanÃ©ho nevÃ­m o Å¾Ã¡dnÃ©m. Je to prostÄ rÅ¯Äo fÅ¯Äo...\n- ProÄ to nenÃ­ v dokumentaci? [Je to tam.](https://doc.nette.org/en/2.4/forms#toc-manual-rendering)\n- ProÄ nenÃ­ ten poslednÃ­ zpÅ¯sob v dokumentaci? [Je to tam.](https://doc.nette.org/en/2.4/forms#toc-low-level-forms)\n- Tak to tedy nenÃ­ v ÄeskÃ© verzi! I tam [to](https://doc.nette.org/cs/2.4/forms#toc-low-level-formulare) obojÃ­ [je](https://doc.nette.org/cs/2.4/forms#toc-manualni-vykreslovani)\n- Tak to tam dÅÃ­v nebylo. Je to tam [od verze 2.1](https://doc.nette.org/cs/2.1/forms), kdy se tato moÅ¾nost objevila.\n- I ve starÃ© EN verzi? [Ano](https://doc.nette.org/en/2.1/forms)\n- Å lo by to udÄlat i bez `getHttpData`? Ano, ale uÅ¾ v tom nevidÃ­m moc velkÃ½ smysl.\n- ProÄ? To uÅ¾ bych mohl rovnou pracovat s `$_POST`, ale tato metoda mÄ pÄknÄ odstÃ­nÃ­ a [oÅ¡etÅÃ­ celou Åadu potÅebnÃ½ch vÄcÃ­](https://api.nette.org/2.4/source-Forms.Form.php.html#385-403).\n- Ale ve _{$frameworkName}_ se to dÄlÃ¡ jinak a lÃ©pe! PouÅ¾ij tedy _{$frameworkName}_ nebo jeho podÄÃ¡st.\n\n:)","frontmatter":"id: ad9d4e96-b786-4f75-a6ca-96c85746cef7\ntimestamp: 1488109164000\ntitle: 4 zpÅ¯soby prÃ¡ce s formulÃ¡Åem v Å¡ablonÄ\nslug: 4-zpusoby-prace-s-formularem"},{"attributes":{"id":"97b1917b-d6ed-4305-a543-3bdde9b298c9","timestamp":1487322556000,"title":"HexagonÃ¡lnÃ­ architektura","slug":"hexagonalni-architektura"},"body":"Struktura webovÃ½ch aplikacÃ­ je nÄco, co se neustÃ¡le mÄnÃ­ a stejnÄ s programÃ¡torem i zdokonaluje. PÅed vÃ­ce neÅ¾ rokem jsem se o jednÃ© z moÅ¾nÃ½ch struktur PHP aplikace [troÅ¡ku rozepsal](jeste-lepsi-struktura-nette-aplikace). A teÄ si ukÃ¡Å¾eme dalÅ¡Ã­ alternativu, kterÃ¡ je [k proklikÃ¡nÃ­ zde](https://github.com/adeira/connector/tree/2169296c8da4a50bf4f928e94e756f3b23afea24). NejednÃ¡ se o nic pÅevratnÃ©ho. Tento pÅÃ­stup mÄ vÅ¡ak v poslednÃ­ dobÄ hodnÄ bavÃ­ a dÃ¡ se na nÄm nauÄit zase nÄco novÃ©ho. JednÃ¡ se vlastnÄ o tento adresÃ¡ÅovÃ½ strom (zjednoduÅ¡enÄ):\n\n```\n.\nâââ bin/            ...  pomocnÃ© SH skripty\nâââ config/         ...  globÃ¡lnÃ­ konfigurace aplikace\nâââ migrations/     ...  dopÅednÃ© DB migrace\nâââ src/\nâââ tests/          ...  veÅ¡kerÃ© testy\nâââ var/            ...  logy a temp\nâââ vendor/         ...  balÃ­Äky tÅetÃ­ch stran\nâââ www/            ...  veÅejnÃ¡ sloÅ¾ka\nâââ bootstrap.php   ...  vytvÃ¡ÅenÃ­ DI kontejneru\nâââ composer.json   ...  definice zÃ¡vislostÃ­ tÅetÃ­ch stran\nâââ composer.lock\nâââ LICENSE.txt\nâââ README.md\n```\n\nNa prvnÃ­ pohled je asi vÅ¡e jasnÃ©. Struktura je tÃ©mÄÅ identickÃ¡ s tÃ­m, co je bÄÅ¾nÃ© u zaÄÃ­najÃ­cÃ­ch Nette projektÅ¯ (Nette zde vÅ¡ak nenÃ­ vÅ¯bec dÅ¯leÅ¾itÃ©). Za povÅ¡imnutÃ­ stojÃ­ pouze to, Å¾e `bootstrap.php` a globÃ¡lnÃ­ konfigurace jsou na Ãºrovni koÅenovÃ©ho adresÃ¡Åe, takÅ¾e neexistuje Å¾Ã¡dnÃ¡ sloÅ¾ka `app`. ZÅ¯stÃ¡vÃ¡ tedy otÃ¡zka - kde jsou veÅ¡kerÃ© kÃ³dy a jak je aplikace ÄlenÄna?\n\n# Kontexty\n\nVeÅ¡kerÃ¡ zÃ¡bava je prÃ¡vÄ ve sloÅ¾ce `src` (jak se asi dalo Äekat):\n\n```\nsrc/\nâââ Authentication/\nâââ Common/\nâââ Devices/\nâââ Endpoints/\nâââ Routing/\n```\n\nOsobnÄ mÃ¡m poÅÃ¡d problÃ©m s pojmenovÃ¡vÃ¡nÃ­m vÄcÃ­, takÅ¾e mÃ¡m poÅÃ¡d takovÃ½ pocit, Å¾e jednotlivÃ© kontexty nejsou dobÅe zaÅ¡katulkovanÃ©. To ale nenÃ­ zase aÅ¾ tak dÅ¯leÅ¾itÃ©. DÅ¯leÅ¾itÃ¡ je nÃ¡sledujÃ­cÃ­ myÅ¡lenka: kaÅ¾dÃ¡ tato podsloÅ¾ka (kontext) se starÃ¡ o ÃºplnÄ vÅ¡echno. Od konfiguracÃ­, pÅes presentery aÅ¾ po business logiku. UvnitÅ kontextu nejsou pouze balÃ­Äky tÅetÃ­ch stran a testy (ty jsou v `tests`, ale majÃ­ ÃºplnÄ stejnou adresÃ¡Åovou strukturu - ne nutnÄ soubory).\n\nJe tÅeba troÅ¡ku se pozastavit nad konfiguracÃ­. KaÅ¾dÃ½ balÃ­Äek si s stebou nese vlastnÃ­ konfiguraÄnÃ­ soubory, kterÃ© potÅebuje k Å¾ivotu. Ty vÄtÅ¡inou velmi Ãºzce souvisejÃ­ napÅ. s konfiguracÃ­ DI kontejneru. Ale pouze pro potÅeby danÃ©ho kontextu! Pokud je tÅeba tento balÃ­Äek konfigurovat na globÃ¡lnÃ­ Ãºrovni celÃ© aplikace, pak je tento balÃ­Äek zaregistrovÃ¡n jako DI rozÅ¡Ã­ÅenÃ­. Tato Ãºprava myÅ¡lenÃ­ nad konfiguracÃ­ je moÅ¾nÃ¡ dÃ­ky balÃ­Äku [adeira/compiler-extension](https://github.com/adeira/compiler-extension). DoporuÄuji alespoÅ pÅeÄÃ­st a doufat, Å¾e to bude fungovat i v Nette 3 ([ProÄ by nemohlo?](https://github.com/nette/di/issues/143)).\n\nSamostatnÃ¡ internÃ­ konfigurace kontextu je asi to nejdÅ¯leÅ¾itÄjÅ¡Ã­ pro pokraÄovÃ¡nÃ­ (mÅ¯Å¾e bÃ½t takÃ© pÄknÄ [dlouhÃ¡ a komplikovanÃ¡](https://github.com/adeira/connector/blob/2169296c8da4a50bf4f928e94e756f3b23afea24/src/Devices/Infrastructure/DI/Nette/config.neon)). Co obsahuje takovÃ½ kontext (balÃ­Äek)?\n\n```\nsrc/Devices/\nâââ Application/\nâÂ Â  âââ Exceptions/\nâÂ Â  âââ Service/\nâââ DomainModel/\nâÂ Â  âââ WeatherStation/\nâââ Infrastructure/\n    âââ Delivery/\n    âââ DI/\n    âââ DomainModel/\n    âââ Persistence/\n```\n\nTo uÅ¾ je o nÄco zajÃ­mavÄjÅ¡Ã­ a takÃ© ÅÃ¡dovÄ komplikovanÄjÅ¡Ã­ na pochopenÃ­. DÃ¡le se totiÅ¾ dÄlÃ­ aplikace na tÅi dÅ¯leÅ¾itÃ© ÄÃ¡sti, kde kaÅ¾dÃ¡ mÃ¡ jinÃ½ vÃ½znam a kaÅ¾dÃ¡ si tedy zaslouÅ¾Ã­ krÃ¡tkÃ½ komentÃ¡Å. ZaÄnÄme pÄknÄ uprostÅed.\n\n# DomÃ©novÃ¡ vrstva\n\nV domÃ©novÃ© vrstvÄ je pouze obyÄejnÃ© PHP. MyÅ¡lenka je takovÃ¡, Å¾e se zde budu soustÅedit pouze na nÃ¡vrh modelu v ÄistÃ©m PHP a nebudu to nijak komplikovat zanÃ¡Å¡enÃ­m jakÃ½chkoliv frameworkÅ¯ Äi jinÃ½ch externÃ­ch knihoven:\n\n```\nsrc/Devices/DomainModel/\nâââ WeatherStation\nâÂ Â  âââ IAllWeatherStationRecords.php\nâÂ Â  âââ IFileLoader.php\nâÂ Â  âââ WeatherStationId.php\nâÂ Â  âââ WeatherStation.php\nâââ Humidity.php\nâââ PhysicalQuantities.php\nâââ Pressure.php\nâââ Temperature.php\nâââ Wind.php\n```\n\nNikde zde nenajdete v kÃ³du slovo Nette, Symfony nebo tÅeba Doctrine (_ve skuteÄnosti to tam je, ale to je chyba_). Jsou to prostÄ ÃºplnÄ obyÄejnÃ© objekty, kterÃ© majÃ­ za Ãºkol ÅeÅ¡it nÄjakÃ½ konkrÃ©tnÃ­ problÃ©m onoho konkrÃ©tnÃ­ho kontextu a nic vÃ­c. DÃ­ky tomu je psanÃ­ testÅ¯ na tuto ÄÃ¡st aplikace naprosto triviÃ¡lnÃ­. KdyÅ¾ nÄkde existuje nÄjakÃ¡ zÃ¡vislost, tak je zprostÅedkovÃ¡na pomocÃ­ rozhranÃ­, takÅ¾e vymÄnit implementaci v testech je dÃ­ky tomuto striktnÃ­mu rozdÄlenÃ­ opravdu hraÄka.\n\nTakto by vÅ¡ak aplikace sama o sobÄ nefungovala. Je potÅeba mÃ­t zde vazbu na konkrÃ©tnÃ­ implementaci, na konkrÃ©tnÃ­ framework Äi knihovnu. Od toho slouÅ¾Ã­ dalÅ¡Ã­ vrstva.\n\n# InfrastrukturnÃ­ vrstva\n\nZde nenÃ­ nic jinÃ©ho, neÅ¾ implementace (implementaÄnÃ­ detaily). VÄtÅ¡inou se jednÃ¡ o tÅÃ­dy, kterÃ© nemajÃ­ Å¾Ã¡dnou zvlÃ¡Å¡tnÃ­ nebo sloÅ¾itou logiku. SlouÅ¾Ã­ pouze jako napojenÃ­ na framework a jako implementace rozhranÃ­ z dommÃ©novÃ© vrstvy. To se silnÄ projevÃ­ ve struktuÅe:\n\n```\nsrc/Devices/Infrastructure/\nâââ Delivery/\nâÂ Â  âââ API/\nâÂ Â  âÂ Â  âââ GraphQL/\nâÂ Â  âââ Console/\nâÂ Â  â   âââ Symfony/\nâ   âââ Http/\nâ       âââ Nette/\nâââ DI/\nâÂ Â  âââ Nette/\nâÂ Â      âââ config.neon\nâÂ Â      âââ Extension.php\nâââ DomainModel/\nâÂ Â  âââ WeatherStation/\nâÂ Â      âââ Doctrine/\nâÂ Â      âââ Series/\nâââ Persistence/\n    âââ Doctrine/\n    âÂ Â  âââ Mapping/\n    âÂ Â  âââ DoctrineAllWeatherStations.php\n    âââ InMemory/\n        âââ InMemoryAllWeatherStations.php\n```\n\nTroÅ¡ku se to komplike, Å¾e? Po chvilce studovÃ¡nÃ­ to vÅ¡ak dÃ¡vÃ¡ celÃ© smysl. Tak tÅeba `Delivery` - je potÅeba doruÄit nÄjakou Å¡ablonu prostÅednictvÃ­m presenteru, poslat JSON nebo komunikovat s CLI. Proto je zde vÅ¾dy vazba na konkrÃ©tnÃ­ technologii (o tom ostatnÄ celÃ¡ tato vrstva je). PodobnÄ napojenÃ­ na DI. MÅ¯Å¾e se zdÃ¡t, Å¾e to vÅ¾dy bude Nette, ale pokud bych podobnÃ½m stylem vydÃ¡val i Composer knihovny, tak je jednoduchÃ© dodÄlat podporu i pro dalÅ¡Ã­ frameworky - kÃ³d je na to pÅipraven.\n\nAsi nejzajÃ­mavÄjÅ¡Ã­ je potom sloÅ¾ka `Persistence`, kterÃ¡ ÅeÅ¡Ã­ uklÃ¡dÃ¡nÃ­ dat _nÄkam_. V mÃ©m pÅÃ­padÄ je to primÃ¡rnÄ Doctrine, takÅ¾e se zde musÃ­m hodnÄ zasnaÅ¾it, abych dokÃ¡zal dÅÃ­ve vytvoÅenÃ© objekty uloÅ¾it do databÃ¡ze a pÅitom o tom Å¾Ã¡dnÃ½ z tÄchto objektÅ¯ netuÅ¡il (obÄas dÅina, ale vÅ¡echno jde). Ale implementacÃ­ mÅ¯Å¾e bÃ½t vÃ­ce - tÅeba v obyÄejnÃ© pamÄti PHP. CoÅ¾ je super strategie pro testovÃ¡nÃ­. V testech (pokud to nenÃ­ smyslem toho testu) nepotÅebuji pracovat pÅÃ­mo s pomalou databÃ¡zÃ­, takÅ¾e nahradit jejÃ­ implementaci za uklÃ¡dÃ¡nÃ­ do pamÄti bude super rychlÃ©.\n\nZbÃ½vÃ¡ poslednÃ­ vrstva.\n\n# AplikaÄnÃ­ vrstva\n\nMÃ­t takto myÅ¡lenkovÄ oddÄlenÃ© zÃ¡vislosti jednotlivÃ½ch ÄÃ¡stÃ­ aplikace mÃ¡ spoustu vÃ½hod. DÅ¯leÅ¾itÃ© je zeptat se: jak budeme tento model ovlÃ¡dat? OdpovÄdÃ­ je prÃ¡vÄ aplikaÄnÃ­ vrstva. Ta mÃ¡ za Ãºkol pouze jednu vÄc. ZpÅÃ­stupnit domÃ©novou vrstvu Å¡irokÃ©mu okolÃ­. Pokud tedy presenter chce komunikovat s domÃ©novou vrstvou, musÃ­ prostÅednictvÃ­m aplikaÄnÃ­ vrstvy. ProÄ musÃ­? NestaÄilo by rovnou pouÅ¾Ã­vat nÄjakÃ½ interface pro repozitÃ¡Å? StaÄilo, ale to nenÃ­ dobrÃ½ nÃ¡pad!\n\nRovnou pracovat s repozitÃ¡Åi nenÃ­ rozumnÃ©, protoÅ¾e ty maximÃ¡lnÄ tahajÃ­ data z ÃºloÅ¾iÅ¡tÄ. To je jejich zodpovÄdnost, ale co tÅeba oprÃ¡vnÄnÃ­ a transakce? O to se prÃ¡vÄ starÃ¡ aplikaÄnÃ­ vrstva. Jako pÅÃ­klad budeme chtÃ­t vytvoÅit zÃ¡znam pro novou meteostanici. Zde konkrÃ©tnÄ vyuÅ¾Ã­vÃ¡m pÅÃ­stup CQS (Command-Query Separation). Zde existujÃ­ dva zpÅ¯soby jak komunikovat. PomocÃ­ dotazÅ¯, kdy kaÅ¾dÃ½ dotaz vracÃ­ poÅ¾adovanou informaci, ale **nemodifikuje data** a pomocÃ­ pÅÃ­kazÅ¯, kterÃ© data modifikujÃ­, ale **nevracÃ­ Å¾Ã¡dnÃ¡ data zpÄt**.\n\nTakovÃ½ pÅÃ­klaz by se mohl jmenovat `CreateWeatherStation` a jednÃ¡ se pouze o obyÄejnÃ½ DTO objekt, kterÃ½ nemÃ¡ Å¾Ã¡dnou logiku a mÄl by bÃ½t tak jednoduchÃ½, Å¾e jej nenÃ­ tÅeba testovat (pokud nechcete). Je to fakt jenom pÅepravka na data. Tento pÅÃ­kaz mÃ¡ svÃ©ho parÅ¥Ã¡ka, kterÃ½ jej umÃ­ zpracovat. PÅÃ­kaz odesÃ­lÃ¡m pomocÃ­ sbÄrnice tÅeba z API:\n\n```php\n$this->commandBus->dispatch(new CreateWeatherStation(\n    WeatherStationId::create(), // ID novÃ© stanice\n    $args['name'], // nÃ¡zev stanice\n    $context->userId() // ID uÅ¾ivatele, kterÃ½ vytvÃ¡ÅÃ­ stanici\n));\n```\n\nTato sbÄrnice jednak doruÄÃ­ pÅÃ­kaz na to sprÃ¡vnÃ© mÃ­sto pro zpracovÃ¡nÃ­, ale takÃ© obstarÃ¡ databÃ¡zovÃ© transakce, prokud je to nutnÃ©. Tento pÅÃ­kaz se zpracuje v `handleru`, kterÃ½ implementuje metodu `__invoke` (nebo cokoliv jinÃ©ho co je `callable`):\n\n```php\npublic function __invoke(CreateWeatherStation $aCommand)\n{\n    $owner = $this->ownerService->existingOwner($aCommand->userId());\n\n    $this->weatherStationRepository->add(new WeatherStation(\n        $aCommand->stationId(),\n        $owner,\n        $aCommand->name(),\n        new \\DateTimeImmutable('now')\n    ));\n}\n```\n\nKouzlo je v tom, Å¾e je zde ukryta i kontrola ovÄÅenÃ­, protoÅ¾e na prvnÃ­m ÅÃ¡dku se snaÅ¾Ã­m zÃ­skat z uÅ¾ivatele vlastnÃ­ka (jinak exception) a samotnÃ¡ meteostanice takÃ© chce v konstruktoru vlastnÃ­ka (nikoliv jen uÅ¾ivatele). Kontrolu tedy nejde zapomenout. `weatherStationRepository` je zde opÄt jen interface. Jak je vidÄt, tak je zde hodnÄ vÄcÃ­ na kterÃ© se nesmÃ­ zapomenout a proto je rozumnÃ© pÅistupovat k domÃ©novÃ©mu modelu pouze pÅes tuto aplikaÄnÃ­ vrstvu.\n\nNa zÃ¡vÄr nutno jednu drobnou poznÃ¡mku. Tento pÅÃ­stup (hledejte pod nÃ¡zvem hexagonÃ¡lnÃ­ architektura) mÄ moc bavÃ­ a poÅÃ¡d je co se zde uÄit novÃ©ho. Pokud vÅ¡ak patÅÃ­te do kategorie \"lÃ­nÃ½ programÃ¡tor\", pak pro vÃ¡s tento pÅÃ­stup urÄitÄ nenÃ­ vhodnÃ½. Je to totiÅ¾ spousta prÃ¡ce, kterÃ¡ se mÅ¯Å¾e zdÃ¡t jako zbyteÄnÃ¡. KlidnÄ se to vÅ¡e nechÃ¡ dÄlat jednoduÅ¡e v jednÃ© vrstvÄ. HexagonÃ¡lnÃ­ architektura vÅ¡ak nabÃ­zÃ­ elegantnÃ­ ÅeÅ¡enÃ­ problÃ©mÅ¯, kterÃ© obÄas ve vÃ½voji nastanou a myslÃ­m si, Å¾e hledÃ­ hodnÄ vpÅed. DoporuÄuji tedy alespoÅ jednou vyzkouÅ¡et a pokud nic jinÃ©ho, tak si z toho alespoÅ odnÃ©st nÄkterÃ© myÅ¡lenky, kterÃ© ÄlovÄka posunou zase o kousek dÃ¡l... :)","frontmatter":"id: 97b1917b-d6ed-4305-a543-3bdde9b298c9\ntimestamp: 1487322556000\ntitle: HexagonÃ¡lnÃ­ architektura\nslug: hexagonalni-architektura"},{"attributes":{"id":"ad86363a-dc6d-4c7d-b334-a82424354134","timestamp":1485965763000,"title":"ÅeÅ¡enÃ­ N+1 problÃ©mu v GraphQL","slug":"reseni-n-1-problemu-v-graphql"},"body":"Na 85. PoslednÃ­ sobotÄ v Praze jsem mÄl workshop a pÅednÃ¡Å¡ku o GraphQL. Na konci pÅednÃ¡Å¡ky padl velmi dobrÃ½ dotaz ohlednÄ toho, jestli nÃ¡hodou netrpÃ­ GraphQL v urÄitÃ½ch situacÃ­ch N+1 problÃ©mem. NaÄeÅ¾ jsem odvÄtil, Å¾e to nenÃ­ problÃ©m GraphQL, ale Å¾e ano. TeÄ je tedy ten sprÃ¡vnÃ½ Äas podÃ­vat se na tuto situaci konkrÃ©tnÄ a pokusit se ji vyÅeÅ¡it. SkvÄlÃ© je, Å¾e [knihovna, kterou pouÅ¾Ã­vÃ¡m](http://webonyx.github.io/graphql-php/) na sebe ÄÃ¡steÄnÄ pÅevzala ÅeÅ¡enÃ­ tohoto neÅ¡varu. Ale o tom aÅ¾ za chvÃ­li...\n\n# N+1 problÃ©m\n\nS [N+1 problÃ©mem](https://secure.phabricator.com/book/phabcontrib/article/n_plus_one/) se setkal kaÅ¾dÃ½, kdo naprogramoval alespoÅ blog s komentÃ¡Åi. ProblÃ©m nastÃ¡vÃ¡ pokud se z databÃ¡ze netahajÃ­ vÅ¡echna potÅebnÃ¡ data s pÅedstihem. NapÅÃ­klad pokud u blogu vytÃ¡hneme pouze ÄlÃ¡nky a aÅ¾ pozdÄji budeme iterovat ÄlÃ¡nky a tahat k nim komentÃ¡Åe, pak mÃ¡me N+1 problÃ©m. Stane se totiÅ¾, Å¾e poloÅ¾Ã­me na databÃ¡zi stejnÃ½ poÄet dotazÅ¯, jako mÃ¡me ÄlÃ¡nkÅ¯.\n\nÅeÅ¡it se to dÃ¡ dvojÃ­m zpÅ¯sobem. MÅ¯Å¾eme pouÅ¾Ã­t databÃ¡zovÃ½ `JOIN` a v jednom dotÃ¡zu si vytÃ¡hnout vÅ¡e potÅebnÃ© (ÄlÃ¡nky a kometÃ¡Åe) s tÃ­m, Å¾e jiÅ¾ vÃ­me co potÅebujeme. A nebo pouÅ¾ijeme `IN` klauzuli a druhÃ½m dotazem se doptÃ¡me na vÅ¡e potÅebnÃ© (zbÃ½vajÃ­cÃ­ komentÃ¡Åe). Tento pÅÃ­stup se pro GraphQL hodÃ­ vÃ­ce.\n\nHezkÃ½ pÅÃ­klad tohoto problÃ©mu je vidÄt na tomto GraphQL dotazu:\n\n```\n{\n  query_1: allWeatherStations {\n    edges {\n      node {\n        ...RecordsFragment\n      }\n    }\n  }\n  query_2: allWeatherStations {\n    weatherStations {\n      ...RecordsFragment\n    }\n  }\n}\n\nfragment RecordsFragment on WeatherStation {\n  records {\n    id\n  }\n}\n```\n\nToto by se dalo nazvat M*N+M problÃ©mem... :) Kdybych totiÅ¾ posÃ­lal jen prvnÃ­ dotaz (dej mi meteostanice a ke kaÅ¾dÃ© stanici vÅ¡echny zÃ¡znamy), vznikl by dÅÃ­ve popisovanÃ½ problÃ©m. Jen jsou zde mÃ­sto ÄlÃ¡nkÅ¯ meteostanice a mÃ­sto komentÃ¡ÅÅ¯ jednotlivÃ© zÃ¡znamy stanic. JenÅ¾e v GraphQL lze skuteÄnÄ sloÅ¾it graf a tak se mÅ¯Å¾u ptÃ¡t velmi sloÅ¾itÄ a zamotanÄ. Dokonce se mÅ¯Å¾u ptÃ¡t poÅÃ¡d dokoleÄka:\n\n```\n{\n  articles { # get all articles\n    authors { # get all authors of the articles\n      theirArticles { # get all articles they wrote\n        authors { # get authors of those articles\n          theirArticles {\n            ...\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nNeÅÃ­kÃ¡m, Å¾e to dÃ¡vÃ¡ smysl, ale pokud je API dostateÄnÄ kompikovanÃ©, tak se zde mÅ¯Å¾ou objevit cyklickÃ© cesty.\n\n# ÅeÅ¡enÃ­\n\nPodÃ­vejme se, jak se tahajÃ­ jednotlivÃ© zÃ¡znamy pro konkrÃ©tnÃ­ meteostanici:\n\n```php\n$field->setResolveFunction(function (WeatherStation $ws, $args, UserId $userId) {\n    return $this->allWsRecords->execute($userId, $ws->id());\n});\n```\n\nSlovy ÅeÄeno: v callbacku pÅijde meteostanice a my se zeptÃ¡me nÄjakÃ© modelovÃ© tÅÃ­dy na vÅ¡echny zÃ¡znamy podle ID meteostanice. To je pÅesnÄ to mÃ­sto, kde vznikÃ¡ N+1 problÃ©m. V knihovnÄ [webonyx/graphql-php](https://github.com/webonyx/graphql-php) je od verze `v0.9.0` k dispozici objekt `GraphQL\\Deferred`, kterÃ½ perfektnÄ poslouÅ¾Ã­ k optimalizaci:\n\n```php\n$field->setResolveFunction(function (WeatherStation $ws, $args, UserId $userId) {\n    $this->allWsRecords->buffer($ws->id());\n\n    return new \\GraphQL\\Deferred(function() use ($userId, $ws) {\n        return $this->allWsRecords->execute($userId, $ws->id());\n    });\n});\n```\n\nVtip je v tom, Å¾e pÅi ÅeÅ¡enÃ­ dotazu prochÃ¡zÃ­ knihovna `webonyx/graphql-php` celÃ½ graf a zjiÅ¡Å¥uje potÅebnÃ© hodnoty. Ve chvÃ­li kdy dojde k naÅ¡emu uzlu/listu, tak si jen poznamenÃ¡me (buffer) jakÃ© ID bylo prÃ¡ve vyÅ¾adovÃ¡no a vrÃ¡tÃ­me onen `Deferred` objekt. AÅ¾ celÃ½ proces dojde na samotnÃ½ konec, tak se knihovna zeptÃ¡ jeÅ¡tÄ na ty odloÅ¾enÃ© objekty. V tu chvÃ­li ale jiÅ¾ vÃ­me jakÃ© vÅ¡echny ID jsou potÅeba a mÅ¯Å¾eme je zÃ­skat jednÃ­m dotazem a postupnÄ vracet:\n\n```php\nif(empty($this->weatherStationIdsBuffer)) {\n\treturn $this->wsrr->ofWeatherStationId($weatherStationId);\n} else {\n\tstatic $result = NULL; //memoization\n\tif ($result === NULL) {\n\t\t$result = $this->wsrr->ofAllWeatherStationIds($this->weatherStationIdsBuffer);\n\t}\n\treturn $result[$weatherStationId->id()];\n}\n```\n\nTedy pokud nenÃ­ nic v bufferu, prostÄ se na to jedno ID zeptÃ¡me do databÃ¡ze. Zde nenÃ­ co optimalizovat. V opaÄnÃ©m pÅÃ­padÄ vÅ¡ak poÅ¡leme dotaz s `IN` a zeptÃ¡me se na vÅ¡echny ID, kterÃ© jsou v bufferu. Ty budeme chvÃ­li drÅ¾et v lokÃ¡lnÃ­ cache a postupnÄ ven servÃ­rovat jednotlivÃ© zÃ¡znamy (bez dalÅ¡Ã­ch dotazÅ¯ do databÃ¡ze).\n\nVÃ½sledek je nÃ¡sledujÃ­cÃ­ (pÅedtÃ­m):\n\n```sql\nSELECT t0.* FROM user_accounts t0 WHERE t0.id = ?\n\nSELECT w0_.* FROM weather_stations w0_ WHERE w0_.owner_uuid = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\n\nSELECT w0_.* FROM weather_stations w0_ WHERE w0_.owner_uuid = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id = ?\n```\n\nA potom:\n\n```sql\nSELECT t0.* FROM user_accounts t0 WHERE t0.id = ?\nSELECT w0_.* FROM weather_stations w0_ WHERE w0_.owner_uuid = ?\nSELECT w0_.* FROM weather_stations w0_ WHERE w0_.owner_uuid = ?\nSELECT w0_.* FROM weather_stations_records w0_ WHERE w0_.weather_station_id IN (\n    'df40acdd-5222-4f89-a693-999f2d3f3eb6',\n    '6f5fb680-f5e3-4d8c-b7e1-27205b848657',\n    '14837156-c662-4e8c-b527-2227506c2bf7',\n    '2965494d-d13f-4415-8535-b910ac29326a',\n    '662c0434-9eca-4241-9462-ce85d279fd6b',\n    '36eed5a8-08fd-48db-8153-67355d092201'\n)\n```\n\nTo je obrovskÃ© zlepÅ¡enÃ­. ZejmÃ©na kdyÅ¾ si uvÄdomÃ­te, Å¾e k optimalizaci N+1 dotazu nedochÃ¡zÃ­ pouze naivnÄ v rÃ¡mci jednÃ© cesty v grafu, ale v rÃ¡mci ÃºplnÄ celÃ©ho grafu. Pokud chcete vidÄt konkrÃ©tnÃ­ zmÄnu v rÃ¡mci projektu z workshopu, tak je vidÄt v commitu [ed8b43](https://github.com/adeira/connector/commit/ed8b43257b778b6b2d4adb1b92baae18daf36905).\n\nToliko mÃ¡ odpoveÄ... :)","frontmatter":"id: ad86363a-dc6d-4c7d-b334-a82424354134\ntimestamp: 1485965763000\ntitle: ÅeÅ¡enÃ­ N+1 problÃ©mu v GraphQL\nslug: reseni-n-1-problemu-v-graphql"},{"attributes":{"id":"5330469a-da65-4195-8c9a-2afccbd6078d","timestamp":1484849186000,"title":"Vy jeÅ¡tÄ nemÃ¡te svÅ¯j superprojekt?!","slug":"vy-jeste-nemate-svuj-superprojekt"},"body":"Nenechte se oÅ¡Ã¡lit. Superprojekt je skuteÄnÄ [oficiÃ¡lnÃ­ nÃ¡zev](https://git-scm.com/docs/git-submodule#git-submodule-add) pro Git projekty, kterÃ© virtuÃ¡lnÄ obsahujÃ­ dalÅ¡Ã­ podprojekty (tzv. submoduly). JednÃ¡ se o skvÄlÃ½ zpÅ¯sob jak vytvoÅit jeden velkÃ½ repozitÃ¡Å a spravovat v nÄm mnoho knihoven. NÃ¡sledujÃ­cÃ­ text proto bude zajÃ­mavÃ½ pro programÃ¡tory, kteÅÃ­ vydÃ¡vajÃ­ knihovny podobnÄ jako to dÄlÃ¡m jÃ¡ s [projektem Adeira](https://github.com/adeira).\n\nZaÄnÄme vÅ¡ak krÃ¡tkou motivacÃ­. Tomuto zpÅ¯sobu vÃ½voje resp. tomu jednomu konkrÃ©tnÃ­mu repozitÃ¡Åi se velmi Äasto ÅÃ­kÃ¡ \"monolith repository\". VÃ½voj v jednom repozitÃ¡Åi by mÄl minimalizovat reÅ¾ii, kterÃ¡ je nutnÃ¡ pro obskakovÃ¡nÃ­ mnoha repozitÃ¡ÅÅ¯. DÅ¯leÅ¾itÃ© vÅ¡ak je uvÄdomit si hned na zaÄÃ¡tku, Å¾e jeden monolitickÃ½ repozitÃ¡Å rozhodnÄ neznamenÃ¡ jeden monolitickÃ½ kÃ³d. PoÅÃ¡d se bavÃ­me o vydÃ¡vÃ¡nÃ­ mnoha Composer balÃ­ÄkÅ¯ (napÅÃ­klad), ale jejich ÃºdrÅ¾ba a vÃ½voj probÃ­hÃ¡ v jednom oknÄ jednoho IDE. Pouze finÃ¡lnÃ­ produkt je mnoÅ¾stvÃ­ dÃ­lÄÃ­ch repozitÃ¡ÅÅ¯!\n\nVÃ½hody jsou nÃ¡sledujÃ­cÃ­:\n- zmÄny v API napÅÃ­Ä celou knihovnou je moÅ¾nÃ© dÄlat rovnou (nikoliv postupnÄ balÃ­Äek co balÃ­Äek)\n- veÅ¡kerÃ© zmÄny Git repozitÃ¡Åe lze vyÅeÅ¡it jednÃ­m Å¡mahem (commit, push) a nenÃ­ tedy potÅeba dÄlat to ruÄnÄ postupnÄ\n- tÃ­m, Å¾e se vÅ¡e dÄlÃ¡ na jednom mÃ­stÄ, tak by vÃ½voj mÄl bÃ½t pruÅ¾nÄjÅ¡Ã­ a jistÄjÅ¡Ã­\n- perfektnÄ se vyÅeÅ¡Ã­ vlastnÃ­ zÃ¡vislosti - ÅÃ­kÃ¡m dej mi `moje-knihovna`, nikoliv `moje-knihovna:v2.5.3`\n- celkovÄ se celÃ¡ monorepo obluda chovÃ¡ podobnÄ jako jeden balÃ­Äek, ale lze jej vydÃ¡vat jako mnoho Composer balÃ­ÄkÅ¯\n- lze otestovat veÅ¡kerÃ½ namespace (tÅeba `nette/*`) najednou\n\nChvÃ­li jsem to zkoumal a existujÃ­ dvÄ cesty jak takovÃ½ repozitÃ¡Å vytvoÅit. Jedna horÅ¡Ã­ a jedna lepÅ¡Ã­. ZaÄnu tou (z mÃ©ho pohledu) horÅ¡Ã­...\n\n# Split repozitÃ¡Åe\n\nToto bylo to prvnÃ­ po Äem jsem Å¡el. Teorie znÃ­ nÃ¡sledovnÄ. VeÅ¡kerÃ½ kÃ³d mÃ¡m v jednom repozitÃ¡Åi (tÅeba `adeira/monorepo`) a normÃ¡lnÄ pracuji na kÃ³du jak jsem zvyklÃ½. NÃ¡slednÄ spustÃ­m nÄjakÃ½ program, kterÃ½ mi repozitÃ¡Å rozdÄlÃ­ pomocÃ­ Gitu na jednotlivÃ© dÃ­lÄÃ­ repozitÃ¡Åe. To lze udÄlat pomocÃ­ [subtree](https://github.com/git/git/blob/master/contrib/subtree/git-subtree.txt) nebo tÅeba pomocÃ­ [splitsh](https://github.com/splitsh/lite) (to pouÅ¾Ã­vÃ¡ Symfony).\n\nVÃ½hody jsou zÅejmÃ© - dÄlÃ¡m na jednom kÃ³du a mÃ¡m jeden repozitÃ¡Å. To je ostatnÄ to jak jsem monolitickÃ½ repozitÃ¡Å vydefinoval. NevÃ½hody uÅ¾ moÅ¾nÃ¡ tak zÅejmÃ© nejsou - mÃ¡m jen jeden repozitÃ¡Å. Pokud jste alespoÅ troÅ¡iÄku polÃ­beni Gitem, tak si umÃ­te asi pÅedstavit, co to znamenÃ¡ pro vydÃ¡vÃ¡nÃ­ novÃ½ch verzÃ­ jednotlivÃ½ch balÃ­ÄkÅ¯. V Gitu totiÅ¾ nelze mÃ­t dva stejnÃ© tagy. A to znamenÃ¡ dvÄ vÄci: budu vydÃ¡vat verze nÄjak straÅ¡nÄ sloÅ¾itÄ, nebo budou mÃ­t vÅ¡echny balÃ­Äky stejnou verzi.\n\nDruhÃ½m zmÃ­nÄnÃ½m zpÅ¯sobem to dÄlÃ¡ Symfony a s veÅ¡kerou otevÅenostÃ­ si myslÃ­m, Å¾e to nenÃ­ dobÅe. To totiÅ¾ znamenÃ¡, Å¾e budu vydÃ¡vat verze ve kterÃ½ch se **vÅ¯bec nic nezmÄnilo**. NevÄÅÃ­te? Symfony to dÄlÃ¡ bÄÅ¾nÄ ([2.8.11...2.8.14](https://github.com/symfony/security-http/compare/v2.8.11...v2.8.14), [v2.8.5...v2.8.15](https://github.com/symfony/ldap/compare/v2.8.5...v2.8.15)). KdyÅ¾ se nic nezmÄnilo, tak nemÃ¡ smysl vydÃ¡vat verzi (nebo?). Takto SemVer verzovÃ¡nÃ­ nefunguje... Ale uvÄdomuji si, Å¾e jsou lidÃ©, kteÅÃ­ toto budou obhajovat do morku kosti a Å¾e se jednÃ¡ o mÅ¯j subjektivnÃ­ nÃ¡zor. Mnohem vÃ­ce mÄ trÃ¡pÃ­ to, jak si subtree hraje s historiÃ­. AÄkoliv dokumentace tvrdÃ­, Å¾e subtree vÅ¾dy vrÃ¡tÃ­ pro stejnou historii stejnÃ© vÃ½slednÃ© SHA, tak z pokusÅ¯ mÅ¯Å¾u potvrdit, Å¾e to nenÃ­ pravda (nezkoumal jsem dÃ¡l proÄ). A to je hodnÄ Å¡patnÄ - na vÅ¡ech repozitÃ¡ÅÃ­ch mÃ¡m naÅ¡tÄstÃ­ zabezpeÄenou master vÄtev, abych nemohl udÄlat force push. LÃ©pe k tomu pÅistupuje Splitsh, kterÃ½ je navÃ­c nÃ¡sobnÄ rychlejÅ¡Ã­. Ten vÅ¡ak zase neumÃ­ pracovat s historiÃ­, kterÃ¡ byla pomocÃ­ subtree pÅidÃ¡na. MoÅ¾nÃ¡ znÃ¡te subsplit - to je ale jen obÃ¡lka nad subtree (takÅ¾e stejnÄ pomalÃ©).\n\nPokud tedy chcete vydÃ¡vat balÃ­Äky kdy se bude Äasto stÃ¡vat, Å¾e mÃ¡ jeden commit nÄkolik tagÅ¯ verzÃ­ a nemÃ¡te problÃ©m s tÃ­m, Å¾e je nutnÃ© pokaÅ¾dÃ© dopoÄÃ­tat diff z historie pro dÃ­lÄÃ­ projekty, pak je pro vÃ¡s split zÅejmÄ ta sprÃ¡vnÃ¡ volba. V opaÄnÃ©m pÅÃ­padÄ je tu varianta se superprojektem.\n\n# Superprojekt\n\nSuperprojekt na to jde ÃºplnÄ jinak. VyuÅ¾Ã­vÃ¡ tzv. [submoduly](https://git-scm.com/docs/git-submodule) coÅ¾ nenÃ­ nic jinÃ©ho neÅ¾ ukazatel na jinÃ½ **plnohodnotnÃ½** Git repozitÃ¡Å. PÅi tÃ©to konfiguraci se superprojekt chovÃ¡ jako pÅepravka na tyto repozitÃ¡Åe. PÅesnÄ vÃ­ kde jsou a jak s nimi pracovat, ale nehraje si s jejich historiÃ­. Vzhledem k tomu, Å¾e je v submodulu plnohodnotnÃ½ Git repozitÃ¡Å, tak mohu pracovat s tagy samostatnÄ a vydÃ¡vat tak verze samostatnÄ. NenÃ­ tedy tÅeba dÄlat Å¾Ã¡dnÃ© Ãºstupky.\n\nSuperprojekt si drÅ¾Ã­ informaci o submodulech v souboru `.gitmodules` jehoÅ¾ obsah vypadÃ¡ takto (pÅÃ­klad z projektu [adeira/superproject](https://github.com/adeira/superproject)):\n\n```js\n[submodule \"Component/compiler-extension\"]\n\tpath = Component/compiler-extension\n\turl = git@github.com:adeira/compiler-extension.git\n[submodule \"Component/monolog\"]\n\tpath = Component/monolog\n\turl = git@github.com:adeira/monolog.git\n[submodule \"Component/code-quality\"]\n\tpath = Component/code-quality\n\turl = git@github.com:adeira/code-quality.git\n[submodule \"Component/workflow\"]\n\tpath = Component/workflow\n\turl = git@github.com:adeira/workflow.git\n[submodule \"Component/presenter-factory\"]\n\tpath = Component/presenter-factory\n\turl = git@github.com:adeira/presenter-factory.git\n```\n\nSkvelÃ© je, Å¾e mÃ¡ Git vestavÄnou podporu pro submoduly, takÅ¾e to nenÃ­ nic pÅes ruku. Jen je tÅeba zapomenout na prvnÃ­ ÄÃ¡st tohoto ÄlÃ¡nku a zaÄÃ­t o submodulech pÅemÃ½Å¡let ÃºplnÄ jinak. KaÅ¾dÃ½ submodul mÃ¡ vlastnÃ­ sloÅ¾ku `.git` a je tedy nutnÃ© dÄlat commity v rÃ¡mci kaÅ¾dÃ©ho submodulu zvlÃ¡Å¡Å¥. NaÅ¡tÄstÃ­ PhpStorm umÃ­ udÄlat commit hromadnÄ, takÅ¾e pokud se provÃ¡dÃ­ zmÄna ve vÅ¡ech balÃ­ÄcÃ­ch, tak lze vÅ¡e commitnout najednout. V superprojektu se commitujÃ­ pouze sloÅ¾ky, kterÃ© obsahujÃ­ submodul. Ty Å¾ijÃ­ v rÃ¡mci Gitu ve speciÃ¡lnÃ­m mÃ³du `160000` kterÃ½ ÅÃ­kÃ¡, Å¾e se jednÃ¡ o sloÅ¾ku, kterÃ¡ ukazuje na konkrÃ©tnÃ­ commit v konkrÃ©tnÃ­m submodulu (jinÃ©m repozitÃ¡Åi). GitHub pak vytvoÅÃ­ takto hezkÃ© [symlinky do jinÃ©ho repozitÃ¡Åe](https://github.com/adeira/superproject/tree/master/Component).\n\n> Pamatujte, Å¾e zdrojem pravdy je v superprojektu vÅ¾dy submodul a ten existuje v konkrÃ©tnÃ­m repozitÃ¡Åi! NemÃ¡te tedy k dispozici monolitickÃ½ repozitÃ¡Å, ale zpÅ¯sob jak ovlÃ¡dat mnoho repozitÃ¡ÅÅ¯ z jednoho mÃ­sta. Pracovat s tÄmito repozitÃ¡Åi lze naprosto nezÃ¡visle na superprojektu a **nikdy se nedostanete do nekonzistentnÃ­ho stavu**.\n\nZdrojem pravdy jsou tedy cÃ­lovÃ© repozitÃ¡Åe, coÅ¾ je super, protoÅ¾e o to jde. Software vydÃ¡vÃ¡m jako samostatnÃ½ balÃ­Äek odkud si jej mohou uÅ¾ivatelÃ© nebo Composer stÃ¡hnout. Zde jsou vlastnÃ­ testy, readme i verze. NemÄlo by se stÃ¡t, Å¾e vydÃ¡m rozbitou verzi, protoÅ¾e ji vydÃ¡vÃ¡m vÅ¾dy nad konkrÃ©tnÃ­m repoitÃ¡Åem, nikoliv nad monorepozitÃ¡Åem. Superprojekt se nemÅ¯Å¾e dostat do nekonzistence se submoduly, protoÅ¾e na nÄ jen ukazuje. To znamenÃ¡, Å¾e neexistuje jeden kÃ³d na dvou mÃ­stech (to tÅeba v Symfony nenÃ­ pravda).\n\nGit Push ze superprojektu je ideÃ¡lnÃ­ spouÅ¡tÄt s tÃ­mto pÅepÃ­naÄem:\n\n```\ngit push --recurse-submodules=on-demand\n```\n\nV tomto pÅÃ­padÄ se nejdÅÃ­ve odeÅ¡lou na vzdÃ¡lenÃ½ server submoduly (jen pokud je to potÅeba) a aÅ¾ nÃ¡slednÄ se aktualizujÃ­ ukazatele v superprojektu. O tom jak pracovat se submoduly existuje [dlouhatÃ¡nskÃ½ ÄlÃ¡nek](https://git-scm.com/book/en/v2/Git-Tools-Submodules) - pokud chcete Git ovlÃ¡dat jeÅ¡tÄ vÃ­ce, tak doporuÄuji proÄÃ­st.\n\nOsobnÄ jsem superprojekt dotlaÄil jeÅ¡tÄ o kousek dÃ¡l. TeÄ uÅ¾ je jedno jestli se bavÃ­me o \"split\" typu nebo \"super\" typu - bude to stejnÃ©. VÅ¡echny balÃ­Äky existujÃ­ v nÄjakÃ© sloÅ¾ce a kaÅ¾dÃ½ mÃ¡ vlastnÃ­ Composer zÃ¡vislosti a vlastnÃ­ testy. Zkombinoval jsem vÃ­ce pÅÃ­stupÅ¯ jak obstarÃ¡vat vÅ¡echny zÃ¡vislosti a nejvÃ­ce se mi lÃ­bil zbÅ¯sob jakÃ½m to ÅeÅ¡Ã­ [beberlei/composer-monorepo-plugin](https://github.com/beberlei/composer-monorepo-plugin). DÄlÃ¡m to tak, Å¾e jsem si vytvoÅil Composer pÅÃ­kaz:\n\n```\ncomposer adeira:collect\n```\n\nTento pÅÃ­kaz projde vÅ¡echny submoduly a pÅeÄte si co majÃ­ napsÃ¡no v souboru `composer.json`. NÃ¡slednÄ vygeneruje v hlavnÃ­m balÃ­Äku soubor `composer.json`, kterÃ½ obsahuje vÅ¡echny poÅ¾adavky (`require` i `require-dev`) ze submodulÅ¯. PodobnÄ to udÄlÃ¡ i s autoloadery. NavÃ­c vygeneruje speciÃ¡lnÃ­ sekci `replace` takto:\n\n```js\n\"replace\": {\n\t\"adeira/code-quality\": \"self.version\",\n\t\"adeira/compiler-extension\": \"self.version\",\n\t\"adeira/monolog\": \"self.version\",\n\t\"adeira/presenter-factory\": \"self.version\",\n\t\"adeira/workflow\": \"self.version\"\n}\n```\n\nComposer se k tomu potom chovÃ¡ tak, Å¾e mÃ­sto toho aby hledal submodul nÄkde pomocÃ­ zÃ¡vislostÃ­, tak sÃ¡hne rovnou po submodulu (tak to dÄlÃ¡ i Symfony a moc se mi o lÃ­bÃ­). K tomu vÅ¡emu jeÅ¡tÄ balÃ­ÄkÅ¯m pÅegeneruje soubory `vendor/autoload.php` s tÃ­mto obsahem:\n\n```php\n<?php return require dirname(dirname(dirname(__DIR__))) . '/vendor/autoload.php';\n```\n\nKaÅ¾dÃ½ submodul teÄ tedy funguje (v mÃ©m pÅÃ­padÄ) ze superprojektu a lze napÅ. spustit testy napÅÃ­Ä celÃ½m jmennÃ½m prostorem Adeira. Super je, Å¾e dÃ­ky tomu vÅ¡echny balÃ­Äky pouÅ¾Ã­vajÃ­ jednotnÃ© verze knihoven a nezastarÃ¡vajÃ­. NedokÃ¡Å¾u ÃºplnÄ domyslet jakÃ© jsou dÅ¯sledky mÃ©ho poÄÃ­nÃ¡nÃ­, ale je to _1)_ nejlepÅ¡Ã­ rozhodnutÃ­ co jsem zde udÄlal nebo _2)_ nejvÄtÅ¡Ã­ hovadina a budu to muset zruÅ¡it. UklidÅuje mÄ, Å¾e tento zpÅ¯sob pouÅ¾Ã­vajÃ­ daleko vÄtÅ¡Ã­ projekty a mlaskajÃ­ si blahem.\n\nPodobnÄ mÃ¡m udÄlanÃ½ jeÅ¡tÄ pÅÃ­kaz `adeira:eject`, kterÃ½ aktualizuje verze zÃ¡vislostÃ­ v jednotlivÃ½ch submodulech podle hlavnÃ­ho repozitÃ¡Åe a pÅÃ­kaz `adeira:create`, kterÃ½ vytvoÅÃ­ novÃ½ submodul podle pÅipravenÃ½ch Å¡ablon.\n\nVÄÅÃ­m, Å¾e pokud vydÃ¡vÃ¡te mnoho knihoven, tak vÃ¡m tento zpÅ¯sob uÅ¡etÅÃ­ hodnÄ prÃ¡ce a zaÄnete jej zavÃ¡dÄt. Ve vÃ½sledku je jedno jakou z cest se vydÃ¡te - dÅ¯leÅ¾itÃ© je, Å¾e se vydÃ¡te... :)","frontmatter":"id: 5330469a-da65-4195-8c9a-2afccbd6078d\ntimestamp: 1484849186000\ntitle: Vy jeÅ¡tÄ nemÃ¡te svÅ¯j superprojekt?!\nslug: vy-jeste-nemate-svuj-superprojekt"},{"attributes":{"id":"95683b6a-7c7b-4ecf-b2a0-5730b2f85216","timestamp":1483183709000,"title":"GraphQL","slug":"2-graphql"},"body":"Z [minulÃ©ho dÃ­lu](1-od-komponent-zpet-ke-komponentam) by mÄlo bÃ½t vÅ¡em jasnÃ©, jak jsem se dostal aÅ¾ sem. Od PHP komponent k webovÃ½m komponentÃ¡m, kterÃ© vlastnÄ nejsou skuteÄnÃ© webovÃ© komponenty, ale jen kus JS kÃ³du, kterÃ½ implementuje vlastnÃ­ zpÅ¯sob webovÃ½ch komponent - React. Jsem pÅesvÄdÄen o tom, Å¾e pro dalÅ¡Ã­ pokraÄovÃ¡nÃ­ je nutnÃ© vysvÄtlit, jak takovÃ¡ aplikace funguje. TakÅ¾e...\n\n# Jak takovÃ¡ aplikace funguje?\n\nJestli mÄ nÄco na JS svÄtÄ uÅ¾ dlouhou dobu dÄsÃ­, tak je to skuteÄnost, Å¾e vlastnÄ nikdo nevÃ­, jak by takovÃ¡ aplikace mÄla vypadat. AÄkoliv je mnoho lidÃ­ pÅesvÄdÄeno o svÃ© pravdÄ, neuvÄdomujÃ­ si subjektivitu jejich tvrzenÃ­. Z toho dÅ¯vodu je teÄ milion implementacÃ­ a nÃ¡vrhÅ¯ a kaÅ¾dÃ½ to dÄlÃ¡ troÅ¡ku jinak. Pokud to vÅ¡ak vezmu co nejvÃ­ce objektivnÄ, tak by se takovÃ¡ aplikace dala popsat nÃ¡sledovnÄ:\n\n- v prohlÃ­Å¾eÄi bÄÅ¾Ã­ JS kÃ³d, kterÃ½ se starÃ¡ o vykreslovÃ¡nÃ­ strÃ¡nky s vyuÅ¾itÃ­m veÅ¡kerÃ© sÃ­ly JavaScriptu\n- _volitelnÄ_: JS kÃ³d posÃ­lÃ¡ do prohlÃ­Å¾eÄe tÅeba NodeJS server, kterÃ½ dokÃ¡Å¾e vyrenderovat JS a poslat rovnou hotovou strÃ¡nku do prohlÃ­Å¾eÄe (vÄetnÄ pÅipravenÃ½ch dat)\n- na serveru bÄÅ¾Ã­ kÃ³d (v mÃ©m pÅÃ­padÄ Nette), kterÃ½ ÄekÃ¡ na co se ho JS kÃ³d zeptÃ¡ prostÅednictvÃ­m (GraphQL) API a podle toho odpovÃ­\n\nProÄ mi na serveru bÄÅ¾Ã­ PHP, kdyÅ¾ hodnÄ lidÃ­ preferuje mÃ­t JS i na serveru? ProtoÅ¾e jsem skÃ¡lopevnÄ pÅesvÄdÄen, Å¾e dokÃ¡Å¾u v PHP napsat lepÅ¡Ã­ aplikaci s vyuÅ¾itÃ­m veÅ¡kerÃ½ch myÅ¡lenek DDD co zvlÃ¡dnu pochopit (narozdÃ­l od JS). End of story...\n\nNo a jak uÅ¾ titulek tohoto ÄlÃ¡nku napovÃ­dÃ¡, tak mnou navrhovanÃ½ zpÅ¯sob je prÃ¡vÄ **GraphQL** ([link](http://graphql.org/)).\n\n# GraphQL queries\n\nGraphQL je nesmÃ­rnÄ chytrÃ½ zpÅ¯sob jak se ptÃ¡t API a pÅitom je to tak jednoduchÃ©, aÅ¾ mi pÅijde hloupÃ© o tom psÃ¡t. PomocÃ­ GraphQL se lze serveru zeptat pÅÃ­mo na konkrÃ©tnÃ­ vÄci. Tedy jako kdyÅ¾ se ptÃ¡te REST API, ale s tÃ­m rozdÃ­lem, Å¾e souÄÃ¡stÃ­ poÅ¾adavku je i informace o tom, co mÃ¡ API vrÃ¡tit. Je dokonce moÅ¾nÃ© zeptat se i vÃ­ce \"endpointÅ¯\" najednou. Zkuste si toto v REST API... :) Naopak GraphQL vyÅ¾aduje explicitnÃ­ vyjmenovÃ¡nÃ­ toho co chcete, takÅ¾e jednoduÅ¡e (pokud vÃ­m) nelze napsat dotaz, kterÃ½ by vrÃ¡til vÅ¡e co danÃ½ endpoint umÃ­.\n\nPojÄme si to troÅ¡ku vyzkouÅ¡et. Jako dobrÃ© hÅiÅ¡tÄ pro dotazy poslouÅ¾Ã­ [tato online aplikace](http://graphql-swapi.parseapp.com/). Dotazy se vÅ¾dy posÃ­lajÃ­ na jednu adresu (vetÅ¡inou `/graphql`) s tÃ­m, Å¾e se mÄnÃ­ pouze obsah zprÃ¡vy, kterÃ½ putuje v POST. To je velkÃ½ rozdÃ­l oproti REST API. Zde je jen jedna adresa, ale memÃ­ se obsah dotazu. PrÃ¡vÄ to pÅidÃ¡vÃ¡ na dynamice dotazovÃ¡nÃ­ - nejsme limitovÃ¡nÃ­ na URL adresy. TakÅ¾e kdyÅ¾ chceme vytÃ¡hnout z API napÅ. vÅ¡echny filmy, poÅ¡leme tento dotaz:\n\n```\n{\n  allFilms {\n    totalCount\n    films {\n      id\n      title\n      director\n    }\n  }\n}\n```\n\nTento zvlÃ¡Å¡tnÃ­ zÃ¡pis ÅÃ­kÃ¡, Å¾e se ptÃ¡m na vÅ¡echny filmy (`allFilms`) a zajÃ­mÃ¡ mÄ kolik jich je. ZÃ¡roveÅ chci u jednotlivÃ½ch filmÅ¯ vrÃ¡tit jejich ID, nÃ¡zev a reÅ¾isÃ©ra. API mi pak vrÃ¡tÃ­ dlouhÃ½ JSON:\n\n```js\n{\n  \"data\": {\n    \"allFilms\": {\n      \"totalCount\": 6,\n      \"films\": [\n        {\n          \"id\": \"ZmlsbXM6MQ==\",\n          \"title\": \"A New Hope\",\n          \"director\": \"George Lucas\"\n        },\n        ...\n      ]\n    }\n  }\n}\n```\n\n[VyzkouÅ¡ejte si to](http://graphql-swapi.parseapp.com/?query=%7B%0A%20%20allFilms%20%7B%0A%20%20%20%20totalCount%0A%20%20%20%20films%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20director%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&operationName=null). ChtÄl bych jeÅ¡tÄ vÄdÄt jakÃ© planety jsou ve filmu? StaÄÃ­ rozÅ¡Ã­Åit dotaz:\n\n```\n{\n  allFilms {\n    totalCount\n    films {\n      id\n      title\n      director\n      planetConnection {\n        planets {\n          name\n        }\n      }\n    }\n  }\n}\n```\n\nAPI vrÃ¡tÃ­ jeÅ¡tÄ delÅ¡Ã­ JSON. VyzkouÅ¡ejme jinÃ½ pÅÃ­klad. Co kdyÅ¾ mÃ¡m k dispozici ID filmu, jak se zeptÃ¡m pouze na ten konkrÃ©tnÃ­ film? PoÅ¡leme ID filmu jako paramter dotazu:\n\n```js\n{\n  film(id: \"ZmlsbXM6MQ==\") {\n    title\n  }\n}\n```\n\nA teÄ ta nejvÃ­ce ÃºÅ¾asnÃ¡ ÄÃ¡st. Chci si jednÃ­m Å¡mahem vytÃ¡hnout film, ÄlovÄka a vÅ¡echny planety? Easy:\n\n```js\n{\n  film(id: \"ZmlsbXM6MQ==\") {\n    title\n  }\n  person(id: \"cGVvcGxlOjE=\") {\n    name\n  }\n  allPlanets {\n    planets {\n      name\n    }\n  }\n}\n```\n\nA vÃ½sledek? Ultra dlouhÃ½ JSON:\n\n```js\n{\n  \"data\": {\n    \"film\": {\n      \"title\": \"A New Hope\"\n    },\n    \"person\": {\n      \"name\": \"Luke Skywalker\"\n    },\n    \"allPlanets\": {\n      \"planets\": [\n        {\n          \"name\": \"Tatooine\"\n        },\n        {\n          \"name\": \"Alderaan\"\n        },\n        ...\n      ]\n    }\n  }\n}\n```\n\nAsi nemÃ¡ smysl zanoÅovat se hloubÄji. Princip by mÄl bÃ½t jasnÃ½ a samotnÃ© API je do jistÃ© mÃ­ry ovlivnÄno jeho nÃ¡vrhem (zde strÃ¡nkovÃ¡nÃ­m). JednoduÅ¡e mohu jednÃ­m POST dotazem (coÅ¾ je ten zvlÃ¡Å¡tnÃ­ ÅetÄzec vypadajÃ­cÃ­ jako zjednoduÅ¡enÃ½ JSON) zÃ­skat z API informace, kterÃ© pÅesnÄ moje React komponenta potÅebuje. Toho nÄkterÃ© knihovny silnÄ vyuÅ¾Ã­vajÃ­ a vrÃ¡cenÃ½ vÃ½sledek posÃ­lajÃ­ v properties pÅÃ­mo komponentÄ, kterÃ½ se starÃ¡ **pouze** o vykreslovÃ¡nÃ­. Uvedu zde pouze krÃ¡tkÃ½ pÅÃ­klad toho co tÃ­m myslÃ­m (podrobnÄji to mÅ¯Å¾eme ÅeÅ¡it pozdÄji).\n\n`DataSourcesContainer` je komponenta, kterÃ¡ vyuÅ¾Ã­vÃ¡ [Apollo](http://dev.apollodata.com/react/) a cÃ­l tÃ©to komponenty je pouze vytÃ¡hnout data a vykresenÃ­ delegovat nÄkam dÃ¡l (`Row`).\n\n```js\nconst DataSourcesContainer = (props) => {\n\tlet {data: {loading, devices}} = props;\n\treturn loading ? null :\n\t\t<div>\n\t\t\t<h2>Data Sources</h2>\n\t\t\t{devices.map(dataSource =>\n\t\t\t\t<Row key={dataSource.id} dataSource={dataSource}/>\n\t\t\t)}\n\t\t</div>;\n};\n\nexport default graphql(gql`\n  query {\n    devices {\n      id,\n      name,\n      records\n    }\n  }\n`)(DataSourcesContainer);\n```\n\nAÅ¾ teprve `Row` se starÃ¡ o vykreslenÃ­, ale uÅ¾ nikdy nikdy nepoÅ¡le dotaz na API:\n\n```js\nconst Row = (props) => {\n\tlet ds = props.dataSource;\n\treturn <div>{ds.name} <Link to={`/data-sources/${ds.id}`}>{ds.id}</Link> ({ds.records.length} records available)\n\t</div>;\n};\n\nRow.propTypes = {\n\tdataSource: React.PropTypes.shape({\n\t\tid: React.PropTypes.string,\n\t\tname: React.PropTypes.string,\n\t\trecords: React.PropTypes.arrayOf(React.PropTypes.string)\n\t}).isRequired,\n};\n\nexport default Row;\n```\n\nNechÃ¡pu proÄ si nÄkdo ÅÃ­kÃ¡ React programÃ¡tor... :))\n\n# GraphQL mutations\n\nDobrÃ© API vÅ¡ak potÅebuje jeÅ¡tÄ minimÃ¡lnÄ jedu vÄc - moÅ¾nost modifikace dat. K tomu slouÅ¾Ã­ mutace. Zde opÄt musÃ­ aplikace (Nette) nadefinovat jakÃ© jsou \"endpointy\" a jakÃ© majÃ­ parametry. TakovÃ¡ mutace potom mÅ¯Å¾e vrÃ¡tit nÄjakÃ½ datovÃ½ typ a zde se to chovÃ¡ ÃºplnÄ stejnÄ jako _queries_.\n\nTak kupÅÃ­kladu pÅihlÃ¡Å¡enÃ­. Z mÃ©ho pohledu je to mutace, protoÅ¾e mÄnÃ­m stav aplikace a proto mÃ¡ moje aplikace pÅipravenou tuto mutaci (toto je skuteÄnÃ½ pÅÃ­klad z projektu [adeira/connector](https://github.com/adeira/connector) pokud se chcete Å¡Å¥ourat v kÃ³du):\n\n```\ntype Mutation {\n  login(username: String!, password: String!): User\n}\n```\n\nTzn. Å¾e pokud poÅ¡lu dotaz na to sprÃ¡vnÃ© mÃ­sto, tak mi API vratÃ­ uÅ¾ivatele, nebo mÄ odmÃ­tne. VyuÅ¾ijeme CURL:\n\n```\ncurl -XPOST -H \"Content-Type:application/graphql\" -d '{\"query\": \"mutation {login(username:\\\"test\\\",password:\\\"test\\\"){id,token}}\"}' http://connector.adeira.localhost/graphql | jq .\n```\n\nA protoÅ¾e jsem zadal sprÃ¡vnÃ© pÅihlaÅ¡ovacÃ© Ãºdaje, tak mi API vrÃ¡tÃ­ ID a [JWT token](https://jwt.io/), protoÅ¾e o to jsem si v dotazu Åekl:\n\n```js\n{\n  \"data\": {\n    \"login\": {\n      \"id\": \"4ff2f293-9d21-4407-a6af-08f766e06cb3\",\n      \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE0ODMxODE3OTksImV4cCI6MTQ4MzE4NTM5OSwidXVpZCI6IjRmZjJmMjkzLTlkMjEtNDQwNy1hNmFmLTA4Zjc2NmUwNmNiMyJ9.o2aHdbjgtg80e_yXdFJSy4gCTb-4exEbNQbaOK9xa7nyiLpfvYe0FBPizz0XUVrE1JDzkW9m3QnupiVtTDyZ2g\"\n    }\n  }\n}\n```\n\nZde je nutnÃ© zdÅ¯raznit, Å¾e je naprosto zÃ¡sadnÃ­, aby aplikace pouÅ¾Ã­vala HTTPS. Co kdyÅ¾ zadÃ¡m Å¡patnÃ© heslo? API samozÅejmÄ nÃ¡leÅ¾itÄ odpovÃ­ (vÄetnÄ sprÃ¡vnÃ©ho HTTP kÃ³du):\n\n```js\n{\n  \"data\": {\n    \"login\": null\n  },\n  \"errors\": [\n    {\n      \"message\": \"The password is incorrect.\",\n      \"locations\": [\n        {\n          \"line\": 1,\n          \"column\": 11\n        }\n      ]\n    }\n  ]\n}\n```\n\nZ API si tak mÅ¯Å¾u vytÃ¡hnout vÅ¡e co potÅebuju pro zmÄnu stavu aplikace. V tomto pÅÃ­padÄ je to jen [JWT token](https://jwt.io/), kterÃ½ si uloÅ¾Ã­m tÅeba do local storage a jsem na frontendu pÅihlÃ¡Å¡en...\n\nTento ÄlÃ¡nek se jiÅ¾ natÃ¡hl vÃ­ce neÅ¾ bych si pÅÃ¡l a proto jsem vypustil informaci o implementaci na stranÄ PHP. To totiÅ¾ vydÃ¡ na samostatnou kapitolku, takÅ¾e si to nechÃ¡m na nÄkdy jindy (moÅ¾nÃ¡ hned pÅÃ­Å¡tÄ, aby to Å¡lo pÄknÄ popoÅadÄ).\n\nPodÄlte se prosÃ­m o postÅehy.\n\nKaÅ¾dÃ½ pozornÃ½ ÄtenÃ¡Å si takÃ© jistÄ vÅ¡iml zmÄny designu (nemluvÄ o pÅechodu na AWS) - lÃ­bÃ­? :)","frontmatter":"id: 95683b6a-7c7b-4ecf-b2a0-5730b2f85216\ntimestamp: 1483183709000\ntitle: GraphQL\nslug: 2-graphql"},{"attributes":{"id":"8119640e-e954-435c-9a95-ff14bf73634b","timestamp":1482501056000,"title":"MuskulaturnÃ­ rozÅ¡Ã­ÅenÃ­ DIC","slug":"muskulaturni-rozsireni-dic"},"body":"K Äemu je DI rozÅ¡Ã­ÅenÃ­ v Nette a jak se takovÃ© rozÅ¡Ã­ÅenÃ­ pÃ­Å¡e [uÅ¾ vÃ­me](http://zlml.cz/rozsireni-pro-dic). TeÄ se podÃ­vÃ¡me na zpÅ¯sob, jak pracovat s takovÃ½m rozÅ¡Ã­ÅenÃ­m na ÃºplnÄ novÃ© Ãºrovni. Tento ÄlÃ¡nek velkÃ© spoustÄ lidÃ­ zmÄnÃ­ zpÅ¯sob prÃ¡ce a aplikace budou najednou o level vÃ½Å¡. Jak Åekl jeden z ÃºÄastnÃ­kÅ¯ Å¡kolenÃ­: tak to je geniÃ¡lnÃ­... :)\n\n# Jak strukturovat aplikaci?\n\nO tom uÅ¾ jsem se pÃ¡rkrÃ¡t rozepsal a jeÅ¡tÄ se takÃ© minimÃ¡lnÄ jednou rozepÃ­Å¡u. ProteÄ jen rychlÃ½ Ãºvod. Za tu dobu co dÄlÃ¡m s frameworky jsem doÅ¡el k tomu, Å¾e nemÃ¡m Å¾Ã¡dnou sloÅ¾ku s nÃ¡zvem `app`. NapÅÃ­klad struktura [tohoto projektu](https://github.com/adeira/connector) vypadÃ¡ (zjednoduÅ¡enÄ) takto:\n\n```\n.\nâââ bin\nâÂ Â  âââ console\nâââ config\nâÂ Â  âââ config.local.neon\nâÂ Â  âââ config.local.neon.travis\nâÂ Â  âââ config.neon\nâÂ Â  âââ extensions.neon\nâÂ Â  âââ services.neon\nâââ log\nâââ src\nâÂ Â  âââ Authentication\nâÂ Â  âââ Common\nâÂ Â  âââ Devices\nâÂ Â  âââ Endpoints\nâÂ Â  âââ Routing\nâââ temp\nâââ tests (obsahuje 'src' se stejnou strukturou)\nâââ vendor\nâââ www\n```\n\nNa tom nenÃ­ vÅ¯bec nic pÅevratnÃ©ho. DÅ¯leÅ¾itÃ½ je vÅ¡ak zpÅ¯sob jakÃ½m se pracuje se sluÅ¾bami (services). Pokud se totiÅ¾ podÃ­vÃ¡me na obsah souboru `services.neon`, tak zjistÃ­me, Å¾e je tÃ©mÄÅ prÃ¡zdnÃ½:\n\n```neon\nservices:\n\tmigrations.codeStyle: Adeira\\Connector\\Migrations\\CodeStyle\n\trouter: Adeira\\Connector\\Routing\\RouterFactory::createRouter\n\n\tdoctrineSession: Adeira\\Connector\\Common\\Infrastructure\\Application\\Service\\DoctrineSession\n\tdummySession:\n\t\tclass: Adeira\\Connector\\Common\\Infrastructure\\Application\\Service\\DummySession\n\t\tautowired: no\n```\n\nPÅitom celÃ½ projekt mÃ¡ v tuto dobu zhruba 80 sluÅ¾eb, kterÃ© je potÅeba zaregistrovat. Kde je tedy ta magie? Asi je zÅejmÃ© kam mÃ­ÅÃ­m. O vÅ¡e se starajÃ­ rozÅ¡Ã­ÅenÃ­ dependency injection kontejneru. Ty jsou zaregistrovÃ¡ny v `extensions.neon`:\n\n```neon\nextensions:\n\t- Arachne\\ContainerAdapter\\DI\\ContainerAdapterExtension # because of migrations\n\t- Arachne\\EventDispatcher\\DI\\EventDispatcherExtension # because of migrations\n\tauthentication: Adeira\\Connector\\Authentication\\Infrastructure\\DI\\Nette\\Extension\n\tdevices: Adeira\\Connector\\Devices\\Infrastructure\\DI\\Nette\\Extension\n\tdoctrine.orm: Adeira\\Connector\\Doctrine\\ORM\\DI\\Extension(%debugMode%)\n\tfakeSession: Kdyby\\FakeSession\\DI\\FakeSessionExtension\n\tgraphql: Adeira\\Connector\\GraphQL\\Bridge\\Nette\\DI\\Extension\n\tmigrations: Zenify\\DoctrineMigrations\\DI\\MigrationsExtension\n\tsymfony.console: Adeira\\Connector\\Symfony\\Console\\DI\\Extension\n```\n\nJak je vidÄt, tak kaÅ¾dÃ½ balÃ­Äek ve sloÅ¾ce `src` mÃ¡ vlastnÃ­ rozÅ¡Ã­ÅenÃ­ (mÅ¯Å¾ mÃ­t klidnÄ vÃ­c rozÅ¡Ã­ÅenÃ­, ale nenÃ­ to potÅeba). Na nÃ¡sledujÃ­cÃ­ch ÅÃ¡dcÃ­ch ukÃ¡Å¾u jak takovÃ© rozÅ¡Ã­ÅenÃ­ napsat super jednoduÅ¡e.\n\n# RozÅ¡Ã­ÅenÃ­ bez znalosti Nette\\DI\n\nPsanÃ­ rozÅ¡Ã­ÅenÃ­ pro DIC v Nette mÅ¯Å¾e bÃ½t (a je) pomÄrnÄ sloÅ¾itÃ©. TroÅ¡ku to chce vÄdÄt, jak Nette funguje uvnitÅ. To samozÅejmÄ dÃ¡vÃ¡ do rukou obrovskÃ½ nÃ¡stroj, ale souÄasnÄ to takÃ© klade obrovskou pÅekÃ¡Å¾ku. PÅesnÄ z tohoto dÅ¯vodu vznikl balÃ­Äek [adeira/compiler-extension](https://github.com/adeira/compiler-extension), kterÃ½ jsem napsal pro lidi ve firmÃ¡ch, kteÅÃ­ se Nette teprve uÄÃ­, chtÄjÃ­ psÃ¡t aplikace tak jako jÃ¡ a na prozkoumÃ¡vÃ¡nÃ­ Nette\\DI nenÃ­ Äas. ZÃ¡bÄr tohoto balÃ­Äku nenÃ­ jen zde. SÃ¡m jsem si ho moc oblÃ­bil a dnes tak pÃ­Å¡u rozÅ¡Ã­ÅenÃ­ takÃ© (ne vÅ¾dy, ale dost Äasto).\n\nMyÅ¡lenka je takovÃ¡, Å¾e NEON formÃ¡t umÃ­ kaÅ¾dÃ½. Pokud ne, tak si staÄÃ­ prohlÃ©dnout [tuto strÃ¡nku](https://ne-on.org/) a je to vÅ¡em jasnÃ© (pouÅ¾Ã­vÃ¡m velmi ÃºspÄÅ¡nÄ na Å¡kolenÃ­ch a pÅednÃ¡Å¡kÃ¡ch). ZÃ¡roveÅ je snadnÃ© nauÄit o Äem je DI, proÄ se musÃ­ v Nette registrovat sluÅ¾by v konfiguraÄnÃ­m souboru a jak funguje autowiring. To v zÃ¡sadÄ staÄÃ­ k tomu, aby ÄlovÄk zaÄal psÃ¡t aplikace mnohem lÃ©pe neÅ¾ dÅÃ­ve. JenÅ¾e pokud chce nÄkdo strukturovat aplikaci tak jak to dÄlÃ¡m jÃ¡, tak musÃ­ registrovat vÅ¡echny sluÅ¾by do souboru `services.neon` a tÄch je desÃ­tky aÅ¾ stovky (ne-li tisÃ­ce). NavÃ­c je to nesmysl - proÄ by si takovÃ½ balÃ­Äek nemohl nÃ©st vÅ¡echno s sebou (vÄetnÄ konfiguracÃ­)?\n\nAle on mÅ¯Å¾e! PodÃ­vejte se, jak vypadÃ¡ takovÃ© rozÅ¡Ã­ÅenÃ­ `Authentication` balÃ­Äku:\n\n```php\n<?php declare(strict_types = 1);\n\nnamespace Adeira\\Connector\\Authentication\\Infrastructure\\DI\\Nette;\n\nuse Adeira\\Connector\\Doctrine\\ORM;\n\nclass Extension extends \\Adeira\\CompilerExtension implements ORM\\DI\\IMappingFilesPathsProvider\n{\n\n\tpublic function provideConfig(): string\n\t{\n\t\treturn __DIR__ . '/config.neon';\n\t}\n\n\tpublic function getMappingFilesPaths(): array\n\t{\n\t\treturn [__DIR__ . '/../../Persistence/Doctrine/Mapping'];\n\t}\n\n}\n```\n\nDÅ¯leÅ¾itÃ¡ je metoda `provideConfig`, kterÃ¡ slouÅ¾Ã­ pouze k tomu, aby rozÅ¡Ã­ÅenÃ­ prozradilo, kde je jeho konfiguraÄnÃ­ soubor. A tato konfigurace mÅ¯Å¾e bÃ½t [pÄknÄ bohatÃ¡](https://raw.githubusercontent.com/adeira/connector/03be1b949a0eb0c2f75c90ba3da5fca2ef8b2979/src/Authentication/Infrastructure/DI/Nette/config.neon). Takovou nutnou prerekvizitou k tomu aby vÅ¡e fungovalo je nahrazenÃ­ vÃ½chozÃ­ho `ExtensionsExtension` za novou implementaci, kterÃ½ toto chovÃ¡nÃ­ umoÅuje:\n\n```php\n$configurator = new Nette\\Configurator;\n$configurator->defaultExtensions['extensions'] = \\Adeira\\ConfigurableExtensionsExtension::class;\n```\n\nTuto jednu ÅÃ¡dku je nutnÃ© umÃ­stit tÅeba do souboru `bootstrap.php` kde se vytvÃ¡ÅÃ­ DI kontejner. Od teÄ bude toto chovÃ¡nÃ­ fungovat \"by default\" a vlastnÃ­ DI rozÅ¡Ã­ÅenÃ­ dokonce mÅ¯Å¾e dÄdit od `Nette\\DI\\CompilerExtension`. **NenÃ­ tedy potÅeba dÄlat Å¾Ã¡dnÃ© Ãºpravy ve stÃ¡vajÃ­cÃ­ch rozÅ¡Ã­ÅenÃ­ch.** A to je vÅ¾dy super! Pokud bude rozÅ¡Ã­ÅenÃ­ dÄdit od `Adeira\\CompilerExtension`, budete mÃ­t k dispozici jeÅ¡tÄ pomocnou metodu `setMapping`, kterÃ¡ se hodÃ­ pro mapovÃ¡nÃ­ presenterÅ¯. NenÃ­ to vÅ¡ak nutnÃ¡ podmÃ­nka.\n\nTo ale nenÃ­ vÅ¡echno!\n\n# Jak se chovajÃ­ konfigurace balÃ­ÄkÅ¯\n\nAsi nejzajÃ­mavÄjÅ¡Ã­ na nÃ¡vrhu dependency injection je to, Å¾e je moÅ¾nÃ© jednoduÅ¡e vymÄÅovat implementace bez zÃ¡sahu do kÃ³du. Jak se tÃ­mto pracuje balÃ­Äek [adeira/compiler-extension](https://github.com/adeira/compiler-extension)? PÅedstavte si, Å¾e mÃ¡te hlavnÃ­ konfiguraÄnÃ­ soubor s tÃ­mto obsahem:\n\n```neon\nparameters:\n    key1: value1\n    key2: value2\n\nservices:\n    - DefaultService\n    named: Tests\\Service\n\nextensions:\n    ext2: CustomExtension2\n\next2:\n    ext_key1: ext_value1\n    ext_key2: ext_value2\n\napplication:\n    mapping:\n        *: *\n```\n\nA teÄ pÅidÃ¡te novÃ½ balÃ­Äek, kterÃ½ si nese vlastnÃ­ konfiguraÄnÃ­ soubor a pomocÃ­ metody `provideConfig` jej dÃ¡vÃ¡ k dispozici. Jeho obsah je takovÃ½to:\n\n```neon\nparameters:\n    key2: overridden\n    key3: value3\n\nservices:\n    - Tests\\TestService\n    named: Service2\n\next2:\n    ext_key2: overridden\n    ext_key3: ext_value3\n\nlatte:\n    macros:\n        - App\\Grid\\Latte\\Macros\n```\n\nJakÃ½ je vÃ½sledek? V aplikaci budou k dispozici najednou tÅi parametry (obdobnÄ pro `ext2` parametry):\n\n```neon\nparameters:\n    key1: value1\n    key2: overridden\n    key3: value3\n```\n\nPodobnÄ se to chovÃ¡ i u sluÅ¾eb:\n\n```neon\nservices:\n    - DefaultService\n    named: Service2 # pÅepsat lze pouze pojmenovanou sluÅ¾bu\n    - Tests\\TestService\n```\n\nNavÃ­c se zaregistruje Latte makro. AÄkoliv toto chovÃ¡nÃ­ funguje dobÅe, doporuÄuji jej spÃ­Å¡e nevyuÅ¾Ã­vat k pÅepisovÃ¡nÃ­ globÃ¡lnÃ­ konfigurace. Mnohem vhodnÄjÅ¡Ã­ je vyuÅ¾Ã­vat tyto konfigurace k **pÅidÃ¡vÃ¡nÃ­** funkÄnostÃ­ z balÃ­ÄkÅ¯. Tedy registrace novÃ½ch sluÅ¾eb, pÅidÃ¡vÃ¡nÃ­ commandÅ¯ do konzole, registrace novÃ½ch typÅ¯ v Doctrine a podobnÄ. V takovÃ©m pÅÃ­padÄ se bude rozÅ¡Ã­ÅenÃ­ chovat naprosto oÄekÃ¡vanÄ. Vyhnete se tak tomu, Å¾e dva balÃ­Äky nastavujÃ­ jeden parametr a zÃ¡leÅ¾Ã­ tam na poÅadÃ­. Je to nÃ¡stroj - uÅ¾ijte jej s rozumem.\n\nTo ale poÅÃ¡d nenÃ­ vÅ¡echno!\n\n# MalÃ© pozlÃ¡tko na zÃ¡vÄr\n\nTento balÃ­Äek pÅidÃ¡vÃ¡ jeÅ¡tÄ jednu funkci, kterou povaÅ¾uji takÃ© za velmi uÅ¾iteÄnou. Jak jistÄ vÃ­te, tak rozÅ¡Ã­ÅenÃ­ se dÃ¡ zaregistrovat pomocÃ­ sekce `extensions` a pokud rozÅ¡Ã­ÅenÃ­ zaregistrujete pod nÄjakÃ½m jmÃ©nem, je moÅ¾nÃ© jej konfigurovat. To ostatnÄ bylo vidÄt pÅed malou chvÃ­lÃ­:\n\n```neon\nextensions:\n    ext2: CustomExtension2\n\next2:\n    ext_key1: ext_value1\n    ext_key2: ext_value2\n```\n\nV tomto pÅÃ­padÄ budou klÃ­Äe `ext_key1` a `ext_key2` k dispozici v samotnÃ©m rozÅ¡Ã­ÅenÃ­. To se potom pouÅ¾Ã­vÃ¡ k rÅ¯znÃ½m ÃºpravÃ¡m chovÃ¡nÃ­ samotnÃ©ho balÃ­Äku. Co kdyÅ¾ vÅ¡ak nepÃ­Å¡ete vlastnÃ­ PHP kÃ³d, ale chcete jen pÅedat tyto parametry do nÄjakÃ© sluÅ¾by, kterou ono rozÅ¡Ã­ÅenÃ­ registruje? K tomu slouÅ¾Ã­ zvlÃ¡Å¡tnÃ­ zÃ¡pis pomocÃ­ `%%`. V tomto konkrÃ©tnÃ­m pÅÃ­padÄ ÅeknÄme, Å¾e `CustomExtension2` mÃ¡ vlastnÃ­ konfiguraÄnÃ­ soubor s tÃ­mto obsahem:\n\n```\nservices:\n    - Tests\\TestService(%%ext_key2%%)\n```\n\nJak je vidÄt, tak si mÅ¯Å¾e vzÃ­t hodnotu `ext_key2` rovnou z konfigurace. DÅ¯leÅ¾itÃ© je si uvÄdomit, Å¾e zatÃ­mco `%aaa%` bere parametr `aaa` ze sekce `parameters`, tak `%%aaa%%` bere konfiguraci **pouze** ze sekce, pod kterou je rozÅ¡Ã­ÅenÃ­ zaregistrovanÃ©. ChovÃ¡ se to tedy ÃºplnÄ stejnÄ jako `$this->getConfig()` uvnitÅ rozÅ¡Ã­ÅenÃ­... :)\n\nDejte [tomuto rozÅ¡Ã­ÅenÃ­](https://github.com/adeira/compiler-extension) Å¡anci (nebo hvÄzdiÄku). Z praxe mohu ÅÃ­ci, Å¾e se s nÃ­m pracuje skuteÄnÄ dobÅe a pokud narazÃ­te na to, Å¾e potÅebujete udÄlat nÄco sloÅ¾itÃ©ho - nenÃ­ problÃ©m pokraÄovat v psanÃ­ DI rozÅ¡Ã­ÅenÃ­ v PHP zÃ¡roveÅ s tÃ­mto. UvÃ­tÃ¡m takÃ© nÃ¡pady na zlepÅ¡enÃ­ a rÅ¯znÃ© postÅehy. PÅecijen chvÃ­li mi trvalo, neÅ¾ jsem pÅiÅ¡el na ten sprÃ¡vnÃ½ zpÅ¯sob jak to uchopit.\n\n```\ncomposer require adeira/compiler-extension\n```\n\nInstalace je jednoduchÃ¡... :)","frontmatter":"id: 8119640e-e954-435c-9a95-ff14bf73634b\ntimestamp: 1482501056000\ntitle: MuskulaturnÃ­ rozÅ¡Ã­ÅenÃ­ DIC\nslug: muskulaturni-rozsireni-dic"},{"attributes":{"id":"462e4010-090c-4622-bbd9-295948c71609","timestamp":1481912287000,"title":"Od komponent zpÄt ke komponentÃ¡m","slug":"1-od-komponent-zpet-ke-komponentam"},"body":"On: *A budeÅ¡ o tom psÃ¡t nÄjakÃ© ÄlÃ¡nky?*<br>\nJÃ¡: *No tak jako mohl bych... :)*\n\n...a tak tedy zaÄÃ­nÃ¡m krÃ¡tkÃ½ seriÃ¡l a uvidÃ­m kam se za tÄch pÃ¡r dÃ­lÅ¯ dostanu.\n\nJednou z bezesporu nejzajÃ­mavÄjÅ¡Ã­ch vlastnostÃ­ Nette Frameworku jsou komponenty (myslÃ­m potomky `Nette\\Application\\UI\\Control`). Komponenta je logickÃ½ prvek na strÃ¡nce, kterÃ½ umoÅ¾Åuje uschovat zpÅ¯sob vykreslovÃ¡nÃ­ nÄjakÃ©ho elementu strÃ¡nky. Prakticky jsem zaÄal komponenty vyuÅ¾Ã­vat tÃ©mÄÅ ke vÅ¡emu a ÄÃ­m vÃ­ce komponent, tÃ­m jsem spokojenÄjÅ¡Ã­. Na strÃ¡nce je potom mÃ­sto mnoha sloÅ¾itÃ½ch Å¡ablon mnohdy velmi rozvÄtvenÃ½ strom komponent, kdy kaÅ¾dÃ¡ komponenta ÅeÅ¡Ã­ jak vykreslit tÅeba ÄÃ¡st hlaviÄky (klidnÄ i ve vÃ­ce variantÃ¡ch).\n\nSystÃ©m komponent mÃ¡ vÅ¡ak v Nette celou Åadu ÃºskalÃ­ a temnÃ½ch zÃ¡koutÃ­. JednÃ­m z nejvÄtÅ¡Ã­ch problÃ©mÅ¯ povaÅ¾uji to, Å¾e si komponenta nenese vÅ¡e s sebou. ZejmÃ©na pak styly a javascript. AÄkoliv jsem tento problÃ©m ÅeÅ¡il pokaÅ¾dÃ© a vÅ¾dy nÄjakÃ½m jinÃ½m originÃ¡lnÃ­m zpÅ¯sobem, vÅ¾dy jsem doÅ¡el ke stavu aplikace, kterÃ½ se mi z nÄjakÃ©ho dÅ¯vodu moc nelÃ­bil.\n\nZaÄal jsem tedy hledat jinÃ© ÅeÅ¡enÃ­. A neÅ¾ ukÃ¡Å¾u vÃ½sledek, je nutnÃ© pochopit kudy jsem Å¡el a kde jsem se cestou popÃ¡lil...\n\n# WebComponents\n\n[WebovÃ© komponenty](http://webcomponents.org/) jsou pÅesnÄ to co jsem hledal. WebovÃ¡ komponenta slouÅ¾Ã­ k rozÅ¡Ã­ÅenÃ­ DOMu o vlastnÃ­ HTML prvky (stejnÄ tak jako funguje napÅ. `<video>` tag). Pokud chcete vidÄt obsah takovÃ©ho tagu, doporuÄuji v Chrome zapnout \"Show user agent shadow DOM\". PÅirozenÄ jsem Å¡el hned za Polymerem, protoÅ¾e jej jiÅ¾ nÄjakÃ½ Äas znÃ¡m. Nikdy jsem si ho vÅ¡ak nevyzkouÅ¡el na reÃ¡lnÃ©m projektu. MinimÃ¡lnÃ­ definice Polymer elementu vypadÃ¡ takto:\n\n```html\n<dom-module id=\"element-name\">\n  <template>\n    <style>/* ... */</style>\n  </template>\n  <script>\n    Polymer({\n      is: 'element-name',\n    });\n  </script>\n</dom-module>\n```\n\nK dispozici tedy budu mÃ­t v HTML element `<element-name/>` (pozor: nÃ¡zev musÃ­ obsahovat pomlÄku). NÃ¡slednÄ bude mÃ­t komponenta definovanÃ½ zpÅ¯sob vykreslovÃ¡nÃ­, vlastnÃ­ styly i vlastnÃ­ JS chovÃ¡nÃ­. Super. Pokud chcete nÄco takovÃ©ho implementovat pomocÃ­ Nette komponent - vzdejte to rovnou. NeÅÃ­kÃ¡m, Å¾e by to neÅ¡lo, ale jednak je to sloÅ¾itÃ© a jednak bude supersloÅ¾itÃ© ÅeÅ¡it vÄci jako je [vulkanizace a pouÅ¾itÃ­ Crisperu](https://www.polymer-project.org/1.0/docs/tools/optimize-for-production). Rychle jsem tedy opustil cestu vytvÃ¡ÅenÃ­ komponent na stranÄ serveru a vÅ¡e jsem pÅedal javascriptu.\n\nBylo to super a pak jsem **po nÄkolika mÄsÃ­cÃ­ch prÃ¡ce s Polymerem celou aplikaci rozerval na kousky a pÅepsal ji do nÄÄeho jinÃ©ho**. Nikdy jsem nezaÅ¾il nic tak vyÄerpÃ¡vajÃ­cÃ­ho jako prÃ¡ci s Polymerem. HTML se totiÅ¾ bohuÅ¾el chovÃ¡ tak, Å¾e pokud nÄjakÃ½ element neznÃ¡, tak jej ignoruje. A prakticky jakÃ¡koliv chyba typu \"proÄ to nejde\" byla zpÅ¯sobena prÃ¡ce tÃ­mto. KaÅ¾dÃ½ element je tÅeba importovat a aÄkoliv IDE dokÃ¡Å¾e hodnÄ pomoci, tak existujÃ­ pÅÃ­pady, kdy to prostÄ nefunguje a jen kvÅ¯li tomu, Å¾e jsem si prvek nenaimportoval...\n\n```html\n<input is=\"my-input\">\n```\n\nToto je pÅesnÄ pÅÃ­pad se kterÃ½m si tÅeba WebStorm nedokÃ¡Å¾e poradit. TakÅ¾e fakticky je to moje chyba, Å¾e jsem nepozornÃ½, ale o to vÃ­ce potÅebuji, aby kdyÅ¾ nÄco udÄlÃ¡m blbÄ, tak mi to poÅÃ¡dnÄ nafackovalo a jÃ¡ hned vÄdÄl. Proto jsem Polymer opustil (ano to je jedinÃ½ dÅ¯vod) a aÄkoliv si myslÃ­m, Å¾e je to skvÄlÃ½ nÃ¡pad a webovÃ½m komponentÃ¡m hodnÄ fandÃ­m, vydal jsem se o kousek dÃ¡l.\n\n# React\n\nStejnÄ tak jako vÅ¡ichni, tak i jÃ¡ jsem skonÄil u Reactu. A stydÃ­m se za to. Nechci jej pouÅ¾Ã­vat jen proto, Å¾e je to cool. Ale dal jsem mu poprvÃ© velkou Å¡anci i tak (uÅ¾ jej znÃ¡m dlouho, ale nikdy jsem nepotÅeboval). Z mÃ©ho pohledu: zatÃ­mco Polymer umÃ­ by default ÃºplnÄ [neuvÄÅitelnÄ vymakanÃ© frontend prostÅedÃ­](https://beta.webcomponents.org/collection/Polymer/elements), React neumÃ­ nic neÅ¾ pracovat s daty. Ale jeden ze zÃ¡sadnÃ­ch rozdÃ­lÅ¯ je v tom, Å¾e je striktnÃ­. TakÅ¾e moje problÃ©my s neexistujÃ­cÃ­mi emlementy ÅeÅ¡Ã­ JSX by design (kdo znÃ¡ XHP, tak vÃ­). Vzdal jsem se tedy ÃºÅ¾asnÃ©ho nÃ¡stroje a pÅeÅ¡el jsem na nÄco, co umÃ­ v zÃ¡kladu jen chytÅe aktualizovat DOM a vykreslit `div` (takto vypadÃ¡ nejmenÅ¡Ã­ komponenta, kterou lze v Reactu napsat - ES6):\n\n```js\nimport React from 'react';\n\nexport default () => <div>Alenka</div>\n```\n\nV Reactu jsou dva druhy komponent - tzv. kontejnery a samotnÃ© prezentaÄnÃ­ komponenty. Toto rozdÄlenÃ­ mi takÃ© vyhovuje, protoÅ¾e se hezky separujÃ­ zÃ¡vislosti (kontejner pouze tahÃ¡ data a prezentaÄnÃ­ komponenta pouze vykresluje vytaÅ¾enÃ¡ data). NavÃ­c si takovÃ¡ komponenta nese i vlastnÃ­ styly (coÅ¾ se ne vÅ¡em lÃ­bÃ­, ale jÃ¡ tleskÃ¡m):\n\n```js\nimport './AuthorizedBase.css';\n```\n\nPodobnÄ je moÅ¾nÃ© importovat i obrÃ¡zky a dalÅ¡Ã­ zdroje dÃ­ky Webpacku (neuvÄÅitelnÄ WTF WOW nÃ¡stroj). Webpack je prÃ¡vÄ nÃ¡stroj, kterÃ½ ÅeÅ¡Ã­ vÄtÅ¡inu bolÃ­stek, kterÃ© jsem ÅeÅ¡il sloÅ¾itÄ u Nette komponent.\n\nAÄkoliv zrovna v mÃ©m pÅÃ­padÄ React docela dÃ¡vÃ¡ smysl, protoÅ¾e se bude hodnÄ pracovat s daty, pouÅ¾il bych je i na mÃ­stÄ, kde to totÃ¡lnÄ nedÃ¡vÃ¡ smysl (tedy tÅeba na blog). Je to totiÅ¾ zpÅ¯sob jak pracovat s frontendem takovÃ½m zpÅ¯sobem, jakÃ½ jsem dlouho hledal (navÃ­c je React jednoduchÃ½). MÃ¡ to vÅ¡ak jedno velkÃ© ALE.\n\nPokud bych vzal React a zaÄal jej pouÅ¾Ã­vat rovnou tak jak je, tak bych vytvoÅil pÄknou hovadinu. Je potÅeba milion dalÅ¡Ã­ch podpÅ¯rnÃ½ch sluÅ¾eb a vychytÃ¡vek jako je tÅeba server-rendering a code-splitting. Bez tÄchto vÄcÃ­, kterÃ© je potÅeba vyÅeÅ¡it, to nemÃ¡ ani smysl zkouÅ¡et. Na to upozorÅuji rovnou. SouhlasÃ­m s tÃ­m, Å¾e dÄlat to bez toho by byla prostÄ [ultrapÃ­Äovina](https://medium.com/@vojta/airbanko-v%C3%ADte-pro%C4%8D-m%C3%A1te-posran%C3%BD-web-629d96946576#.tshx84cqg). Z toho by mÄlo bÃ½t patrnÃ©, Å¾e nechci profitovat ani tak tÅeba z chytrÃ½ch aktualizacÃ­ DOMu, ale ze zpÅ¯sobu jak se pracuje v Reactu s komponentami. Ve vÃ½sledku bude naprosto v poÅÃ¡dku, kdyÅ¾ nepÅ¯jde poznat, Å¾e je strÃ¡nka napsÃ¡na v Reactu (ÄehoÅ¾ asi stejnÄ nedosÃ¡hnu). DÅ¯leÅ¾itÃ© je dodrÅ¾ovat rozdÄlenÃ­ komponent podle jejich ÃºÄelu (tahÃ¡nÃ­ dat vs. vykreslovÃ¡nÃ­).\n\nToto byl jen krÃ¡tkÃ½ Ãºvod. V dalÅ¡Ã­ch dÃ­lech se podÃ­vÃ¡m na to, jak tahat data ze serveru pomocÃ­ GraphQL a jakou pouÅ¾Ã­t knihovnu. ZÃ¡roveÅ je potÅeba vyÅeÅ¡it napojenÃ­ na Nette backend (protoÅ¾e PHP mÄ poÅÃ¡d moc bavÃ­... :)). PodÃ­vÃ¡me se takÃ© na routovÃ¡nÃ­, autorizaci modelovÃ© vrstvy, strukturu aplikace, renderovÃ¡nÃ­ na serveru, testovÃ¡nÃ­, Webpack, code-splitting a dalÅ¡Ã­ a dalÅ¡Ã­... Stay tuned. :)","frontmatter":"id: 462e4010-090c-4622-bbd9-295948c71609\ntimestamp: 1481912287000\ntitle: Od komponent zpÄt ke komponentÃ¡m\nslug: 1-od-komponent-zpet-ke-komponentam"},{"attributes":{"id":"04fd5b1a-eb64-4a48-b0db-47e4509d4ab8","timestamp":1480773916000,"title":"TestovÃ¡nÃ­ korelacÃ­ v MATLABu","slug":"testovani-korelaci-v-matlabu"},"body":"ÄÃ­m vÃ­ce mi proteklo kÃ³du pod prsty, tÃ­m vÃ­ce mÄ testovÃ¡nÃ­ bavÃ­. NebavÃ­ mÄ psÃ¡t super skvÄlÃ© testy, ale bavÃ­ mÄ brÃ¡t testy jako souÄÃ¡st vÃ½voje. Mnohdy je to dokonce nejpohodlnÄjÅ¡Ã­ zpÅ¯sob. Na nÃ¡sledujÃ­cÃ­ch ÅÃ¡dcÃ­ch ukÃ¡Å¾u jak se dÃ¡ napsat algoritmus pro [korelaci velkÃ©ho mnoÅ¾stvÃ­ dat](https://en.wikipedia.org/wiki/Correlation_and_dependence) a hlavnÄ **jak jej otestovat**. KonkrÃ©tnÄ pÅ¯jde o PearsonÅ¯v korelaÄnÃ­ koeficient.\n\nPearsonÅ¯v korelaÄnÃ­ koeficient lze popsat velmi jednoduchÃ½m vzorcem (podÃ­l kovariance a smÄrodatnÃ½ch odchylek souborÅ¯ dat - viz wiki). Implementace tohoto vzorce v MATLABu mÅ¯Å¾e vypadat tÅeba takto:\n\n```\nfunction rho = pearson(obj, X, Y)\n    X = X(:);\n    Y = Y(:);\n    covariance = cov(X, Y);\n    rho = covariance(1, 2) / (std(X) * std(Y));\n    if isnan(rho)\n        error('pearson:undefined', 'Correlation coefficient is undefined because the variance of Y is zero.')\n    end\nend\n```\n\nTento vzorec vracÃ­ ÄÃ­slo v intervalu od -1 do +1, kterÃ© charakterizuje mÃ­ru zÃ¡vislosti Y na X. Jak toto chovÃ¡nÃ­ otestovat? V MATLABu existuje pÅipravenÃ½ [TestCase](https://www.mathworks.com/help/matlab/ref/matlab.unittest.testcase-class.html) (od verze R2013a), takÅ¾e pokud znÃ¡te TestCase tÅeba z Nette\\Testeru, tak je to velmi jednoduchÃ© (Äti skoro stejnÃ©). PÅipravÃ­me si samotnou testovacÃ­ tÅÃ­du:\n\n```\nclassdef CorrelationTest < matlab.unittest.TestCase\n    methods (Test)\n        % TODO - test methods\n    end\nend\n```\n\nA zbÃ½vÃ¡ pouze doplnit pÃ¡r zÃ¡kladnÃ­ch testÅ¯. Zde bude vidÄt, Å¾e se vyplatÃ­ mÃ­t korelace implementovanÃ© v rÃ¡mci nÄjakÃ© tÅÃ­dy. PrvnÃ­ test by mohl kontrolovat perfektnÃ­ lineÃ¡rnÃ­ zÃ¡vislost:\n\n```\nfunction testPearsonCorrelated(testCase)\n    % actual, expected, ...\n    X1 = [1 2 3 4]; Y1 = [1 2 3 4];\n    X2 = [1 2 3 4]; Y2 = [1 3 5 7];\n    X3 = [1 3 5 7]; Y3 = [1 2 3 4];\n    testCase.verifyEqual(pearson(Correlation, X1, Y1), 1.0, 'AbsTol', 1e-15);\n    testCase.verifyEqual(pearson(Correlation, X2, Y2), 1.0, 'AbsTol', 1e-15);\n    testCase.verifyEqual(pearson(Correlation, X3, Y3), 1.0, 'AbsTol', 1e-15);\nend\n```\n\nTesto test otestuje tÅi rÅ¯znÄ strmÃ© lineÃ¡rnÃ­ zÃ¡vislosti. Pearson by nemÄl na strmost reagovat - vÅ¾dy by tento test mÄl vyjÃ­t +1. Pokud by se nÄkomu nelÃ­bilo opakovÃ¡nÃ­ verify metod, lze pÅepsat tento test troÅ¡ku chytÅeji:\n\n```\nfunction testPearsonCorrelated(testCase)\n    assert = @(x, y) testCase.verifyEqual(pearson(Correlation, x, y), 1.0, 'AbsTol', 1e-15);\n    assert([1 2 3 4], [1 2 3 4]);\n    assert([1 2 3 4], [1 3 5 7]);\n    assert([1 3 5 7], [1 2 3 4]);\nend\n```\n\nVÃ½sledek je stejnÃ½ jen s pomocÃ­ [anonymnÃ­ funkce](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html). DÅ¯leÅ¾itÃ¡ je v tomto testu pouze metoda `verifyEqual`, kterÃ¡ dÄlÃ¡ pÅesnÄ to co ÅÃ­kÃ¡ s tÃ­m, Å¾e se v tomto testu ignoruje zaokrouhlovacÃ­ chybu (velmi malÃ¡ absolutnÃ­ tolerance).\n\nTÃ­mto zpÅ¯sobem lze jednoduÅ¡e Pearson metodu poÅÃ¡dnÄ otestovat. CelÃ¡ implementace i s testy je [k dispozici online](https://gist.github.com/mrtnzlml/d12a93d0ce5bced2900dfbaee003c796) (vÄetnÄ Spearmanova algoritmu). PoslednÃ­ test kterÃ½ ukÃ¡Å¾u je [Anscombe's quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet) test. Zde je k dispozici sada hodnot, kterÃ¡ vÅ¾dy vytvoÅÃ­ jinou grafickou reprezentaci dat, ale PearsonÅ¯v korelaÄnÃ­ koeficient je poÅÃ¡d stejnÃ½. OpÄt mohu s vÃ½hodou vyuÅ¾Ã­t anonymnÃ­ funkci:\n\n```\nfunction testAnscombesQuartet(testCase)\n    c = Correlation(false);\n    test = @(x, y) testCase.verifyEqual(pearson(c, x, y), 0.816, 'RelTol', 0.001);\n    X1 = [10 8 13 9 11 14 6 4 12 7 5];\n    Y1 = [8.04 6.95 7.58 8.81 8.33 9.96 7.24 4.26 10.84 4.82 5.68];\n    test(X1, Y1);\n    X2 = [10 8 13 9 11 14 6 4 12 7 5];\n    Y2 = [9.14 8.14 8.74 8.77 9.26 8.10 6.13 3.10 9.13 7.26 4.74];\n    test(X2, Y2);\n    X3 = [10 8 13 9 11 14 6 4 12 7 5];\n    Y3 = [7.46 6.77 12.74 7.11 7.81 8.84 6.08 5.39 8.15 6.42 5.73];\n    test(X3, Y3);\n    X4 = [8 8 8 8 8 8 8 19 8 8 8];\n    Y4 = [6.58 5.76 7.71 8.84 8.47 7.04 5.25 12.50 5.56 7.91 6.89];\n    test(X4, Y4);\nend\n```\n\nKaÅ¾dÃ¡ sada bodÅ¯ vyjde vÅ¾dy 0.816 s relativnÃ­ tolerancÃ­ 0.001. A koneÄnÄ spuÅ¡tÄnÃ­ tÃ©to sady testÅ¯:\n\n```\n>> run(CorrelationTest)\nRunning CorrelationTest\n.........\nDone CorrelationTest\n__________\n\n\nans = \n\n  1Ã9 TestResult array with properties:\n\n    Name\n    Passed\n    Failed\n    Incomplete\n    Duration\n    Details\n\nTotals:\n   9 Passed, 0 Failed, 0 Incomplete.\n   0.14742 seconds testing time.\n\n>>\n```\n\nKdyÅ¾ se teÄ ÄlovÄk podÃ­vÃ¡ zpÄt, tak je vidÄt, Å¾e psÃ¡t a nÃ¡slednÄ upravovat a rozÅ¡Ã­Åovat takovou vÄc je bez testÅ¯ Å¡Ã­lenost. PÅesto psanÃ­ testÅ¯ v MATLABu nenÃ­ Å¾Ã¡dnou zvyklostÃ­. A jak jinak pÅi vÃ½voji ovÄÅovat, Å¾e vÅ¡e stÃ¡le funguje? VÅ¡ak uÅ¾ si dÃ¡vno nepamatujete kolik mÃ¡ vyjÃ­t PearsonÅ¯v korelaÄnÃ­ koeficient u Anscombe's quartetu... :-)","frontmatter":"id: 04fd5b1a-eb64-4a48-b0db-47e4509d4ab8\ntimestamp: 1480773916000\ntitle: TestovÃ¡nÃ­ korelacÃ­ v MATLABu\nslug: testovani-korelaci-v-matlabu"},{"attributes":{"id":"45b197e5-9e04-43d5-b48e-58f9a7f90887","timestamp":1478454487000,"title":"Tester: vlastnÃ­ Output Handler","slug":"tester-vlastni-output-handler"},"body":"Output Handler umoÅ¾Åuje zmÄnit finÃ¡lnÃ­ podobu vÃ½stupu z Nette Testeru. VÃ½stup mÅ¯Å¾e [vypadat napÅÃ­klad takto](https://travis-ci.org/adeira/connector/jobs/173698139). OsobnÄ se mi tento vÃ½stup lÃ­bÃ­ vÃ­c, protoÅ¾e mÃ­sto teÄek rovnou vidÃ­m co se skuteÄnÄ spouÅ¡tÃ­. MÅ¯Å¾e se to hodit a sÃ¡m jsem se pÅistil, Å¾e obÄas spouÅ¡tÃ­m testy takto:\n\n```\nvendor/bin/run-tests -o tap\n```\n\nA to jen proto, abych vidÄl co se zrovna testuje (TAP). Napsat si vlastnÃ­ vÃ½stupnÃ­ handler je jednoduchÃ©. Jen je tÅeba dÃ¡vat pozor na to, co je [napsÃ¡no v dokumentaci](https://tester.nette.org/#toc-setup-path), protoÅ¾e to [nemusÃ­ bÃ½t dobÅe](https://github.com/nette/web-content/pull/473)... :)\n\nStaÄÃ­ Tester spouÅ¡tÄt s pÅepÃ­naÄem `--setup`:\n\n```\nvendor/bin/tester --setup tests/runner-setup.php\n\n# or Testbench edition:\nvendor/bin/run-tests --setup tests/runner-setup.php\n```\n\nSkript `runner-setup.php` potom obsahuje samotnÃ½ handler kterÃ½ mÅ¯Å¾e vypadat tÅeba takto (PHP 7):\n\n```php\n<?php declare(strict_types = 1);\n\nuse Tester\\Dumper;\nuse Tester\\Runner\\Runner;\n\n/** @var \\Tester\\Runner\\Runner $runner */\n$runner->outputHandlers = []; // delete native output handlers\n$runner->outputHandlers[] = new class ($runner) extends \\Tester\\Runner\\Output\\ConsolePrinter\n{\n\n\tpublic function begin()\n\t{\n\t\tob_start();\n\t\tparent::begin();\n\t\techo rtrim(ob_get_clean()) . ' | ' . getenv('BOOTSTRAP') . \"\n\n\";\n\t}\n\n\tpublic function result($testName, $result, $message)\n\t{\n\t\t$outputs = [\n\t\t\tRunner::PASSED => Dumper::color('green', 'â ' . $testName),\n\t\t\tRunner::SKIPPED => Dumper::color('olive', 's ' . $testName) . \"($message)\",\n\t\t\tRunner::FAILED => Dumper::color('red', 'â ' . $testName) . \"\n\" . $this->indent($message, 3) . \"\n\",\n\t\t];\n\t\techo $this->indent($outputs[$result], 2) . PHP_EOL;\n\t}\n\n\tpublic function end()\n\t{\n\t\tob_start();\n\t\tparent::end();\n\t\techo \"\n\" . trim(ob_get_clean()) . \"\n\";\n\t}\n\n\tprivate function indent($message, $spaces)\n\t{\n\t\tif ($message) {\n\t\t\t$result = '';\n\t\t\tforeach (explode(PHP_EOL, $message) as $line) {\n\t\t\t\t$result .= str_repeat(' ', $spaces) . $line . PHP_EOL;\n\t\t\t}\n\t\t\treturn rtrim($result, PHP_EOL);\n\t\t}\n\t\treturn $message;\n\t}\n\n};\n```\n\nJe to vlastnÄ jen o tÅech metodÃ¡ch. ZaÄÃ¡tek `begin` a konec `end` slouÅ¾Ã­ jen k oÅezÃ¡nÃ­ mezer popÅ. k doplnÄnÃ­ dodateÄnÃ½ch informacÃ­. NejzajÃ­mavÄjÅ¡Ã­ je metoda `result`, kterÃ¡ velmi mÄnÃ­ zpÅ¯sob vykreslenÃ­ jednotlivÃ½ch ÅÃ¡dek. BohuÅ¾el Tester sÃ¡m od sebe oÅezÃ¡vÃ¡ vÃ½stupnÃ­ texty a podle toho jak jsem to rychle prohlÃ­Å¾el, tak s tÃ­m nejde nic moc udÄlat. PÅedstavoval bych si, Å¾e vÃ½stupnÃ­ texty budou troÅ¡ku lepÅ¡Ã­, ale to bez PR do `Nette\\Testr`u asi nepÅ¯jde...\n\nTo by bylo. PozornÄjÅ¡Ã­ ÄtenÃ¡Åi kÃ³du mohou mÃ­t teÄ otÃ¡zku co je to `getenv('BOOTSTRAP')`? Dlouze jsem ÅeÅ¡il jak psÃ¡t testy s ohledem na to, Å¾e se mi nechce poÅÃ¡d dÄlat require `bootstrap.php`, protoÅ¾e mÃ¡m testy hodnÄ zanoÅenÃ© a cesty k tomutou souboru bÃ½vajÃ­ hodnÄ dlouhÃ©. NavÃ­c je to nesmÃ­rnÄ limitujÃ­cÃ­, protoÅ¾e nelze jednoduÅ¡e bez Ãºpravy testÅ¯ mÄnit adresÃ¡Åovou strukturu. ÅeÅ¡enÃ­m je troÅ¡ku to obejÃ­t:\n\n```php\nrequire getenv('BOOTSTRAP');\n```\n\nExistuje [vÃ­ce ÅeÅ¡enÃ­](https://github.com/nette/tester/issues/275), ale toto mi sedÄlo nejlÃ©pe. UÅ¾iteÄnÃ© je pak napsat si vlastnÃ­ skript `tests/run` a vÅ¡echno to spojit:\n\n```bash\n#!/usr/bin/env bash\n\nBOOTSTRAP=$(pwd)/tests/bootstrap.php vendor/bin/run-tests --setup tests/runner-setup.php\n```\n\nSpuÅ¡tÄnÃ­ je tak jednoduchÃ©, jako je jednoduchÃ© napsat `tests/run`. Pokud by si to chtÄl nÄkdo prohlÃ©dnout vÃ­ce detailnÄ a popÅ. si s tÃ­m pohrÃ¡t, tak je vÅ¡e zde popisovanÃ© implementovÃ¡no v projektu [Adeira\\Connector na GitHubu](https://github.com/adeira/connector).\n\n:)","frontmatter":"id: 45b197e5-9e04-43d5-b48e-58f9a7f90887\ntimestamp: 1478454487000\ntitle: \"Tester: vlastnÃ­ Output Handler\"\nslug: tester-vlastni-output-handler"},{"attributes":{"id":"103fd545-2922-4c42-b50c-6387a1f05d48","timestamp":1475925989000,"title":"AutomatickÃ½ render prvkÅ¯ pÅi manuÃ¡lnÃ­m vykreslovÃ¡nÃ­ formulÃ¡Åe","slug":"automaticky-render-prvku-pri-manualnim-vykreslovani-formulare"},"body":"Je Äas na nÄjakou tu Nette divoÄinu. PodÃ­vejme se pod drobnohledem na to, jak funguje vykreslovÃ¡nÃ­ prvkÅ¯ formulÃ¡Åe. Nejprve si vytvoÅÃ­me ÃºplnÄ jednoduchÃ½ formulÃ¡Å, kterÃ½ bude obsahovat jeden prvek:\n\n```php\nprotected function createComponentContactForm()\n{\n\t$form = new UI\\Form();\n\t$form->addSubmit('send', 'Odeslat');\n\t$form->onSuccess[] = function (UI\\Form $form, $values) {\n\t\tthrow new \\Nette\\NotImplementedException;\n\t};\n\treturn $form;\n}\n```\n\nJak bude vypadat takovÃ½ formulÃ¡Å kdyÅ¾ jej vykreslÃ­me pomocÃ­ `{control contactForm}`? Ve vÃ½chozÃ­m projektu asi nÄjak takto:\n\n```html\n<form action=\"/web-project/www/\" method=\"post\" id=\"frm-contactForm\">\n<table><tbody><tr>\n\t<th></th>\n\t<td><input type=\"submit\" name=\"send\" value=\"Odeslat\" class=\"button\"></td>\n</tr></tbody></table>\n<input type=\"hidden\" name=\"_do\" value=\"contactForm-submit\">\n</form>\n```\n\nAniÅ¾ se budeme noÅit do detailÅ¯, tak je zÅejmÃ©, Å¾e se kromÄ naÅ¡eho odesÃ­lacÃ­ho inputu vyrenderoval i nÄjakÃ½ hidden input automaticky. NeÅ¾ se posuneme dÃ¡le z tohoto Ãºvodu, zjistÃ­me jeÅ¡tÄ, co se stane pÅi manuÃ¡lnÃ­m vykreslovÃ¡nÃ­:\n\n```latte\n{form contactForm}\n\t{input send}\n{/form}\n```\n\nAÄkoliv to nenÃ­ nikde danÃ©, i v tomto pÅÃ­padÄ se vykreslil dalÅ¡Ã­ input prvek automaticky:\n\n```html\n<form action=\"/web-project/www/\" method=\"post\" id=\"frm-contactForm\">\n\t<input type=\"submit\" name=\"send\" value=\"Odeslat\">\n\t<input type=\"hidden\" name=\"_do\" value=\"contactForm-submit\">\n</form>\n```\n\n# ChytrÃ½ antispam prvek\n\nPo krÃ¡tkÃ©m Ãºvodu (kterÃ½ je zcela jistÄ kaÅ¾dÃ©mu jasnÃ½) se pÅesuneme k nÄÄemu zdÃ¡nlivÄ jinÃ©mu. VytvoÅÃ­me si chytrÃ½ antispam prvek a zjistÃ­me, jak se bude pÅi renderovÃ¡nÃ­ chovat a jestli se vÅ¾dy chovÃ¡ pÅedvÃ­datelnÄ. A asi nebude pÅekvapenÃ­m, Å¾e se v urÄitÃ© situaci zachovÃ¡ moc moc Å¡patnÄ. JednÃ¡ se o delÅ¡Ã­ kÃ³d, takÅ¾e jej [najdete na Gistu](https://gist.github.com/mrtnzlml/95ac7726cf2788d83e3c87bc97dbef3a). Prakticky nejde o nic jinÃ©ho, neÅ¾ Å¾e si vytvoÅÃ­me vlastnÃ­ antispam prvek. Tento prvek funguje tak, Å¾e vytvoÅÃ­ input ve kterÃ©m je nÄjakÃ½ text a pokud je k dispozici javascript, tak jej schovÃ¡ a smaÅ¾e obsah. V tom pÅÃ­padÄ je kontrola v poÅÃ¡dku, protoÅ¾e tiÅ¡e pÅedpoklÃ¡dÃ¡, Å¾e ÃºtoÄnÃ­kÅ¯v robot nebude umÄt JS. AÄkoliv se to v dneÅ¡nÃ­ dobÄ mÅ¯Å¾e zdÃ¡t jako absurdnÃ­, tak to poÅÃ¡d funguje velmi dobÅe. NavÃ­c pÅidÃ¡vÃ¡ jeÅ¡tÄ pÃ¡r honeypotÅ¯ a doufÃ¡, Å¾e nÄkde robot uvÃ­zne. DÅ¯leÅ¾itÃ© je, Å¾e nijak neobtÄÅ¾uje bÄÅ¾nÃ©ho nÃ¡vÅ¡tÄvnÃ­ka - prostÄ to nenÃ­ vÅ¯bec vidÄt.\n\nNapÃ­Å¡eme si jednoduchÃ© rozÅ¡Ã­ÅenÃ­ pro DI kontejner, aby bylo moÅ¾nÃ© tento novÃ½ prvek pouÅ¾Ã­vat:\n\n```php\n<?php\n\nnamespace App;\n\nuse Nette\\Forms\\Form;\n\nclass HoneypotExtension extends \\Nette\\DI\\CompilerExtension\n{\n\n\tpublic function afterCompile(\\Nette\\PhpGenerator\\ClassType $class)\n\t{\n\t\t$init = $class->methods['initialize'];\n\t\t$init->addBody(self::class . '::registerControlExtensionMethods();');\n\t}\n\n\tpublic static function registerControlExtensionMethods()\n\t{\n\t\tForm::extensionMethod('addAntispam', function (Form $form, $name = 'honeypot', $label = 'VymaÅ¾te toto pole') {\n\t\t\t$form[$name . '_1'] = new \\App\\Forms\\AntispamControl($name, $label);\n\t\t\treturn $form;\n\t\t});\n\t}\n\n}\n```\n\nToto rozÅ¡Ã­ÅenÃ­ samozÅejmÄ zaregistrujeme v konfiguraÄnÃ­m souboru:\n\n```neon\nextensions:\n\t- App\\HoneypotExtension\n```\n\nA je to - v naÅ¡em pÅ¯vodnÃ­m formulÃ¡Åi mÅ¯Å¾eme pouÅ¾Ã­t novÃ½ prvek:\n\n```php\n$form = new UI\\Form();\n$form->addAntispam();\n//...\n```\n\nJe to troÅ¡ku magie a IDE si s tÃ­m neporadÃ­. Proto nebude naÅ¡eptÃ¡vat. V tomto pÅÃ­padÄ doporuÄuji napsat si nÄjakou vlastnÃ­ `FormFactory`, kterÃ¡ bude vytvÃ¡Åe instance `UI\\Form` a do tÃ©to tÅÃ­dy doplnit anotaci `@method addAntispam()`. UdÄlat si vlastnÃ­ tovÃ¡rniÄku na `UI\\Form` nenÃ­ vÅ¯bec Å¡patnÃ½ nÃ¡pad a to nejen pro antispam. Just do it.\n\nTak a teÄ kdyÅ¾ mÃ¡me funkÄnÃ­ antispam a honeypoty formulÃ¡Åe, je Äas kouknout se co se dÄje pÅi renderovÃ¡nÃ­. NejdÅÃ­ve automatickÃ© - pomocÃ­ `{control contactForm}`. Zde nenÃ­ co ÅeÅ¡it. ProstÄ se vÅ¡echny potÅebnÃ¡ polÃ­Äka vyrenderujÃ­ a vÅ¡e je tak, jak by mÄlo bÃ½t. A co manuÃ¡lnÃ­ vykreslovÃ¡nÃ­? Zde zaÄÃ­nÃ¡ ta nepÅÃ­jemnÃ¡ ÄÃ¡st. Nette nemÅ¯Å¾e vÄdÄt, Å¾e by mÄl automaticky vykreslit i dalÅ¡Ã­ prvky, takÅ¾e je prostÄ nevykreslÃ­. PraktickÃ¡ zkuÅ¡enost je takovÃ¡, Å¾e pÅi manuÃ¡lnÃ­m vykreslovÃ¡nÃ­ prostÄ antispam pÅestane fungovat. Zde se musÃ­me jeÅ¡tÄ zasnaÅ¾it.\n\n# ChytÅejÅ¡Ã­ antispam prvek\n\nTeÄ musÃ­me jÃ­t fakt na dÅeÅ problÃ©mu. Jak vlastnÄ funguje to automatickÃ© renderovÃ¡nÃ­ inputu pÅi manuÃ¡lnÃ­m vykreslovÃ¡nÃ­? Existuje nÄco jako tÅÃ­da `Nette\\Bridges\\FormsLatte\\Runtime`, kterÃ¡ mÃ¡ dvÄ metody: `renderFormBegin` a `renderFormEnd`. PrÃ¡vÄ druhÃ¡ zmÃ­nÄnÃ¡ pÅidÃ¡vÃ¡ nÄjakÃ½ vlastnÃ­ kÃ³d a je jedno, jestli se jednÃ¡ o manuÃ¡lnÃ­, nebo automatickÃ© renderovÃ¡nÃ­ formulÃ¡Åe. To by se nÃ¡m hodilo. VytvoÅme si tedy vlastnÃ­ `Runtime` tÅÃ­du. NenÃ­ potÅeba aby tato tÅÃ­da dÄdila od pÅ¯vodnÃ­. StaÄÃ­, kdyÅ¾ si vykopÃ­rujeme metodu `renderFormEnd` a lehounce pozmÄnÃ­me prostÅednÃ­ foreach:\n\n```php\nforeach ($form->getControls() as $control) {\n\tif ($control->getOption('autorender') || ($control->getOption('type') === 'hidden' && !$control->getOption('rendered'))) {\n\t\t$s .= $control->getControl();\n\t}\n}\n```\n\nPÅesnÄ tak. VÅ¡echny ÄÃ¡ry a kouzla se aktivujÃ­, kdyÅ¾ nastavÃ­me prvkÅ¯m `autorender` ([viz Gist](https://gist.github.com/mrtnzlml/95ac7726cf2788d83e3c87bc97dbef3a)). JenÅ¾e kde se tato tÅÃ­da pÅ¯vodnÄ pouÅ¾Ã­vala? Kde ji pouÅ¾ijeme nynÃ­?\n\nÅeÅ¡enÃ­ najdeme opÄt v namespace `Nette\\Bridges\\FormsLatte`, tentokrÃ¡t vÅ¡ak ve tÅÃ­dÄ `FormMacros`, kterÃ¡ registruje formulÃ¡ÅovÃ¡ makra. VytvoÅÃ­me si tedy vlastnÃ­ implementaci `FormMacros` tÅÃ­dy, kterÃ¡ bude dÄdit od pÅ¯vodnÃ­:\n\n```php\nclass FormMacros extends \\Nette\\Bridges\\FormsLatte\\FormMacros\n{\n\n\tpublic static function install(\\Latte\\Compiler $compiler)\n\t{\n\t\t$me = new static($compiler);\n\t\t$me->addMacro('form', [$me, 'macroForm'], 'echo \\App\\Forms\\Runtime::renderFormEnd(array_pop($this->global->formsStack));');\n\t\t$me->addMacro('formContainer', [$me, 'macroFormContainer'], 'array_pop($this->global->formsStack); $formContainer = $_form = end($this->global->formsStack)');\n\t\t$me->addMacro('label', [$me, 'macroLabel'], [$me, 'macroLabelEnd'], NULL, self::AUTO_EMPTY);\n\t\t$me->addMacro('input', [$me, 'macroInput']);\n\t\t$me->addMacro('name', [$me, 'macroName'], [$me, 'macroNameEnd'], [$me, 'macroNameAttr']);\n\t\t$me->addMacro('inputError', [$me, 'macroInputError']);\n\t}\n\n}\n```\n\nDÅ¯leÅ¾itÃ¡ je zde registrace makra `{form}`, protoÅ¾e to pro svojÃ­ uzavÃ­racÃ­ znaÄku pouÅ¾Ã­vÃ¡ novou implementaci `Runtime` (tu kterÃ¡ podporuje autorender). Zaregistrujeme:\n\n```neon\nlatte:\n\tmacros:\n\t\t- App\\Forms\\FormMacros::install\n```\n\nSmaÅ¾eme cache a profitujeme. NynÃ­ se autospam vykresluje automaticky i pÅi manuÃ¡lnÃ­m renderovÃ¡nÃ­... :)\n\nPodobnÄ lze samozÅejmÄ pÅidat i dalÅ¡Ã­ kontroly jako je napÅÃ­klad kontrolnÃ­ souÄet dvou ÄÃ­sel, kterÃ½ se javascriptem pÅedvypoÄte automaticky, ale s vypnutÃ½m javascriptem se zobrazÃ­ polÃ­Äka pro uÅ¾ivatele. ÅeÅ¡enÃ­ tohoto antispamu je takÃ© [na mÃ©m Gistu](https://gist.github.com/mrtnzlml/961c3e2368e98aaa433e02c6603a5086). Jen je potÅeba troÅ¡ku rozÅ¡Ã­Åit `HoneypotExtension`:\n\n```php\npublic static function registerControlExtensionMethods()\n{\n\tForm::extensionMethod('addAntispam', function (Form $form, $name = 'honeypot', $label = 'VymaÅ¾te toto pole') {\n\t\t$form[$name . '_1'] = new \\App\\AntispamControl($name, $label);\n\n\t\t$first = round(rand(0, 900), -2);\n\t\t$second = rand(0, 99);\n\t\t$validationData = self::encodeNumber($first) . ';' . self::encodeNumber($second);\n\t\t$form->addHidden('validationData', $validationData)->setOmitted(TRUE)->setOption('autorender', TRUE);\n\t\t$form[$name . '_3'] = new \\App\\Forms\\SumAntispamControl($first, $second, $validationData);\n\n\t\treturn $form;\n\t});\n}\n\nprivate static function encodeNumber($originalNumber)\n{\n\treturn strtr($originalNumber, '0123456789', '(_.!)@-*+&'); //cannot contain ';' character\n}\n```\n\nPÅ¯vodnÃ­ kÃ³d zÅ¯stÃ¡vÃ¡ stejnÃ½, jen jsem pÅidal dalÅ¡Ã­ kontrolu a zakÃ³doval ÄÃ­slice tak, aby nebylo jednoduchÃ© na prvnÃ­ pohled poznat princip tohoto antispamu. Ve fantazii se meze nekladou.\n\nA prÃ¡vÄ v tom je moÅ¾nÃ¡ troÅ¡ku problÃ©m. ZejmÃ©na kvÅ¯li autorender funkci je potÅeba zasahovat do vnitÅnostÃ­ Nette a zde je jiÅ¾ na povÃ¡Å¾enou, jestli je to dobÅe Äi nikoliv. VelkÃ© ÃºskalÃ­ vidÃ­m v tom, Å¾e si programÃ¡tor vymÄÅuje stavebnÃ­ kameny Nette za svoje troÅ¡ku upravenÃ© a to nemusÃ­ bÃ½t vÅ¾dy hned evidentnÃ­. Pak je na zamyÅ¡lenou, jestli by nestÃ¡lo za to vytvoÅit PR. Kdo by ale stÃ¡l o takovou hovadinu... :)","frontmatter":"id: 103fd545-2922-4c42-b50c-6387a1f05d48\ntimestamp: 1475925989000\ntitle: AutomatickÃ½ render prvkÅ¯ pÅi manuÃ¡lnÃ­m vykreslovÃ¡nÃ­ formulÃ¡Åe\nslug: automaticky-render-prvku-pri-manualnim-vykreslovani-formulare"},{"attributes":{"id":"1b9f9c28-3652-47e8-ba52-9ffcb7455f18","timestamp":1474881018000,"title":"Shhhh - vysÃ­lÃ¡ se speaker","slug":"shhhh-vysila-se-speaker"},"body":"TakovÃ© bylo tÃ©ma celÃ©ho Webexpa 2016 - shhhh. Nebo alespoÅ pÃ¡teÄnÃ­ ÄÃ¡sti. Pro ty nejlepÅ¡Ã­ a nejzajÃ­mavÄjÅ¡Ã­ ÅeÄnÃ­ky byl totiÅ¾ pÅipraven velkÃ½ sÃ¡l, kam se podle cedulek na dveÅÃ­ch vejde aÅ¾ 2500 lidÃ­. A nÃ¡pad to byl zcela zajistÃ© skvÄlÃ½. OvÅ¡em jen do chvÃ­le, neÅ¾ zaÄala prvnÃ­ pÅednÃ¡Å¡ka. V davu lidÃ­ totiÅ¾ existuje efekt, kdy pokud nÄco ÅÃ­kÃ¡m a jsem Å¡patnÄ slyÅ¡et - zaÄnu mluvit vÃ­ce nahlas. A tak to udÄlÃ¡ kaÅ¾dÃ½. TakÅ¾e to byl prvnÃ­ den **megaÅ¡rumec**. A do toho pÅednÃ¡Å¡ky. ÃplnÄ si dovedu pÅedstavit, Å¾e to byla pro pÅednÃ¡Å¡ejÃ­cÃ­ jedna z nejnÃ¡roÄnÄjÅ¡Ã­ch pÅednÃ¡Å¡ek vÅ¯bec. I ze strany posluchaÄe to bylo nÃ¡roÄnÃ© - dokonce jsem pÃ¡rkrÃ¡t pÅestal vnÃ­mat pÅednÃ¡Å¡ku, protoÅ¾e to bylo fakt maso. NechtÄlo se mi vracet se do toho sÃ¡lu zpÄt na dalÅ¡Ã­ skvÄlÃ© pÅednÃ¡Å¡ky. V sobotu uÅ¾ to bylo relativnÄ ok.\n\nAle ÅeÅ¡it hluk, kdyÅ¾ jsem si mohl poslechnout spoustu skvÄlÃ½ch pÅednÃ¡Å¡ek by bylo malichernÃ©. VÄc se mÃ¡ tak. PokaÅ¾dÃ©, kdyÅ¾ jedu na nÄjakou akci tohoto typu, jsem na vÃ¡Å¾kÃ¡ch. Na jednu stranu vÃ­m, Å¾e si poslechnu nÄjakou ÃºÅ¾asnou pÅednÃ¡Å¡ku a budu z toho ÃºplnÄ paf. Pak jsou zde vÅ¡ak takovÃ© u kterÃ½ch si ÄlovÄk ÅÃ­kÃ¡ - proÄ to je na Webexpu? A pÅesnÄ to se stalo.\n\nPrvnÃ­ den nezaÄal nejlÃ©pe (moje chyba), ale hned to zachrÃ¡nil Jakub Plichta z Adobe Typekit, Mark Boulton z Monotype a LukÃ¡Å¡ Linhart - Apiary. NemÃ¡ smysl vyjmenovÃ¡vat ÃºplnÄ vÅ¡echny - sorry - ale u tÄchto lidÃ­ bych doporuÄil podÃ­vat se na video kdo nevidÄl. PÅednÃ¡Å¡ky se pomÄrnÄ rychle dostÃ¡vajÃ­ na internet rovnou na koukaÄku (netrvalo to ani 24 hodin od konce akce - **dobrÃ¡ prÃ¡ce**). ZajÃ­mavÃ¡ byla takÃ© pÅednÃ¡Å¡ka od Roberta Kerra - chvÃ­li jsem nevÄdÄl, chvÃ­li jsem chtÄl tleskat, potom zase plakat a nakonec jÃ¡sat. Robert se nÃ¡m snaÅ¾il pÅedat zpÅ¯sob, jak drÅ¾et v prezentacÃ­ch tzv. beaty stejnÄ jako ve filmech.\n\n**No a pak se to stalo.** AÄkoliv jsem necÃ­tÃ­l Å¾Ã¡dnou joy emoci, pÅece jenom tam ta mrÅ¡ka byla. V noci jsem nemohl dospat a v polovinÄ noci jsem se vzbudil a zaÄal tvoÅit. Takovou silou na mÄ pÅ¯sobÃ­ podobnÃ© akce. Naposledy jsem toto udÄlal, kdyÅ¾ jsem se snaÅ¾il vyrovnat jet lag. A to vÅ¡echno jen dÃ­ky tÃ© inspiraci, kterou jsem pÅes celÃ½ den nasÃ¡l. UÅ¾ jen proto doporuÄuji.\n\nRÃ¡no Å¡up na pendolÃ­no a hurÃ¡ do Prahy - spÃ¡nek nespÃ¡nek. Mimochodem dÃ­ky za [aplikaci do telefonu](https://play.google.com/store/apps/details?id=eu.touchart.webexpo). NedÃ­vejte se na hodnocenÃ­ - nejste na internetu poprvÃ©. JÃ¡ jsem tohoto pomocnÃ­ka skuteÄnÄ uvÃ­tal a pouÅ¾Ã­val. **DobrÃ¡ prÃ¡ce.**\n\nNa druhÃ½ den jsem se vyloÅ¾enÄ tÄÅ¡il. A to hlavnÄ z toho dÅ¯vodu, Å¾e byl pro mÄ jako pro vÃ½vojÃ¡Åe daleko zajÃ­mavÄjÅ¡Ã­. NejvÄtÅ¡Ã­ lÃ¡kadlo byl Marco Pivetta. JasnÄ - tu prezentaci uÅ¾ znÃ¡m skoro pozpÃ¡tku, ale slyÅ¡et to Å¾ivÄ je nÄco ÃºplnÄ jinÃ©ho. A tak nÄjak to Å¡lo celÃ½ den. UrÄitÄ jsem byl v jednu chvÃ­li v limbu a s otevÅenou pusou jsem tiÅ¡e pÅikyvoval hlavou v domÄnÃ­, Å¾e jsem v sÃ¡le sÃ¡m a pÅednÃ¡Å¡ejÃ­cÃ­ to povÃ­dÃ¡ jen pro mÄ... :) UÅ¾ jsem se zmÃ­nil o burritu? NemÃ¡m moc rÃ¡d mexickÃ½ druh jÃ­del, ale jestli jsem se najedl? Oh boy - to byl ale macek. *(moÅ¾nÃ¡ to bylo proto, Å¾e jsem se poÅÃ¡d nÄÄÃ­m lÃ¡doval)*\n\nJak den pomalu pokraÄoval a jÃ¡ se ustaviÄnÄ dostÃ¡val z jednoho limbo stavu do dalÅ¡Ã­ho, pomalu (dÃ­ky Nina Zakharenko a Marko Iskander) se blÃ­Å¾ila poslednÃ­ pÅednÃ¡Å¡ka. OpÄt jsem nevÄdÄl co Äekat a plÃ¡noval jsem potÃ© jÃ­t jeÅ¡tÄ na jednu pÅednÃ¡Å¡ku. Ale to jsem jeÅ¡tÄ nevÄdÄl, Å¾e mÄ ÄekÃ¡ nejlepÅ¡Ã­ pÅednÃ¡Å¡ka vÅ¯bec a Å¾e nebudu schopen utrhnout se a neÃºÄastnit se rozhovoru s Michaelem Loppem. VÃ­te, Å¾e **jsem volatile**? JÃ¡ to nevÄdÄl. VlastnÄ jsem ani nevÄdÄl co to je. VÄdÄl jsem, Å¾e je nÄco Å¡patnÄ - Å¾e jsem tak toÅ¡ku buÅiÄ. A tak jsem hledal zpÅ¯sob jak se polepÅ¡it. VÄtÅ¡ina lidÃ­ je totiÅ¾ **stable**, tak bych mÄl bÃ½t takÃ©. No ne? **Å patnÄ!** TeÄ uÅ¾ to neberu jako takovou nevÃ½hodu a jsem za to vlastnÄ i rÃ¡d. Stable mi prostÄ nesedÃ­ (alespoÅ ne zatÃ­m). Jen jsem musel poÄkat nÄkolik let abych pochopil sÃ¡m sebe.\n\n```html\n<div id=\"presentation-embed-38898202\"></div>\n<script src='http://slideslive.com/embed_presentation.js'></script>\n<script>\n    embed = new SlidesLiveEmbed('presentation-embed-38898202', {\n        presentationId: '38898202',\n        autoPlay: false // change to true to autoplay the embedded presentation\n    });\n</script>\n```\n\n<br>\n**DÄkuji Webexpo 2016.** DÄkuji za skvÄlou lekci o mÃ© povaze, dÄkuji za skvÄlÃ© ÅeÄnÃ­ky. KaÅ¾dÃ© Webexpo bylo historicky tÃ­m nejvÄtÅ¡Ã­m Webexpem. A jÃ¡ to naprosto chÃ¡pu a nepochybuji, Å¾e trend bude i nadÃ¡le stejnÃ½. DÃ­ky takÃ© moderÃ¡torÅ¯m. Daniel Äech? JasnÄ - o tom snad nikdo nepochyboval, ale byl jsem pÅÃ­jemnÄ pÅekvapen ze vstupÅ¯ PavlÃ­ny LouÅ¾enskÃ© - **skvÄlÃ©**.\n\nDost superlativÅ¯.<br>\nJo a to triÄko je taky super!","frontmatter":"id: 1b9f9c28-3652-47e8-ba52-9ffcb7455f18\ntimestamp: 1474881018000\ntitle: Shhhh - vysÃ­lÃ¡ se speaker\nslug: shhhh-vysila-se-speaker"},{"attributes":{"id":"529dbd88-7b85-4e8a-9954-90aef87980cd","timestamp":1471811573000,"title":"10 obsesÃ­ na WebExpu 2016","slug":"10-obsesi-na-webexpu-2016"},"body":"**Obsese** Å¾. *kniÅ¾.* chorobnÄ utkvÄlÃ¡ pÅedstava, myÅ¡lenka; *med.* nutkavÃ© jevy, nejÄastÄji myÅ¡lenky, popudy k jednÃ¡nÃ­ apod., jeÅ¾ jsou nesmyslnÃ© a bezdÅ¯vodnÄ ovlÃ¡dajÃ­ mysl nemocnÃ©ho, aÄkoliv se je snaÅ¾Ã­ potlaÄit\n\n**Obsession** it's kind of like a passion for something that crosses the line into crazy territory ([source](https://www.vocabulary.com/dictionary/obsession))\n\nTrpÃ­te nÄjakou obsesÃ­? LetoÅ¡nÃ­ WebExpo nabÃ­zÃ­ lÃ©k ve formÄ pÅednÃ¡Å¡ek, kterÃ© jsou rozdÄleny do deseti okruhÅ¯ - [obsesÃ­](https://webexpo.cz/praha2016/obsessions/) - po vzoru zahraniÄnÃ­ho magazÃ­nu [Quartz](http://qz.com/obsessions). HlavnÃ­m cÃ­lem je lÃ©pe uspoÅÃ¡dat jednotlivÃ¡ tÃ©mata podle spoleÄnÃ½ch problÃ©mÅ¯, takÅ¾e si kaÅ¾dÃ½ snadno najde co jej zajÃ­mÃ¡. ZÃ¡roveÅ kaÅ¾dou obsesi zosobÅuje celÃ¡ Åada (vÄtÅ¡inou) svÄtovÄ znÃ¡mÃ½ch jmen, takÅ¾e je na co se tÄÅ¡it.\n\n*\"Vyhledejte odbornou pomoc dÅÃ­ve, neÅ¾ vÃ¡m obsese pÅerostou pÅes hlavu!\"* .{font-size:140%; color:gray}\n\nProÄ se vlastnÄ tak snaÅ¾Ã­m chodit na nÄjakÃ© takovÃ© akce a namotivovat i dalÅ¡Ã­ lidi? Kdo nevidÄl, mrknÄte se na nÃ¡sledujÃ­cÃ­ video. ZejmÃ©na kolem Äasu 15:08 mluvÃ­ Honza ÄernÃ½ o tom, v Äem to celÃ© vÄzÃ­. *\"ExistujÃ­ dvÄ skupiny lidÃ­. Lidi kteÅÃ­ se chtÄjÃ­ vzdÄlÃ¡vat (a vzdÄlavajÃ­ se) a pak ta druhÃ¡ skupina lidÃ­, kterÃ½m to je jedno...\"*\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1BjVVGmSdCw?list=PLqRXa8pInSUqxMhNhzJsV-1_FZ-YsrSYM\" frameborder=\"0\" allowfullscreen></iframe>\n\nLidi typu *\"je mi to jedno\"* (sem tam) potkÃ¡vÃ¡m a je mi z toho obÄas tak smutno, aÅ¾ jsem si vytvoÅil vnitÅnÃ­ potÅebu vzdÄlÃ¡vat se - nezakrnÄt. A tÄÅ¾ko budu hledat lepÅ¡Ã­ akci pÅi boji se zakrnÄnostÃ­, neÅ¾ je nejvÄtÅ¡Ã­ webovÃ¡ konference ve StÅednÃ­ EvropÄ - WebExpo. VÅ¾dyÅ¥ je tolik dÅ¯leÅ¾itÃ© zaÅ¾Ã­vat onen znÃ¡mÃ½ [The 'Just-got-back-from-a-conference' effect](http://www.commitstrip.com/en/2016/04/26/the-just-got-back-from-a-conference-effect/)... :)\n\nDruhou strÃ¡nkou vÄci je potom potkÃ¡vat lidi. To jsem se asi nejvÃ­c nauÄil na PoSobotÃ¡ch. A aÄkoliv s tÃ­m mÃ¡m troÅ¡ku introvertnÃ­ problÃ©m, tak si musÃ­m pÅiznat, Å¾e prÃ¡vÄ ostatnÃ­ lidÃ© (netrpÃ­cÃ­ krnÄnÃ­m) nejvÃ­ce motivujÃ­ a posouvajÃ­. ZvuÄnÃ½ch jmen je WebExpo plnÃ©. JmenovitÄ napÅÃ­klad:\n\n- Michael Lopp ([Stables and Volatiles â how to get different types of humans to work together](https://webexpo.cz/praha2016/prednaska/stables-and-volatiles-how-to-get-different-types-of-humans-to-work-together/)) - pracovnÄ pÅ¯vodnÄ Apple, Pinterest a souÄasnÄ Slack\n- Harry Roberts ([Refactoring CSS Without Losing Your Mind](https://webexpo.cz/praha2016/prednaska/refactoring-css-without-losing-your-mind/)) - klienty napÅÃ­klad Google, Unilever nebo BBC\n- Peter Morville ([The Architecture of Understanding](https://webexpo.cz/praha2016/prednaska/the-architecture-of-understanding/)) - Semantic Studios\n- Mark Boulton ([Design systems in difficult places](https://webexpo.cz/praha2016/prednaska/design-systems-in-difficult-places/)) - Monotype\n- Rachel Andrew ([The right layout tool for the job](https://webexpo.cz/praha2016/prednaska/the-right-layout-tool-for-the-job/)) - Perch CMS\n- Marco Pivetta ([Extremely defensive PHP](https://webexpo.cz/praha2016/prednaska/extremely-defensive-php/)) - Roave (you know Doctrine right?)\n\nÅeÄnÃ­kÅ¯ je samozÅejmÄ [mnohem vÃ­ce](https://webexpo.cz/praha2016/recnici/) (70). Je asi zÅejmÃ©, Å¾e se nejvÃ­ce tÄÅ¡Ã­m na technickÃ© pÅednÃ¡Å¡ky, tedy obsese [Creative Technology](https://webexpo.cz/praha2016/obsessions/#creative-technology) <span class=\"label label-success\">TIP</span>. TÃ­m spÃ­Å¡e na Marco Pivettu, kterÃ©ho jistÄ dobÅe znÃ¡te jako [Ocramiuse](https://twitter.com/Ocramius), protoÅ¾e si jej vÃ¡Å¾Ã­m jako velmi zkuÅ¡enÃ©ho programÃ¡tora a vÄtÅ¡inu jeho vÄcÃ­ pÅijÃ­mÃ¡m s nÄmÃ½m ÃºÅ¾asem. Na vÃ½bÄr jsou vÅ¡ak dalÅ¡Ã­ obsese:\n\n- Thinking & Doing ([link](https://webexpo.cz/prague2016/obsessions/#thinking-doing)) <span class=\"label label-success\">TIP</span> - design\n- Understanding Communication ([link](https://webexpo.cz/prague2016/obsessions/#understanding-communication)) - reklama\n- Visual Inventions ([link](https://webexpo.cz/prague2016/obsessions/#visual-inventions)) - grafika\n- Touch and Move ([link](https://webexpo.cz/prague2016/obsessions/#touch-and-move)) - interakce\n- Data Crunching ([link](https://webexpo.cz/prague2016/obsessions/#data-crunching)) - zpracovÃ¡nÃ­ dat\n- Machine Brains ([link](https://webexpo.cz/prague2016/obsessions/#machine-brains)) - prÃ¡ce s daty\n- Monetizing Eyeballs ([link](https://webexpo.cz/prague2016/obsessions/#monetizing-eyeballs)) - business\n- Beyond The Screens ([link](https://webexpo.cz/prague2016/obsessions/#beyond-the-screens))\n- A-Team ([link](https://webexpo.cz/prague2016/obsessions/#a-team)) <span class=\"label label-success\">TIP</span> - tÃ½movÃ¡ spoluprÃ¡ce\n\nA osobnÄ chci navÅ¡tÃ­vit nejen technickÃ© pÅednÃ¡Å¡ky, ale podÃ­vat se i na pÅednÃ¡Å¡ky z ÃºplnÄ jinÃ½ch oborÅ¯, protoÅ¾e 1) nikdy to nenÃ­ z ÃºplnÄ jinÃ©ho oboru a 2) rozÅ¡Ã­Åit si obzory nikdy neuÅ¡kodÃ­. PÅednÃ¡Å¡ky jsou v jednotlivÃ½ch obsesÃ­ch rozdÄleny na tÅi bloky: development (zelenÃ© pÅednÃ¡Å¡ky), business (oranÅ¾ovÃ©), design (fialovÃ©). SkvÄlÃ© je, Å¾e [program](https://webexpo.cz/praha2016/program/) na tyto barvy myslÃ­ a tak *tÃ©mÄÅ* nikdy nebÄÅ¾Ã­ soubÄÅ¾nÄ dvÄ stejnÃ© kategorie. A teÄ pozor - vstupenky jsou [za zvÃ½hodnÄnou cenu](https://webexpo.cz/praha2016/vstupenky/) pouze do konce tohoto mÄsÃ­ce.\n\nAkce probÄhne 23. â 24. zÃ¡ÅÃ­ 2016 v Praze konkrÃ©tnÄ v [PalÃ¡ci Lucerna](http://www.lucerna.cz/cz/) a oÄekÃ¡vanÃ¡ nÃ¡vÅ¡tÄvnost je 2000 offline lidÃ­. Pro vÃ­ce informacÃ­ doporuÄuji sledovat blog [WebExpo pÃ­Å¡e](https://medium.com/webexpo), kde jsou nÄkteÅÃ­ ÅeÄnÃ­ci pÅedstaveni podrobnÄ.\n\nTak WebExpojÄ... ;)\n\nBtw - akce trvÃ¡ dva dny, coÅ¾ znamenÃ¡ 3 party. Warm Up ve Ätvrtek [tady](https://www.laloca.cz/en), pÃ¡teÄnÃ­ [tady](http://www.skautskyinstitut.cz/staromak) a After Party [tady](http://www.prague.eu/en/object/places/63/lucerna-palace-great-hall-palac-lucerna-velky-sal).\n\n[![](http://s2.quickmeme.com/img/e9/e9b82533f50538f4d36656f24bf2afb39642223033cd19d52ef1eea5b03ab1bf.jpg)](https://webexpo.cz/prague2016/)","frontmatter":"id: 529dbd88-7b85-4e8a-9954-90aef87980cd\ntimestamp: 1471811573000\ntitle: 10 obsesÃ­ na WebExpu 2016\nslug: 10-obsesi-na-webexpu-2016"},{"attributes":{"id":"f856b454-c4a5-4271-8888-521ef1358f45","timestamp":1470502440000,"title":"More awesome Monolog for","slug":"more-awesome-monolog-for-nettefw"},"body":"NedÃ¡vno mi pÅiÅ¡el poÅ¾adavek na vytvoÅenÃ­ takovÃ©ho jednoduchÃ©ho zpÅ¯sobu, jak logovat uÅ¾ivatelskÃ© akce - konkrÃ©tnÄ zatÃ­m jen pÅihlÃ¡Å¡enÃ­ uÅ¾ivatele (do databÃ¡ze). Mohl jsem to udÄlat jednoduÅ¡e a prostÄ to nÄkam do kÃ³du nahÃ¡kovat. A nebo jsem to mohl udÄlat tak, jak jsem to takÃ© nakonec udÄlal - sloÅ¾itÄ. SamozÅejmÄ je tÅeba dopÅedu dostateÄnÄ promyslet, jestli to za tu prÃ¡ci stojÃ­, ale mÄl jsem dostatek argumentÅ¯ proto, Å¾e ano.\n\nJedna z nejdÅ¯leÅ¾itÄjÅ¡Ã­ch myÅ¡lenek byla, Å¾e Äasem bude pravdÄpodobnÄ potÅeba logovat do databÃ¡ze i dalÅ¡Ã­ akce, neÅ¾ je jen pÅihlaÅ¡ovÃ¡nÃ­. DruhÃ½m velmi silnÃ½m faktorem (kterÃ½ ovlivnil celÃ© ÅeÅ¡enÃ­) bylo, Å¾e pouÅ¾Ã­vÃ¡me [Monolog](https://github.com/Seldaek/monolog). KonkrÃ©tnÄ Kdyby\\Monolog rozÅ¡Ã­ÅenÃ­.\n\n# Kdyby Monolog\n\nZnÃ¡te tuto knihovnu ([GitHub](https://github.com/Kdyby/Monolog))? VÄÅÃ­m, Å¾e ano. Kolem Kdyby knihoven byl velkÃ½ hype. VelkÃ¡ sÃ­la tÃ©to knihovny je v tom, Å¾e se dokÃ¡Å¾e velmi jednoduÅ¡e napojit na Tracy a to takovÃ½m zpÅ¯sobem, Å¾e mÅ¯Å¾ete pouÅ¾Ã­vat Monolog bez BC breaku (tedy pomocÃ­ `Tracy\\Debugger::log()`). VÄtÅ¡Ã­m pÅiblÃ­Å¾enÃ­m k Monologu jako takovÃ©mu, je pak pouÅ¾Ã­vÃ¡nÃ­ sluÅ¾by `Kdyby\\Monolog\\Logger` resp. `Monolog\\Logger` jako zÃ¡vislosti v konstruktoru.\n\nKdyby logger pak obsahuje tato nastavenÃ­ (ne vÅ¡echny jsou v dokumentaci):\n\n```neon\nmonolog:\n\thandlers: []\n    processors: []\n    name: app\n    hookToTracy: yes\n    tracyBaseUrl: NULL\n    usePriorityProcessor: yes\n    registerFallback: yes\n```\n\nPro programÃ¡tora je asi nejzajÃ­mavÄjÅ¡Ã­ moÅ¾nost nastavit si vlastnÃ­ [handlery](https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md#handlers) a [procesory](https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md#processors). PozornÄjÅ¡Ã­mu oku vÅ¡ak neunikne, Å¾e toto nastavenÃ­ funguje globÃ¡lnÄ pro celou aplikaci. JenÅ¾e obÄas se hodÃ­ mÃ­t vÃ­ce loggerÅ¯ a kaÅ¾dÃ½ mÃ­t nastavenÃ½ jinak. NevÃ­m, jestli jsem nÃ¡hodou Kdyby\\Monolog nepochopil Å¡patnÄ, ale jedinou Å¡ancÃ­ jak toho dosÃ¡hnout, je nenastavoval logger v configu, vytvoÅit si vlastnÃ­ `Logger` objekty a ty si nastavit (`pushHandler`, `pushProcessor` a `setFormatter` u handlerÅ¯). A to je naprd.\n\n# Adeira Monolog\n\nMÃ­t vÃ­ce vlastnÃ­ch loggerÅ¯ uÅ¾ se mi pÃ¡rkrÃ¡t hodilo. A prÃ¡vÄ i zde by bylo super mÃ­t objekt, kterÃ½ mi umoÅ¾nÃ­ jednoduÅ¡e nÄco zalogovat do databÃ¡ze. ZÃ¡roveÅ je vÅ¡ak super propojenÃ­ s Tracy, kterÃ© mÃ¡ tak skvÄlÄ vyÅeÅ¡enÃ© Kdyby\\Monolog. Jak z toho vybruslit? VlastnÃ­m Composer balÃ­Äkem. NeÅ¾ se dostanu k samotnÃ© instalaci a nastavenÃ­, ukÃ¡Å¾u zde, jak jsem vyuÅ¾il vlastnÃ­ logger. PoÅÃ¡d vÅ¡ak mÄjte na pamÄti, Å¾e si kdykoliv musÃ­m bÃ½t schopen sÃ¡hnout na pÅ¯vodnÃ­ `Kdyby\\Monolog\\Logger` a vesele logovat podle globÃ¡lnÃ­ho nastavenÃ­!\n\nPrvnÄ jsem si vytvoÅil vlastnÃ­ logger:\n\n```php\n<?php\n\nnamespace App\\Audit\\Monolog\\Loggers;\n\nclass UsersAuditLogger extends \\Monolog\\Logger\n{\n\n}\n```\n\nPÅesnÄ, vÃ­c toho nenÃ­ potÅeba. Tento objekt vlastnÄ slouÅ¾Ã­ jen k tomu, abych mÄl co pÅedÃ¡vat v konstruktoru jako zÃ¡vislost. A zÃ¡roveÅ je to ta nejdivnÄjÅ¡Ã­ ÄÃ¡st - teÄ uÅ¾ to bude jen lepÅ¡Ã­. TeÄ by bylo fajn mÃ­t vlastnÃ­ handler, kterÃ½ mu pozdÄji pÅiÅadÃ­me a kterÃ½ se bude starat o to uklÃ¡dÃ¡nÃ­ do databÃ¡ze. Å lo by udÄlat to, Å¾e by handler skuteÄnÄ uklÃ¡dal rovnou do databÃ¡ze, ale pouÅ¾iju zde malÃ½ fÃ­gl:\n\n```php\n<?php\n\nnamespace App\\Audit\\Monolog\\Handler;\n\nclass UsersAuditDatabaseHandler extends \\Monolog\\Handler\\AbstractProcessingHandler\n{\n\n\t/** @var \\App\\Audit\\EntitiesQueue */\n    private $entitiesQueue;\n\n\tpublic function __construct(\\App\\Audit\\EntitiesQueue $entitiesQueue)\n\t{\n\t\t$this->entitiesQueue = $entitiesQueue;\n\t\tparent::__construct(\\Monolog\\Logger::DEBUG, TRUE); //TRUE - bubble\n\t}\n\n\tprotected function write(array $record)\n    {\n        $auditRecord = new \\App\\Audit\\AuditRecord($record['level'], $record['message'], $record['datetime']);\n        $this->entitiesQueue->add($auditRecord);\n    }\n\n}\n```\n\nJe to jen zjednoduÅ¡enÃ½ pÅÃ­klad. DÅ¯leÅ¾itÃ© ale je, Å¾e jsem zde zatÃ­m nic neuloÅ¾il, ale pouze to zaÅadil do jakÃ©si fronty na entity. To proto, Å¾e logÅ¯ mÅ¯Å¾e bÃ½t vÃ­ce a chci si je napÅed vÅ¡echny posbÃ­rat a nÃ¡slednÄ je v jednÃ© transakci poslat do databÃ¡ze. Objekt `AuditRecord` je obyÄejnÃ¡ Doctrine entita. `EntitiesQueue` je jednoduchÃ½ objekt, kterÃ½ tyto entity sbÃ­rÃ¡ a zÃ¡roveÅ naslouchÃ¡ na `Application::onShutdown`:\n\n```php\n<?php\n\nnamespace App\\Audit;\n\nclass EntitiesQueue implements \\Kdyby\\Events\\Subscriber\n{\n\t//zÃ¡vislosti, prÃ¡zdnÃ© pole, metoda 'add' atd. ...\n\n\tpublic function getSubscribedEvents()\n    {\n        return ['Nette\\Application\\Application::onShutdown' => 'onShutdown'];\n    }\n\n    public function onShutdown()\n    {\n        foreach ($this->entities as $entity) {\n            $this->em->persist($entity);\n        }\n        $this->em->flush();\n        $this->entities = [];\n    }\n\n}\n```\n\nVeÅ¡kerÃ© logy se tedy uloÅ¾Ã­ aÅ¾ v okamÅ¾iku, kdy aplikace ukonÄuje svÅ¯j Å¾ivotnÃ­ bÄh (podobnÃ½ princip se pouÅ¾Ã­vÃ¡ i pÅi prÃ¡ci s RabbitMQ). PouÅ¾itÃ­ je pak triviÃ¡lnÃ­. V jinÃ©m listeneru naslouchÃ¡m na udÃ¡lost `Nette\\Security\\User::onLoggedIn` a v tomto okamÅ¾iku zaloguji zprÃ¡vu. Ten vlastnÃ­ `UsersAuditLogger` je zde jako zÃ¡vislost.\n\n```php\n$this->usersAuditLogger->addInfo(\"User with login '$login' logged into administration.\");\n```\n\n# Instalace a nastavenÃ­ balÃ­Äku\n\nOk, cool - jak to pouÅ¾iju? ÃplnÄ jednoduÅ¡e:\n\n```\ncomposer require adeira/monolog\n```\n\nNÃ¡slednÄ zaregistrujeme rozÅ¡Ã­ÅenÃ­ do DIC:\n\n```neon\nextensions:\n    monolog: Adeira\\Monolog\\DI\\MonologExtension\n```\n\nA dÃ¡le uÅ¾ to znÃ¡te. NÃ¡sleduje krÃ¡tkÃ¡ ukÃ¡zka toho, co se s tÃ­m dÃ¡ dÄlat za Å¡vÃ­ky. Tento balÃ­Äek sÃ¡m od sebe registruje spoustu formÃ¡tovaÄÅ¯, procesorÅ¯ a jeden handler z Monologu ([viz readme](https://github.com/adeira/monolog/blob/master/readme.md)). Ty je pak moÅ¾nÃ© jednoduÅ¡e pouÅ¾Ã­vat pouze podle jejich nÃ¡zvu. ZÃ¡roveÅ je zachovÃ¡na tÃ©mÄÅ veÅ¡kerÃ¡ funkcionalita Kdyby\\Monologu (ano, mÅ¯j balÃ­Äek toto rozÅ¡Ã­ÅenÃ­ rozÅ¡iÅuje, protoÅ¾e napojenÃ­ na Tracy je fakt super). Mohu si pak nastavit loggery tÅeba takto:\n\n```neon\nmonolog:\n\thookToTracy: yes\n\tregisterFallback: yes\n\tusePriorityProcessor: yes\n\n\tprocessors:\n\t\tweb: Monolog\\Processor\\WebProcessor(NULL, [\n\t\t\t\tip: REMOTE_ADDR,\n\t\t\t\tuserAgent: HTTP_USER_AGENT,\n\t\t\t])\n\n\thandlers:\n\t\tdatabase:\n\t\t\tclass: App\\Audit\\Monolog\\Handler\\UsersAuditDatabaseHandler\n\t\t\tprocessors: [web]\n\t\tslack:\n\t\t\tclass: Adeira\\Monolog\\Handler\\SlackHandler(\n\t\t\t\tproductionMode: %productionMode%,\n\t\t\t\ttoken: '.....',\n\t\t\t\tchannel: exceptions,\n\t\t\t\tusername: 'Monolog',\n\t\t\t\tuseAttachment: no,\n\t\t\t\ticonEmoji: poop,\n\t\t\t\tlevel: Monolog\\Logger::CRITICAL,\n\t\t\t\tbubble: yes,\n\t\t\t\tuseShortAttachment: no,\n\t\t\t\tincludeContextAndExtra: yes,\n\t\t\t)\n\n\tloggers:\n\t\tglobal: #global logger from Kdyby (\\Kdyby\\Monolog\\Logger)\n\t\t\thandlers: [slack]\n\t\t\tprocessors: [git, web]\n\t\t- class: App\\Audit\\Monolog\\Loggers\\UsersAuditLogger\n\t\t  handlers: [database]\n```\n\nA teÄ slovnÄ. V sekci `processors` mÄnÃ­m chovÃ¡nÃ­ `web` procesoru. Ten je sice jiÅ¾ zaregistrovanÃ½, ale nelÃ­bÃ­ se mi jeho chovÃ¡nÃ­. VlastnÃ­ konfigurace mÃ¡ pÅednost. DÃ¡le pÅidÃ¡vÃ¡m dva novÃ© handlery (`database` a `slack`). DatabÃ¡zovÃ½ handler pouÅ¾Ã­vÃ¡ procesor `web` na kterÃ© jsem se odkÃ¡zal jen pomocÃ­ nÃ¡zvu. O propojenÃ­ se jiÅ¾ postarÃ¡ knihovna sama. V balÃ­Äku je pÅipravenÃ½ handler `SlackHandler`, kterÃ½ navÃ­c oproti pÅ¯vodnÃ­mu z Monologu chovÃ¡ tak, Å¾e zprÃ¡viÄky posÃ­lÃ¡ jen jednou za 15 minut. To mÅ¯Å¾e bÃ½t uÅ¾iteÄnÃ©... :-)\n\nNo a koneÄnÄ samotnÃ© loggery. Logger z Tracy lze nastavit pomocÃ­ speciÃ¡lnÃ­ sekce `global`. Zde si nastavuji slack handler a 2 procesory. ZÃ¡roveÅ pÅidÃ¡vÃ¡m jeÅ¡tÄ vlastnÃ­ logger (registruje se stejnÄ jako v sekci `services`) a nastavuji mu databÃ¡zovÃ© handler. A o to vlastnÄ celou dobu Å¡lo.\n\nPretty cool, hm? [PR a hvÄzdiÄky prosÃ­m sem](https://github.com/adeira/monolog)... :)\n\nDodateÄnÃ© odkazy na ÄtenÃ­:\n- [Logging with Monolog](http://symfony.com/doc/current/logging.html)\n- [How to Log Messages to different Files](http://symfony.com/doc/current/logging/channels_handlers.html)\n- [Configure multiple loggers and handlers](https://github.com/theorchard/monolog-cascade)\n\n[Follow me on Twitter and stay tuned](https://twitter.com/mrtnzlml)...","frontmatter":"id: f856b454-c4a5-4271-8888-521ef1358f45\ntimestamp: 1470502440000\ntitle: More awesome Monolog for #nettefw\nslug: more-awesome-monolog-for-nettefw"},{"attributes":{"id":"bc0e2a48-6c0d-4dcb-b686-ac5eecc11c88","timestamp":1469950790000,"title":"Dva Å¡ablonovacÃ­ systÃ©my zÃ¡roveÅ","slug":"dva-sablonovaci-systemy-zaroven"},"body":"MoÅ¾nÃ¡ pracujete na nÄjakÃ©m projektu, kterÃ½ pouÅ¾Ã­vÃ¡ jinÃ½ Å¡ablonovacÃ­ systÃ©m neÅ¾ je Latte, ale Latte se vÃ¡m natolik lÃ­bÃ­, Å¾e ho chcete pouÅ¾Ã­vat takÃ©. Nebo naopak pouÅ¾Ã­vÃ¡te Latte, ale *<abbr title=\"Smarty? Twig? Wtf? Omg?\">[doplÅ nÃ¡zev Å¡ablonovacÃ­ho systÃ©mu]</abbr>* se vÃ¡m natolik lÃ­bÃ­, Å¾e ho chcete pouÅ¾Ã­vat takÃ©. A nebo prostÄ nemÃ¡te na vÃ½bÄr a musÃ­te pouÅ¾Ã­vat vÃ­ce Å¡ablonovacÃ­ch systÃ©mÅ¯. V takovÃ©m pÅÃ­padÄ existuje asi jedinÃ© pÅÃ­moÄarÃ© ÅeÅ¡enÃ­ a tÃ­m je vlastnÃ­ implementace `Nette\\Application\\UI\\ITemplate`.\n\n# TemplateFactory\n\nOno to vlastnÄ zase aÅ¾ tak pÅÃ­moÄarÃ© nenÃ­. Je v tom totiÅ¾ malÃ½ hÃ¡Äek. V souÄasnÃ© dobÄ fungujÃ­ Latte Å¡ablony tak, Å¾e existuje tovÃ¡rna `TemplateFactory`, jejÃ­Å¾ Ãºkolem je vytvÃ¡Ået `Template` objekty. OriginÃ¡lnÃ­ implementace, kterou pouÅ¾Ã­vÃ¡ vÄtÅ¡ina lidÃ­ (`Nette\\Bridges\\ApplicationLatte\\Template`) pouze deleguje renderovÃ¡nÃ­ pÅÃ­mo na Latte. NabÃ­zelo by se tedy nahradit tento objekt svÃ½m vlastnÃ­m a delegovat renderovÃ¡nÃ­ jednak na Latte a jednak tÅeba na Smarty. HÃ¡Äek je vÅ¡ak v tom, Å¾e `Template` nenÃ­ sluÅ¾ba zaregistrovanÃ¡ v DIC, takÅ¾e nenÃ­ jednoduchÃ© ji nahradit.\n\nProto aby bylo moÅ¾nÃ© nahradit objekt `Template` vlastnÃ­m, je nutnÃ© nahradit takÃ© `TemplateFactory`. Tento objekt vytvÃ¡ÅÃ­ novÃ© instance tÅÃ­dy `Template` a tyto objekty dÃ¡le nastavuje (pÅidÃ¡vÃ¡ filtry, makra, promÄnnÃ©, providery, prostÄ Nette specific vÄci). NeÅ¡var s nahrazovÃ¡nÃ­m celÃ© tovÃ¡rniÄky se uÅ¾ pÃ¡r lidÃ­ [snaÅ¾ilo vyÅeÅ¡it](https://github.com/nette/application/issues/141), ale nikdy to nikdo nedotÃ¡hl do konce (vÄetnÄ mÄ). Jak to tedy udÄlat teÄ?\n\nV prvnÃ­ ÅadÄ je tÅeba vytvoÅit si vlastnÃ­ `TemplateFactory`:\n\n```php\n<?php\n\nclass TemplateFactory implements Nette\\Application\\UI\\ITemplateFactory\n{\n\t//...\n}\n```\n\nTo v podstatÄ znamenÃ¡ copy paste pÅ¯vodnÃ­ tovÃ¡rny. Je to troÅ¡ku nepÅÃ­jemnÃ©, ale je moÅ¾nÃ© z toho tÄÅ¾it. MÅ¯Å¾eme se napÅÃ­klad zbavit deprecated vÄcÃ­, nebo si libovolnÄ nakonfigurovat `Template` objekt. PodstatnÃ© je, Å¾e v `createTemplate` metodÄ vytvÃ¡ÅÃ­me vlastnÃ­ instanci `Template` objektu.\n\nTeÄ pÅijde ta dÅ¯leÅ¾itÃ¡ ÄÃ¡st na kterou nesmÃ­me zapomenout. Novou vlastnÃ­ `TemplateFactory` zaregistrujeme do konfiguraÄnÃ­ho souboru jako sluÅ¾bu:\n\n```php\nservices:\n\tlatte.templateFactory: Ant\\TemplateFactory\n```\n\nTento zÃ¡pis zajistÃ­ to, Å¾e se nejen `TemplateFactory` pÅidÃ¡ do DI kontejneru, ale zÃ¡roveÅ se nahradÃ­ pÅ¯vodnÃ­ implementace (proto to `latte.templateFactory` - dÅ¯leÅ¾itÃ©).\n\n# Template\n\nSamotnÃ½ `Template` objekt uÅ¾ je pak prkotina. StaÄÃ­ pouze zmÄnit implementaci metody `render`. JÃ¡ osobnÄ jsem to ÅeÅ¡il tak, Å¾e podle toho jakÃ¡ pÅijde koncovka souboru, tak nabÃ­dnu ten sprÃ¡vnÃ½ engine pro vykreslenÃ­. TÅeba nÄjak takto:\n\n```php\npublic function render($file = NULL, array $params = [])\n{\n\t$file = $file ?: $this->getFile();\n\n\tif (Strings::endsWith($file, '.latte') || $this->getLatte()->getLoader() instanceof \\Latte\\Loaders\\StringLoader) {\n\t\t//tady mÃ¡m nÄco hustÃ©ho co ukÃ¡Å¾u jindy\n\n\t\t$this->getLatte()->render($file, $params + $this->getParameters());\n   \t} else { //Smarty fallback\n   \t    //peklo kterÃ© nechce nikdy vidÄt\n\n\t\t$providers = $this->getLatte()->getProviders();\n        /** @var \\Nette\\Application\\UI\\Presenter $presenter */\n        $presenter = $providers['uiPresenter'];\n        if ($presenter->isAjax()) {\n            $this->page->fetch($file);\n        } else {\n            $this->page->display($file);\n        }\n   \t}\n}\n```\n\nTroÅ¡ku jsem to zjednoduÅ¡il aby byla podtrÅ¾ena myÅ¡lenka. DoporuÄÃ­m vÅ¡ak jeÅ¡tÄ jednu vÄc a to podÄdit si vlastnÃ­ template od `Nette\\Bridges\\ApplicationLatte\\Template`. Chce to troÅ¡ku si s tÃ­m pohrÃ¡t, ale hlavnÃ­ benefit bude vidÄt za chvÃ­li. ZejmÃ©na je dobrÃ© zamÄÅit se na `__set`:\n\n```php\npublic function __set($name, $value)\n{\n\t$this->assignToSmarty($name, $value); //DIY\n\tparent::__set($name, $value);\n}\n```\n\nTeÄ je totiÅ¾ moÅ¾nÃ© pouÅ¾Ã­vat klasickÃ© `$this->template->variable = 'xyz';` a tato promÄnnÃ¡ bude k dispozici bez ohledu na zpÅ¯sob vykreslenÃ­.\n\n# Gotchas a benefity\n\nKaÅ¾dÃ½ teÄ tedy mÅ¯Å¾e pouÅ¾Ã­vat napÅÃ­klad v komponentÃ¡ch `$this->template->render('***.tpl');` a zÃ¡roveÅ mÃ­t tÅeba layout v Latte. Je to fuk. A to je cool. Je vÅ¡ak tÅeba mÃ­t neustÃ¡le na mysli, Å¾e nelze jednotlivÃ© vykreslovacÃ­ zpÅ¯soby pouÅ¾Ã­vat ÃºplnÄ nahodile. StyÄinÃ½ bod je render metoda. Nelze tedy napÅÃ­klad pouÅ¾Ã­vat include v Latte a vyÅ¾adovat tam Å¡ablonu ze Smarty.\n\nAsi nejvÄtÅ¡Ã­ nachytÃ¡vka jsou snippety. Na to jak udÄlat podporu snippetÅ¯ do Smarty se mÅ¯Å¾eme podÃ­vat jindy - nenÃ­ to nic sloÅ¾itÃ©ho. ProblÃ©m byl vÅ¡ak u kombinovÃ¡nÃ­ jednotlivÃ½ch zpÅ¯sobÅ¯ vykreslenÃ­ a pÅedÃ¡vÃ¡nÃ­ `snippetMode` pÅÃ­znaku. `snippetMode` vlastnÄ ÅÃ­kÃ¡, jestli se mÃ¡ Å¡ablona vykreslit jako snippet (tedy jen podÄÃ¡sti) a vrÃ¡tit v payloadu. KdyÅ¾ jsem vÅ¡ak pouÅ¾il komponentu ve Smarty (vlastnÃ­ `{control name=test}`) a v tÃ©to komponentÄ normÃ¡lnÃ­ Latte Å¡ablonu obsahujÃ­cÃ­ snippety, tak to prostÄ nemohlo fungovat. Asi nejjednouÅ¡Å¡Ã­ ÅeÅ¡enÃ­ bylo v tomto pÅÃ­padÄ troÅ¡ku ohnout `Template` a `snippetMode` prostÄ pÅes tu aplikaci protlaÄit:\n\n```php\n$presenter = $this->getLatte()->getProviders()['uiPresenter'];\nif ($presenter->isAjax()) {\n\t//propagate snippet mode into components (Smarty templates):\n\tforeach ($presenter->getComponents(TRUE) as $component) {\n\t\t$component->snippetMode = $presenter->snippetMode;\n\t}\n\t$this->page->fetch($file);\n} else {\n\t$this->page->display($file);\n}\n```\n\nNenÃ­ to ÃºplnÄ stejnÃ© jako se chovÃ¡ Nette k Latte, ale ÃºÄel to plnÃ­ dobÅe a to jde... :)","frontmatter":"id: bc0e2a48-6c0d-4dcb-b686-ac5eecc11c88\ntimestamp: 1469950790000\ntitle: Dva Å¡ablonovacÃ­ systÃ©my zÃ¡roveÅ\nslug: dva-sablonovaci-systemy-zaroven"},{"attributes":{"id":"8e78cf63-c20a-4fc9-b19e-46984abcb314","timestamp":1469363764000,"title":"Testbench 2.3 is out (finally)","slug":"testbench-2-3-is-out-finally"},"body":"Yeah, you heard that correctly. Testbench 2.3 has been released and it brings a lot of new features. I don't want to write about small bugfixes but about real improvements in testing environment. There was always one important mission in Testbench - to make testing easier for newcomers. And I am happy to show you biggest feature in this release: **scaffold**.\n\nImagine you have your own application but without tests (this is the best situation for scaffolding). Now you can generate whole testing environment using this single command:\n\n```\nvendor/bin/run-tests --scaffold tests/bootstrap.php\n```\n\nAs you can see, you have to prepare `bootstrap.php` before scaffold. You can find default one in [readme](https://github.com/mrtnzlml/testbench/blob/master/readme.md). Content of this file can be very simple:\n\n```php\n<?php\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\nTestbench\\Bootstrap::setup(__DIR__ . '/_temp', function (\\Nette\\Configurator $configurator) {\n    $configurator->createRobotLoader()->addDirectory([\n        __DIR__ . '/../app',\n    ])->register();\n\n    $configurator->addParameters([\n        'appDir' => __DIR__ . '/../app',\n    ]);\n\n    $configurator->addConfig(__DIR__ . '/../app/config/config.neon');\n    //$configurator->addConfig(__DIR__ . '/tests.neon');\n});\n```\n\nJust remember, that it has to be possible to run application using this bootstrap in test environment. Look at this video where you can see how to use it:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/63Vn6Udg3xQ\" frameborder=\"0\" allowfullscreen></iframe>\n\nAnd how does it work exactly? At this very moment there is very simple idea in Testbench. Scaffold is firstly trying to find every possible presenter in Nette appliaction. Then there are two parts of scaffold process: collecting information and generating PHP code. Collecting information is the most challenging part of scaffold, but it's basically looking for *action*, *render*, *handle* and *createComponent\\** methods using reflection. It looks at the signature of the method and then it tries to run these methods to get the response. Now it's possible to generate whole testing class for every presenter in application.\n\nThis approach is great, because it's possible to generate tests according to the response, but there are some drawbacks as well. It may not be accurate. The most problematic part is parameter (even optional) guessing, because application can response on different parameters differently and it's not possible to figure out if it's expected behavior or not. This means that you always have to look at the generated tests and fix them if needed.\n\n# Another improvements and news\n\nI dropped support for PHP 5.4 and 5.5 because [they are dead](http://php.net/supported-versions.php). Currently supported PHP versions are only PHP 5.6 (LTS) and PHP 7.0 until 31 Dec 2018 and 3 Dec 2018 respectively. Deal with it if you are running older PHP. You shouldn't do that anyway.\n\nAnother big change has been introduced to the database behavior during tests. Now every single request to the database is going to the fake clean database even if you are not using TDoctrine or TNetteDatabase trait. At the very begining it was expected behavior to create databases only if you are using those traits, but it wasn't programmer friendly and sometimes it causes weird situations. I am working on another completely different transactional approach in [this branch](https://github.com/mrtnzlml/testbench/tree/transactional-db-tests), but it's going to be in next release (maybe). \n\nThere is another improvement in database testing. Testbench now supports **Doctrine migrations**! If you have migrations configured in your project, you can enable them in Testbench config like this:\n\n```neon\ntestbench\n\tmigrations: yes\n\tsqls:\n\t\t- %testsDir%/_helpers/sqls/mysql_1.sql\n\t\t- %testsDir%/_helpers/sqls/mysql_2.sql\n```\n\nTestbench will load SQLs and then it will run migrations to the latest version.\n\nThe last but not least important note is, that Testbench is at this moment using `dev-master` of Nette\\Tester. Mostly because of new awesome `-C` switch in command line. But this means that if you want to use Testbench 2.3, you have to omit Nette\\Tester version in `composer.json`, or use something line this:\n\n```js\n\"require-dev\": {\n\t\"nette/tester\": \"2.0.x-dev as v1.7\",\n\t\"mrtnzlml/testbench\": \"^2.3\"\n},\n```\n\nPlease [read release notes](https://github.com/mrtnzlml/testbench/releases/tag/v2.3) for further details. I hope you'll enjoy this release and Testbench becomes much more useful and powerful tool for testing thanks to you - Testbench user.","frontmatter":"id: 8e78cf63-c20a-4fc9-b19e-46984abcb314\ntimestamp: 1469363764000\ntitle: Testbench 2.3 is out (finally)\nslug: testbench-2-3-is-out-finally"},{"attributes":{"id":"7f009c6b-998c-4cef-8797-cf1853ac5ea7","timestamp":1466343012000,"title":"Fix compatibility with Nette 2.4","slug":"fix-compatibility-with-nette-2-4"},"body":"PrÃ¡vÄ v tÄchto dnech pÅichÃ¡zÃ­ dalÅ¡Ã­ vÃ½znamnÃ¡ minor verze Nette balÃ­ÄkÅ¯ do vaÅ¡ich vendorÅ¯. UdÃ¡lo se velkÃ© mnoÅ¾stvÃ­ zmÄn a to zejmÃ©na pod kapotou. To si vÅ¡ak s sebou nese urÄitou daÅ a tou je potÅeba uÄinit pÃ¡r Ãºprav v kÃ³du, kterÃ© zajistÃ­ kompatibilitu. TÄchto Ãºprav nenÃ­ mnoho. A kdyÅ¾ uÅ¾ jsou, tak na nÄ Nette upozornÃ­ tÅeba prostÅednictvÃ­m `E_USER_DEPRECATED`. Pokud vÅ¡ak pracujete se sloÅ¾itÄjÅ¡Ã­ aplikacÃ­, kterÃ¡ tÅeba nebyla pÅ¯vodnÄ postavenÃ¡ na Nette, mÅ¯Å¾e bÃ½t takovÃ¡ Ãºprava docela lopota.\n\nZde se tedy nedoÄtete co je v Nette novÃ©ho, ale jak co upravit a na co jsem narazil, kdyÅ¾ jsem tuto kompatibilitu reÅ¡il.\n\n# Ãpravy v Latte\n\nJelikoÅ¾ pracuji na starÅ¡Ã­m projektu, kterÃ½ je pÅ¯vodem non-Nette, tak je zvykem pouÅ¾Ã­vat PHP konstanty. VÅ¡ude. ZatÃ­mco dÅÃ­ve staÄilo pouÅ¾Ã­vat `{=NAZEV_KONSTANTY}`, teÄ je nutnÃ© konstantu pÅÃ­mo oznaÄit `{=constant('NAZEV_KONSTANTY')}`, aby bylo jednoznaÄnÄ jasnÃ©, Å¾e se jednÃ¡ skuteÄnÄ o konstantu. Jedna z velmi uÅ¾iteÄnÃ½ch vlastnostÃ­ Latte bylo to, Å¾e nebyl problÃ©m napsat PHP kÃ³d do klasickÃ½ch PHP tagÅ¯ `<?php`. Existovalo makro `{?`, ale dnes je doporuÄovanÃ© pouze `{php ...}`. Toto je zÃ¡roveÅ jedinÃ¡ vÄc, kterÃ¡ mÄ Å¡tve, protoÅ¾e dÅÃ­ve bylo pÅevÃ¡dÄnÃ­ externÃ­ch Å¡ablon do Latte velmi jednoduchÃ©. TÃ­mto se vÅ¡e komplikuje.\n\nVelkÃ© zmÄny jsou pod kaptou Latte. Pokud mÃ¡te vlastnÃ­ `Template` objekt (a tedy i vlastnÃ­ `TemplateFactory`, protoÅ¾e to jinak udÄlat nejde), doporuÄuji udÄlat aktualizaci podle masteru. Asi nejzÃ¡sadnÄjÅ¡Ã­ zmÄna je prÃ¡vÄ v `TemplateFactory` pÅi naplÅovÃ¡nÃ­ Å¡ablony:\n\n```php\n// default parameters\n$template->user = $this->user;\n$template->baseUri = $template->baseUrl = $this->httpRequest ? rtrim($this->httpRequest->getUrl()->getBaseUrl(), '/') : NULL;\n$template->basePath = preg_replace('#https?://[^/]+#A', '', $template->baseUrl);\n$template->flashes = [];\nif ($control) {\n\t$template->control = $control;\n\t$template->presenter = $presenter;\n\t$latte->addProvider('uiControl', $control);\n\t$latte->addProvider('uiPresenter', $presenter);\n\t$latte->addProvider('snippetBridge', new Nette\\Bridges\\ApplicationLatte\\SnippetBridge($control));\n}\n$latte->addProvider('cacheStorage', $this->cacheStorage);\n```\n\nNovÄ se pouÅ¾Ã­vajÃ­ tzv. providery, kterÃ© lze zÃ­skat takto: `$template->getLatte()->getProviders()`. Pokud tedy mÃ¡te napÅ. vlastnÃ­ Latte makra, tak ty je zapotÅebÃ­ zmÄnit v tomto duchu: z `$_control->link(...` na `$this->global->uiControl->link(...`.\n\n# Ãpravy v Nette\n\nRelativnÄ nedÃ¡vnou zmÄnou je absence metody `Nette\\Utils\\Html::add`. Ta je nahrazena kombinacÃ­ `addText` resp. `addHtml`. Touto zmÄnou by se mÄlo zajistit, Å¾e programÃ¡tor nepoÅ¡le do Å¡ablony HTML kÃ³d o kterÃ©m si myslÃ­, Å¾e je escapovanÃ½, ale on ve skuteÄnosti nenÃ­.\n\nAsi nejvÄtÅ¡Ã­ myÅ¡lenkovÃ½ obrat zpÅ¯sobila zmÄna chovÃ¡nÃ­ rout. KonkrÃ©tnÄ `Route::SECURED`. Od samÃ©ho zaÄÃ¡tku co dÄlÃ¡m s Nette jsem tento pÅÃ­znak chÃ¡pal blbÄ a [nejsem sÃ¡m](https://forum.nette.org/cs/26348-route-secured-nevynucuje-https-100). NovÄ Nette zachovÃ¡vÃ¡ takovÃ½ protokol, s kterÃ½m uÅ¾ivatel pÅiÅ¡el. Pokud potÅebujete aplikaci na HTTPS, tak sprÃ¡vnÃ© ÅeÅ¡enÃ­ je nastavit toto chovÃ¡nÃ­ na Ãºrovni serveru, tÅeba takto:\n\n```\nRewriteCond %{HTTPS} !=on\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n```\n\nPokud i pÅesto potÅebujeme generovat odkazy v aplikaci s HTTPS (k ÄemuÅ¾ byl urÄen `Route::SECURED` pÅÃ­znak), mÅ¯Å¾eme tak uÄinit vepsÃ¡nÃ­m protokolu do masky routy. Dva pÅÃ­klady Åeknou vÃ­ce neÅ¾ tisÃ­c slov:\n\n```php\n$router[] = new Route('rss/novinky.php', 'Front:Rss:novinky'); //celÃ½ web je na HTTP\n$this->link('//:Front:Rss:novinky'); //vygeneruje: http://example.com/rss/novinky.php\n\n$router[] = new Route('https://%host%/rss/novinky.php', 'Front:Rss:novinky'); //celÃ½ web je stÃ¡le na HTTP\n$this->link('//:Front:Rss:novinky'); //vygeneruje: https://example.com/rss/novinky.php\n```\n\nVe stejnÃ©m smyslu je zapotÅebÃ­ upravit i [vlastnÃ­ routery](https://github.com/mrtnzlml/static-router/commit/0b3ab17472cf2d051f7e4b9878354f3446cc55ff). TakÅ¾e zpÃ¡tky z Å¡icÃ­m strojÅ¯m opravit si aplikace... :)\n\n# PÃ¡r dalÅ¡Ã­ch drobnostÃ­ a postÅehÅ¯\n\nMÃ­sto `Nette\\Object` je teÄ moÅ¾nÃ© pouÅ¾Ã­vat traitu `Nette\\SmartObject`. Tato traita se od svÃ©ho pÅedchÅ¯dce liÅ¡Ã­ v nÄkolika drobnostech. VÃ­ce informacÃ­ je rozepsÃ¡no v [tomto vlÃ¡knu na fÃ³ru](https://forum.nette.org/cs/26250-pojdte-otestovat-nette-2-4-rc#p173934). S tÃ­m se vÃ¡Å¾e to, Å¾e obÄas je potÅeba zmÄnit podobnÃ© zÃ¡pisy: z `$this->reflection` na `$this->getReflection()`. DrtivÃ¡ ÄÃ¡st vÄcÃ­ se snad odladila, takÅ¾e nenÃ­ tÅeba nic ÅeÅ¡it. Jsou vÅ¡ak mÃ­sta (jako ta reflexe), kdy si to radÄji zmÄnÃ­m ve svÃ©m kÃ³du.\n\nJak se na fÃ³ru doÄtete, tak `Nette\\SmartObject` nepodporuje [extension methods](https://doc.nette.org/cs/2.3/php-language-enhancements#toc-rozsirujici-metody). To se Äasto vyuÅ¾Ã­vÃ¡ u vlastnÃ­ch formulÃ¡ÅovÃ½ch prvkÅ¯. NÃ¡hrada je opÄt jednoduchÃ¡ a logickÃ¡:\n\n```php\nBaseControl::extensionMethod('addHelp', function (... //pÅ¯vodnÄ\nObjectMixin::setExtensionMethod(BaseControl::class, 'addHelp', function (... //novÄ\n```\n\nS ÄÃ­m jsem mÄl troÅ¡ku problÃ©my byla Tracy. Jedna z rad byla vypnout debugger, ale toto by jiÅ¾ mÄlo bÃ½t vyÅeÅ¡enÃ©:\n\n```neon\nsession:\n\tdebugger: no\n```\n\nPokud se vÃ¡m tedy naÄÃ­tÃ¡ strÃ¡nka bez zjevnÃ©ho dÅ¯vodu dlouho, vyzkouÅ¡ejte vypnout tento panel. Asi nejvÃ­ce problÃ©my budou dÄlat knihovny tÅetÃ­ch stran. ZejmÃ©na Kdyby mi dÄlÃ¡ nejvÄtÅ¡Ã­ vrÃ¡sky na Äele. BohuÅ¾el autor nemÃ¡ Äas tyto vÄci ÅeÅ¡it, takÅ¾e [celÃ½ internet ÄekÃ¡](https://github.com/Kdyby/Events/pull/100)... :) ZÃ¡roveÅ se napÅ. v Kdyby/Doctrine (`dev-master` kde je lecos jiÅ¾ opravenÃ©) oddÄlilo nÄkolik komponent do vlastnÃ­ch repozitÃ¡ÅÅ¯. To se ukÃ¡zalo jako pÅekvapivÄ velkÃ½ BC break, kterÃ½ nemÃ¡ jednoduchÃ© ÅeÅ¡enÃ­. NapÅÃ­klad zatÃ­mco dÅÃ­ve mÄl Testbench Doctrine jako volitelnou zÃ¡vislost, tak dnes musÃ­ mÃ­t navÃ­c i `kdyby/doctrine-dbal-batchimport`. To je pro uÅ¾ivatele velmi nepÅÃ­jmenÃ©, protoÅ¾e na to musÃ­ myslet. ZatÃ­m nevÃ­m co s tÃ­m...\n\nDoÄasnÃ¡ vhodnÃ¡ kombinace (pro zajiÅ¡tÄnÃ­ kompatibility s Nette 2.4) pro Kdyby balÃ­Äky, kterÃ© pouÅ¾Ã­vÃ¡m jÃ¡ je tato:\n\n```js\n{\n  \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/mrtnzlml/Events\"\n    }\n  ],\n  \"require\": {\n    \"kdyby/console\": \"^2.5\",\n    \"kdyby/doctrine\": \"dev-master\",\n    \"kdyby/doctrine-cache\": \"dev-master\",\n    \"kdyby/doctrine-dbal-batchimport\": \"dev-master\",\n    \"kdyby/events\": \"dev-patch-1 as 3.0.x-dev\",\n    \"kdyby/fake-session\": \"^2.0\",\n    \"kdyby/monolog\": \"^1.2\",\n  }\n}\n```\n\nZ toho dÅ¯vodu bych moÅ¾nÃ¡ radÄji doporuÄoval chvÃ­li poÄkat, protoÅ¾e je s tÃ­m velkÃ© (a hlavnÄ zbyteÄnÃ©) trÃ¡penÃ­. A kdyÅ¾ uÅ¾ jsem se opÅel i o Testbench. I zde se z dÅ¯vodu kompatibility ukÃ¡Å¾e BC break. Mock linky se budou generovat [v jinÃ©m formÃ¡tu](https://github.com/mrtnzlml/testbench/blob/master/tests/Mocks/ControlMock.phpt#L22-L25) (kompatibilnÃ­m s Testerem).\n\nMÃ¡te pÅi pÅechodu jeÅ¡tÄ nÄjakÃ½ problÃ©m?","frontmatter":"id: 7f009c6b-998c-4cef-8797-cf1853ac5ea7\ntimestamp: 1466343012000\ntitle: Fix compatibility with Nette 2.4\nslug: fix-compatibility-with-nette-2-4"},{"attributes":{"id":"847a3113-3989-46a4-9486-41bf0d49fe16","timestamp":1460891805000,"title":"PSR-4 autoloader aplikace","slug":"psr-4-autoloader-aplikace"},"body":"Nikdy jsem moc nelpÄl na PSR-FIG pravidlech. ÄÃ¡steÄnÄ moÅ¾nÃ¡ proto, Å¾e jsem je nikdy moc nechÃ¡pal, ÄÃ¡steÄnÄ moÅ¾nÃ¡ proto, Å¾e nemÃ¡m rÃ¡d, kdyÅ¾ mi nÄkdo nÄco nutÃ­. NekterÃ¡ pravidla jsou ale docela fajn (i kdyÅ¾ se vÅ¾dy nÄco najde). JednÃ­m z jich je [PSR-4: Improved Autoloading](http://www.php-fig.org/psr/psr-4/). JenÅ¾e proÄ ÅeÅ¡it nÄjakÃ½ autoloading, kdyÅ¾ v Nette funguje skvÄle, ani o tom ÄlovÄk nevÃ­? Fakticky jsou v kaÅ¾dÃ©m sandboxu pouÅ¾ity minimÃ¡lnÄ 2 autoloadery a mohl bych se tedy ohÃ¡nÄt rychlostÃ­, protoÅ¾e:\n\n> *If there must be multiple autoload functions, spl_autoload_register() allows for this. It effectively creates a queue of autoload functions, and runs through each of them in the order they are defined. By contrast, __autoload() may only be defined once. ([zdroj](http://php.net/manual/en/function.spl-autoload-register.php)*)\n\nAle to je otÃ¡zka a praticky jsem nikdy Å¾Ã¡dnÃ½ vÃ½znamnÃ½ posun ve vÃ½konu nezaregistroval (i kdyÅ¾ teoreticky nemusÃ­m iterovat pÅes celÃ½ vendor, abych naÅ¡el nÄco v app). Mnohem vÃ½znamnÄjÅ¡Ã­ je pro mÄ sada pravidel, kterÃ½mi se programÃ¡tor musÃ­ pÅi pouÅ¾itÃ­ PSR-4 ÅÃ­dit. Ty budu postupnÄ popisovat v nÃ¡sledujÃ­cÃ­m textu.\n\n# PSR-4 na ÄistÃ©m projektu\n\nNasadit PSR-4 na [ÄistÃ©m projektu](https://github.com/nette/web-project) je jednoduchÃ©. StaÄÃ­ pouze pÃ¡r jednoduchÃ½ch krokÅ¯. V prvnÃ­ ÅadÄ odstranÃ­me RobotLoader - nebude vÅ¯bec potÅeba. To znamenÃ¡ odstranit jej z `composer.json` a smazat z `bootstrap.php`. TeÄ ale aplikace nefunguje. VraÅ¥me se tedy do `composer.json` a pÅidÃ¡me jednu sekci s definicÃ­ PSR-4 autoloaderu:\n\n```js\n\"autoload\": {\n  \"psr-4\": {\n    \"App\\\\\": [\n      \"app/router/\"\n    ],\n    \"App\\\\Presenters\\\\\": [\n      \"app/presenters/\"\n    ]\n  }\n}\n```\n\nMÅ¯Å¾e se stÃ¡t, Å¾e to nebude hned fungovat, pak staÄÃ­ spustit pÅÃ­kaz `composer dump-autoload` a Composer si pÅegeneruje autoloading pravidla. TeÄ nÃ¡m vÅ¡ak web-project vrÃ¡tÃ­ toto:\n\n> *RobotLoader is required to find presenters, install package `nette/robot-loader` or disable option application.scanDirs: false* .{color:red}\n\nDobÅe, tak zakÃ¡Å¾eme prohledÃ¡vÃ¡nÃ­ vendoru za ÃºÄelem nalezenÃ­ presenterÅ¯ ve vendoru. StejnÄ to teÄ nepotÅebujeme:\n\n```neon\napplication:\n\tscanDirs: no\n```\n\nA aplikace rÃ¡zem opÄt funguje. UdÄlal jsem to schvÃ¡lnÄ tak, aby fungoval web-project bez zÃ¡sahu do struktury. Je zde vÅ¡ak nÄkolik drobnÃ½ch problÃ©mÅ¯, kterÃ© nejsou moÅ¾nÃ¡ na prvnÃ­ pohled vidÄt. ZejmÃ©na je oÅ¡klivÃ¡ definice v `composer.json`. ProÄ by to nemohlo bÃ½t prostÄ jen takto:\n\n```js\n\"autoload\": {\n  \"psr-4\": {\n    \"App\\\\\": [\n      \"app/\"\n    ]\n  }\n}\n```\n\nMohlo, jen musÃ­me zasÃ¡hnout do adresÃ¡ÅovÃ© struktury (nezapomeÅte na `composer dump-autoload`). TÃ­mto mappingem totiÅ¾ urÄujeme kde mÃ¡ bÃ½t tÅÃ­da umÃ­stÄna v adresÃ¡ÅovÃ© struktuÅe vzhledem k namespace. TakÅ¾e kdyÅ¾ bude namespace zaÄÃ­nat na `App`, tak se budou tÅÃ­dy hledat ve sloÅ¾ce `app`. JenÅ¾e je tÅeba dodrÅ¾et minimÃ¡lnÄ jedno dÅ¯leÅ¾itÃ© pavidlo. Namespace (a tedy i vÃ½slednÃ¡ adresÃ¡ÅovÃ¡ struktura) musÃ­ bÃ½t case-sensitive - coÅ¾ ve web-projectu nenÃ­. Toto je pro mÄ asi nejvÄtÅ¡Ã­ pÅÃ­nos PSR-4. JasnÄ je totiÅ¾ dÃ¡no jak se mÃ¡ adresÃ¡ÅovÃ¡ struktura tvoÅit. ProstÄ podle toho jakÃ© chci pouÅ¾Ã­vat namespace. VÅ¾dy jsem totiÅ¾ zÃ¡pasil s tÃ­m, jestli psÃ¡t sloÅ¾ky s velkÃ½m pÃ­smenem a jak moc vÅ¡e zanoÅovat atd. TeÄ je to vÅ¡e jasnÃ©.\n\nPÅejmenujme tedy `\\App\\RouterFactory` na `\\App\\Router\\RouterFactory`. NezapomeÅte pÅeregistrovat sluÅ¾bu v `config.neon` a zmÄnit nÃ¡zev sloÅ¾ky v `router` na `Router`. Podobnou Ãºpravu provedeme i s presentery kdy staÄÃ­ jen zvÄtÅ¡it prvnÃ­ pÃ­smeno sloÅ¾ky `Presenters`. A aplikace stÃ¡le funguje. :)\n\nPodobnÃ© jednoduchÃ© Ãºpravy budou fungovat na jakÃ©mkoliv projektu, je vÅ¡ak zÅejmÃ©, Å¾e je obÄas vhodnÃ© zasÃ¡hnout do adresÃ¡ÅovÃ© struktury, proto bych doporuÄoval udÄlat tyto Ãºpravy co nejdÅÃ­ve (pokud chcete PSR-4).\n\n# Composer autoload\n\nJak to tedy celÃ© vlastnÄ funguje? VÅ¡e to vÄzÃ­ v tÃ©to prvnÃ­ ÅÃ¡dce `boostrap.php`:\n\n```php\n$classLoader = require __DIR__ . '/../vendor/autoload.php';\n```\n\nV souboru `autoload.php` se skrÃ½vÃ¡ nÄco takovÃ©ho:\n\n```php\n<?php\n\n// autoload.php @generated by Composer\n\nrequire_once __DIR__ . '/composer' . '/autoload_real.php';\n\nreturn ComposerAutoloaderInit091ed5d24b4127ffc48411e34be2086f::getLoader();\n```\n\nZde se pÅipravÃ­ pomocÃ­ tÅÃ­dy `\\Composer\\Autoload\\ClassLoader` autoloader ze vÅ¡ech moÅ¾nÃ½ch zdrojÅ¯ (pomocÃ­ `spl_autoload_register`), kterÃ© [Composer podporuje](https://getcomposer.org/doc/04-schema.md#autoload).\n\nA to je vlastnÄ celÃ©. JeÅ¡tÄ existujÃ­ dvÄ vylepÅ¡enÃ­, kterÃ© Composer podporuje u pÅÃ­kazu `dump-autoload`:\n \n- `--optimize` (`-o`): Convert PSR-0/4 autoloading to classmap to get a faster autoloader. This is recommended especially for production, but can take a bit of time to run so it is currently not done by default.\n- `--classmap-authoritative` (`-a`): Autoload classes from the classmap only. Implicitly enables `--optimize`.\n\nPokud tedy chcete naÄÃ­tÃ¡nÃ­ tÅÃ­d jeÅ¡tÄ zrychlit, tak vytvoÅte optimalizovanÃ½ autoloader, kterÃ½ pÅedpÅipravÃ­ pole s nÃ¡zvem tÅÃ­dy a rovnou kde lze danou tÅÃ­du najÃ­t. To je velmi rychlÃ©, protoÅ¾e se PHP dÃ­vÃ¡ jen do tohoto pole viz implementace:\n\n```php\n// class map lookup\nif (isset($this->classMap[$class])) {\n    return $this->classMap[$class];\n}\n```\n\nNavÃ­c v authoritative mÃ³du tÃ­mto Composer konÄÃ­ a dÃ¡l nehledÃ¡. Jinak se pokusÃ­ jeÅ¡tÄ najÃ­t tÅÃ­du pomocÃ­ dalÅ¡Ã­ch zpÅ¯sobÅ¯ autoloadingu. Pro nÃ¡zornost uvedu jak vypadÃ¡ Composer autoloader v jednotlivÃ½ch mÃ³dech. PrvnÃ­ je jen tak bez niÄeho:\n\n```\nComposer\\Autoload\\ClassLoader #5cfb â¼\n  prefixLengthsPsr4 => array (1) â¼\n    A => array (1) â¼\n      \"App\\\" => 4\n  prefixDirsPsr4 private => array (1) â¼\n    \"App\\\" => array (1) â¼\n      0 => \"/var/www/html/web-project/app\" (29)\n  classMap private => array (345) âº\n  classMapAuthoritative private => FALSE\n```\n\nJe vidÄt, Å¾e je zaregistrovanÃ½ pouze jeden jmennÃ½ prostor, v classmap autoloaderu je navÃ­c 345 tÅÃ­d a nepouÅ¾Ã­vÃ¡me authoritative mÃ³d. OptimalizovanÃ½ autoloader (`composer dump-autoload --optimize`) se liÅ¡Ã­ jen mÃ¡lo:\n\n```\nComposer\\Autoload\\ClassLoader #c492 â¼\n  prefixLengthsPsr4 => array (1) â¼\n    A => array (1) â¼\n      \"App\\\" => 4\n  prefixDirsPsr4 private => array (1) â¼\n    \"App\\\" => array (1) â¼\n      0 => \"/var/www/html/web-project/app\" (29)\n  classMap private => array (349) âº\n  classMapAuthoritative private => FALSE\n```\n\nKonkrÃ©tnÄ je v classmap autoloaderu najednou 349 tÅÃ­dy (navÃ­c 3x presenter a RouterFactory).  Authoritative mÃ³d (`composer dump-autoload -a`) uÅ¾ je o nÄco odliÅ¡nÄjÅ¡Ã­:\n\n```\nComposer\\Autoload\\ClassLoader #7553 â¼\n  prefixLengthsPsr4 private => array ()\n  prefixDirsPsr4 private => array ()\n  classMap private => array (349) âº\n  classMapAuthoritative private => TRUE\n```\n\nStÃ¡le je v classmap 349 tÅÃ­d, ale internÄ uÅ¾ neexistuje nic jako PSR-4 autoloader a vÅ¡e se tedy hledÃ¡ pouze v classmap autoloaderu. S touto ukÃ¡zkou to musÃ­ bÃ½t vÅ¡em uÅ¾ naprosto jasnÃ©. :)\n\n# PSR-4 ve starÅ¡Ã­ aplikaci\n\nVe starÅ¡Ã­ch (jiÅ¾ fungujÃ­cÃ­ch) aplikacÃ­ch je vÅ¡e samozÅejmÄ stejnÃ©. Je vÅ¡ak tÅeba upozornit na dalÅ¡Ã­ PSR-4 pravidlo, kvÅ¯li kterÃ©mu jsem se dlouho zdrÃ¡hal pÅejÃ­t. KaÅ¾dÃ¡ tÅÃ­da totiÅ¾ musÃ­ bÃ½t ve vlastnÃ­m souboru. Toto pravidlo je urÄitÄ dobrÃ©, ale myslÃ­m si, Å¾e dÃ¡vÃ¡ smysl pÅipojovat definice generovanÃ½ch tovÃ¡ren do toho samÃ©ho souboru, jako tÅeba komponentu kterou vytvÃ¡ÅejÃ­. PÅi pÅechodu je tedy tÅeba tyto soubory rozdÄlit.\n\nDalÅ¡Ã­ nepÅÃ­jemnostÃ­ mÅ¯Å¾e bÃ½t struktura, kterÃ¡ na PSR-4 prostÄ nesedÃ­ a bylo by velmi sloÅ¾itÃ© vÅ¡e pÅedÄlÃ¡vat. Je vÅ¡ak Å¡koda nepouÅ¾Ã­t Composer autoloader jen kvÅ¯li takovÃ©mu drobnÃ©mu zÃ¡drhelu. V tomto pÅÃ­padÄ je moÅ¾nÃ© pouÅ¾Ã­t tÅeba dÅÃ­ve zmiÅovanÃ½ classmap:\n\n```js\n\"autoload\": {\n  \"psr-4\": {\n    \"App\\\\\": [\n      \"app/\"\n    ]\n  },\n  \"classmap\": [\n    \"libs/\",\n    \"include/\"\n  ]\n}\n```\n\nToto jen potvrzuje to, co jsem psal jiÅ¾ dÅÃ­ve. Je dobrÃ© rozmyslet se vÄas, protoÅ¾e pÅechod mÅ¯Å¾e bÃ½t pozdÄji tÃ©mÄÅ nemoÅ¾nÃ½. KaÅ¾dopÃ¡dnÄ striknost z hlediska adresÃ¡ÅovÃ© struktury je pro mÄ tak dÅ¯leÅ¾itÃ¡, Å¾e jsem pÅestal vÃ¡hat a pÅeÅ¡el jsem. PoÅÃ¡d si nejsem jist s tÃ­m, jestli oddÄlenÃ© generovanÃ© tovÃ¡rniÄky jsou pÅesnÄ to, co se mi lÃ­bÃ­, ale to uÅ¾ je jen drobnÃ½ problÃ©m.","frontmatter":"id: 847a3113-3989-46a4-9486-41bf0d49fe16\ntimestamp: 1460891805000\ntitle: PSR-4 autoloader aplikace\nslug: psr-4-autoloader-aplikace"},{"attributes":{"id":"098b3cf2-dc80-4c7f-b02b-c5918cc1c94c","timestamp":1459632882000,"title":"Magie zvanÃ¡ mapping presenterÅ¯","slug":"magie-zvana-mapping-presenteru"},"body":"Ona to vlastnÄ ani nenÃ­ takovÃ¡ magie jako to nenÃ­ nikde poÅÃ¡dnÄ popsanÃ©. NeÅ¾ se pustÃ­m to obludnÃ½ch sloÅ¾itostÃ­, bylo by vhodnÃ© zmÃ­nit se co to vlastnÄ mapping presenterÅ¯ je. VidÄli jste nÄkde toto v konfiguraci?\n\n```neon\napplication:\n\tmapping:\n\t\t*: App\\*Module\\Presenters\\*Presenter\n```\n\nUrÄitÄ ano, je to totiÅ¾ vykopÃ­rovanÃ© ze sandboxu. Tato konfigurace ÅÃ­kÃ¡, kde mÃ¡ Nette hledat presentery. Resp. pod jakÃ½m **namespace**. To je dÅ¯leÅ¾itÃ©. Na adresÃ¡ÅovÃ© struktuÅe totiÅ¾ v tomto pÅÃ­padÄ vÅ¯bec nezÃ¡leÅ¾Ã­. Kdyby v konfiguraÄnÃ­m souboru nebyl mapping vÅ¯bec uvedenÃ½, presenter by musel bÃ½t bez namespace, tedy napÅÃ­klad `\\HomepagePresenter`. Pokud by pak zase nÄkdo mÄl radÄji MVC, mohl by si jednoduÅ¡e zmÄnit mapping:\n\n```neon\napplication:\n\tmapping:\n\t\t*: App\\*Module\\Controllers\\*Controller\n```\n\nA pouÅ¾Ã­vat tak tÅÃ­du `\\App\\Controllers\\HomepageController`. OpÄt na umÃ­stÄnÃ­ v adresÃ¡ÅovÃ© struktuÅe nezÃ¡visle. PojÄme se ale ponoÅit hloubÄji a rozeberme si co vlastnÄ jednotlivÃ© ÄÃ¡sti mappingu znamenajÃ­.\n\n# Do hlubin regulÃ¡rÅ¯\n\nNejdÅ¯leÅ¾itÄjÅ¡Ã­ metodou je v tomto pÅÃ­padÄ `\\Nette\\Application\\PresenterFactory::setMapping`. V tÃ©to metodÄ se ukrÃ½vÃ¡ tento regulÃ¡rnÃ­ vÃ½raz, kterÃ½ kontroluje validitu mappingu (preg_match):\n\n```\n#^\\\\\\\\?([\\w\\\\\\\\]*\\\\\\\\)?(\\w*\\*\\w*?\\\\\\\\)?([\\w\\\\\\\\]*\\*\\w*)\\z#\n```\n\nV tÃ©to obludnosti se skrÃ½vajÃ­ 3 ÄÃ¡sti. Ale zjednoduÅ¡enÄ ÅeÄeno rozdÄlÃ­ tento regulÃ¡rnÃ­ vÃ½raz mapping na prefix, ÄÃ¡st s modulem a ÄÃ¡st s presenterem. Tedy napÅÃ­klad takto:\n\n```\n                                           App\\\nApp\\*Module\\Presenters\\*Presenter    =>    *Module\\\n                                           Presenters\\*Presenter\n```\n\nZ toho jak je regulÃ¡r napsanÃ½ by mÄlo bÃ½t zÅejmÃ©, Å¾e lze prvnÃ­ i druhou ÄÃ¡st vynechat. VÅ¡echny nÃ¡sledujÃ­cÃ­ mappingy jsou tedy validnÃ­:\n\n```\n*Module\\Presenters\\*Presenter\nApp\\Presenters\\*Presenter\nPresenters\\*Presenter\n*Presenter\nPresenter*\n*\n```\n\nTak moment. Co vlastnÄ znamenajÃ­ ty hvÄzdiÄky? ZjednouÅ¡enÄ hvÄzdiÄka znaÄÃ­ promÄnnÃ½ nÃ¡zev presenteru (Homepage v HomepagePresenter) a pokud jsou v mappingu dvÄ hvÄzdiÄky, tak prvnÃ­ znaÄÃ­ promÄnnnÃ½ nÃ¡zev modulu (nebo vÅ¡ech zanoÅenÃ½ch modulÅ¯) aplikace. NejpochopitelnÄjÅ¡Ã­ bude vyzkouÅ¡et si tu nejjedoduÅ¡Å¡Ã­ formu mappingu:\n\n```neon\napplication:\n\tmapping:\n\t\t*: *\n```\n\nNa hvÄzdiÄku pÅed dvojteÄkou zatÃ­m nehleÄme. Nette teÄ bude hledat prostÄ jen tÅÃ­du `\\Homepage` (resp. podle definice routeru). Pokud budeme mÃ­t modulÃ¡rnÃ­ aplikaci, tak se bude hledat `<Admin>Module\\Homepage` (opÄt zÃ¡leÅ¾Ã­ na routeru). Pokud troÅ¡ku pozmÄnÃ­me mapping, musÃ­ to uÅ¾ bÃ½t ÃºplnÄ jasnÃ©:\n\n```neon\napplication:\n\tmapping:\n\t\t*: *\\*\n```\n\nNette teÄ nebude nic ÅeÅ¡it. ÅeknÄme Å¾e mÃ¡me router nastavenÃ½ tak, aby destination bylo `Front:Homepage:default`. V pÅi tomto mappingu se bude hledat pÅesenter s nÃ¡zvem `\\Front\\Homepage`. JeÅ¡tÄ uvedu jeden pÅÃ­klad, aby to bylo ÃºplnÄ zÅejmÃ©. TeÄ nebudu mÃ­t destination v routÄ jen `Homepage:default` a mapping nastavÃ­m takto:\n\n```neon\napplication:\n\tmapping:\n\t\t*: App\\Presenters\\*Presenter\n```\n\nPÅesnÄ tak, bude se to chovat ÃºplnÄ stejnÄ jako prvnÃ­ pÅÃ­klad. KdyÅ¾ totiÅ¾ aplikace nepracuje s moduly, tak se druhÃ¡ ÄÃ¡st toho velkÃ©ho regulÃ¡ru zahazuje. NeÅ¾ se dostanu k limitnÃ­m pÅÃ­padÅ¯m, kdy je mapping omezujÃ­cÃ­, rozeberme si jeÅ¡tÄ konfiguraÄnÃ­ ÄÃ¡st pÅed dvojteÄkou (klÃ­Ä pole). Do tÃ©to chvÃ­li vÅ¡ude byla jen hvÄzdiÄka. To znamenÃ¡, Å¾e se tento mapping aplikuje na vÅ¡echny pÅÃ­chozÃ­ poÅ¾adavky. Se vzrÅ¯stajÃ­cÃ­ sloÅ¾itostÃ­ projektu vÅ¡ak mÅ¯Å¾e pÅijÃ­t poÅ¾adavek, Å¾e chceme mapovat jinak administraci a jinak zbytek aplikace. RoutovÃ¡nÃ­ by mohlo bÃ½t tÅeba takovÃ©:\n\n```php\npublic static function createRouter()\n{\n\t$router = new RouteList;\n\t$router[] = new Route('test', 'Admin:Homepage:default');\n\t$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default');\n\treturn $router;\n}\n```\n\nA mapping:\n\n```neon\napplication:\n\tmapping:\n\t\t*: App\\*Module\\Presenters\\*Presenter\n        Admin: App\\Controllers\\*Controller\n```\n\nTakÅ¾e vÅ¡e bude mapovÃ¡no pomocÃ­ prvnÃ­ masky, ale pro `Admin` modul bude pouÅ¾Ã­vat MVC jako v druhÃ© ukÃ¡zce. Tohoto se dÃ¡ velmi dobÅe vyuÅ¾Ã­t pokud stavÃ­te aplikaci pomocÃ­ [rozÅ¡Ã­ÅenÃ­ pro DIC](rozsireni-pro-dic). V tomto pÅÃ­padÄ je totiÅ¾ docela dobrÃ½ nÃ¡pad mÃ­t presentery ve vlastnÃ­ namespace a tedy vytvoÅit si pro nÄ novÃ½ mapping, kterÃ½ bude mapovat jen tuto ÄÃ¡st aplikace. PouÅ¾Ã­vÃ¡m to hodnÄ.\n\n# LimitujÃ­cÃ­ pÅÃ­pady\n\nCo vÃ­m, tak existujÃ­ dva limitujÃ­cÃ­ pÅÃ­pady s tÃ­m, Å¾e ten druhÃ½ je vyÅeÅ¡en v budoucÃ­ verzi Nette Application (zatÃ­m jen dev-master). Na prvnÃ­ pÅÃ­pad narÃ¡Å¾Ã­m velmi Äasto. BohuÅ¾el totiÅ¾ nenÃ­ moÅ¾nÃ© (pokud vÃ­m) definovat vÃ­ce mappingÅ¯ pro jeden modul. Nejde tak vytvoÅit mapping tÅeba pro modul API a zÃ¡roveÅ mapping, kterÃ½ by vyuÅ¾Ã­val stejnÃ½ modul, ale byl umÃ­stÄn v ÃºplnÄ jinÃ©m namespace (bundle). To je pÅi tvorbÄ bundles hodnÄ limitujÃ­cÃ­. Tento problÃ©m je vyÅeÅ¡en ve skvÄlÃ© knihovnÄ [librette/presenter-factory](https://github.com/librette/presenter-factory). CelkovÄ se v Librette skrÃ½vÃ¡ spoustu pokladÅ¯, jen <del>Kdyby</del> je autor nÄjak dokumentoval... ;-)\n\nDruhÃ½ pÅÃ­pad je dobÅe popsÃ¡n v [tomto issue](https://github.com/nette/application/issues/101). TotiÅ¾ jak jsem se letmo zmÃ­nil dÅÃ­ve, tak pokud existuje vÃ­ce zanoÅenÃ½ch modulÅ¯, tak se maska pro moduly opakuje. Ale ne tak, jak by bylo obÄas potÅeba. MÄjme napÅÃ­klad tento mapping z issue #101:\n\n```neon\napplication:\n\tmapping:\n\t\t*: App\\Module\\*Module\\Presenter\\*Presenter\n```\n\nPokud budeme mÃ­t v routeru nadefinovÃ¡no vÃ­ce zanoÅenÃ­ modulÅ¯ (`A:B:Homepage:default`), tak se bude hledat tento presenter:\n\n```\nApp\\Module\\AModule\\BModule\\Presenter\\HomepagePresenter\n```\n\nTo docela dÃ¡vÃ¡ smysl, Å¾e? JenÅ¾e ne vÅ¾dy je to vhodnÃ© chovÃ¡nÃ­ a lepÅ¡Ã­ by bylo, aby se pro moduly opakovala vÄtÅ¡Ã­ ÄÃ¡st definice a hledanÃ½ presenter se ve skuteÄnosti jmenoval takto:\n\n```\nApp\\Module\\AModule\\Module\\BModule\\Presenter\\HomepagePresenter\n```\n\nToho vÅ¡ak nelze se souÄasnÃ½m mappingem jednoduÅ¡e dosÃ¡hnout. ÅeÅ¡enÃ­m je prÃ¡vÄ vÃ½vojovÃ¡ verze balÃ­Äku Nette\\Application, kde lze mapping nadefinovat takÃ© pomocÃ­ pole:\n\n```neon\napplication:\n\tmapping:\n\t\t*: [App, Module\\*Module, Presenter\\*Presenter]\n```\n\nVyÅeÅ¡enÃ­ takovÃ© mappingu je uÅ¾ jednoduchÃ© a aplikace se chovÃ¡ pÅesnÄ podle oÄekÃ¡vÃ¡nÃ­. PÅ¯vodnÃ­ chovÃ¡nÃ­ samozÅejmÄ zÅ¯stÃ¡vÃ¡ stejnÃ©. PÅi tomto novÃ©m zÃ¡pisu opÄt platÃ­ vÅ¡e co jsem jiÅ¾ psal, jen je tÅeba dodrÅ¾et poÅadÃ­ v poli:\n\n```neon\napplication:\n\tmapping:\n\t\t*: ['', *, *]    #nebo *\\*\n```\n\nTedy opÄt je hledanÃ½ presenter `Front\\Homepage` pÅi routeru nastavenÃ©m na `Front:Homepage:default`. A poslednÃ­ pÅÃ­klad uvedu pÅepsanÃ½ prvnÃ­ pÅÃ­klad podle tohoto alternativnÃ­ho pÅÃ­stupu:\n\n```neon\napplication:\n\tmapping:\n\t\t*: [App, *Module, Presenters\\*Presenter]\n```\n\nVÃ­c o tom asi nejde napsat, protoÅ¾e je to pÅesnÄ takto jednoduchÃ©... :)","frontmatter":"id: 098b3cf2-dc80-4c7f-b02b-c5918cc1c94c\ntimestamp: 1459632882000\ntitle: Magie zvanÃ¡ mapping presenterÅ¯\nslug: magie-zvana-mapping-presenteru"},{"attributes":{"id":"6b057983-39a9-4328-a526-2dfb03babbbb","timestamp":1457796154000,"title":"RozÅ¡Ã­ÅenÃ­ pro DIC","slug":"rozsireni-pro-dic"},"body":"Jednu z vÄcÃ­, kterÃ© jsem zde na blogu moc nepopsal jsou rozÅ¡Ã­ÅenÃ­ pro DIC (Dependency Injection Container, potomek `Nette\\DI\\Container`). A protoÅ¾e se chci vrÃ¡tit jednoduÅ¡Å¡Ã­m ÄlÃ¡nkÅ¯m, zamÄÅÃ­m se na ÃºplnÄ zÃ¡klady. JakÃ¡ je motivace k psanÃ­ rozÅ¡Ã­ÅenÃ­ DIC a co to vlastnÄ je?\n\nSvÃ© aplikace rozdÄluji pomÄrnÄ dÅ¯slednÄ na jakÃ©si balÃ­Äky (bundles - nÃ¡zev ze Symfony). CÃ­lem je rozÅ¡katulkovat celou aplikaci podle logickÃ½ch celkÅ¯, tzn. kaÅ¾dÃ½ bundle by se mÄl starat pouze o tu svojÃ­ vÄc a zÃ¡roveÅ si s sebou nÃ©st vÅ¡e potÅebnÃ©. JednÃ¡ se o balÃ­Äky typu *Articles*, kterÃ½ se starÃ¡ (jak sÃ¡m nÃ¡zev napovÃ­dÃ¡) pouze a jenom o ÄlÃ¡nky, nebo *Eshop*, *GoPay*, *Media*, *Users*, atd. VÃ½hodou tohoto pÅÃ­stupu je to, Å¾e mohu kdykoliv z balÃ­Äku udÄlat Composer balÃ­Äek a ÃºplnÄ ho oddÄlit od aplikace. ZÃ¡roveÅ nÄkterÃ© balÃ­Äky smÄÅujÃ­ k jednoduchÃ©mu oddÄlenÃ­ do [microservices](http://martinfowler.com/articles/microservices.html). NevÃ½hodou je pak to, Å¾e je to oproti bÄÅ¾nÃ½m zpÅ¯sobÅ¯m jak navrhovat aplikaci pomÄrnÄ sloÅ¾itÃ©.\n\nNapsat takto aplikaci vÄtÅ¡inou zamenÃ¡ zasahovat do nÄjakÃ½ globÃ¡lnÃ­ch prostor, popÅÃ­padÄ mÃ­t vytvoÅenÃ© nÄjakÃ© body v aplikaci, na kterÃ© je moÅ¾nÃ© se navÄsit. JelikoÅ¾ vÅ¡ak vyuÅ¾Ã­vÃ¡m(e) Nette, je nejlepÅ¡Ã­ zpÅ¯sob vyuÅ¾Ã­t prÃ¡vÄ rozÅ¡Ã­ÅenÃ­ DIC.\n\n# PÃ­Å¡eme prvnÃ­ rozÅ¡Ã­ÅenÃ­ DIC\n\nCelÃ© je to vlastnÄ velmi jednoduchÃ©. TÅeba do `src/Articles/DI` umÃ­stÃ­me tÅÃ­du `ArticlesExtension`, kterÃ¡ dÄdÃ­ od `Nette\\DI\\CompilerExtension`. Struktura je libovolnÃ¡, podstatnÃ© je, aby tÅÃ­da dÄdila prÃ¡vÄ od *CompilerExtension*. DruhÃ¡ vÄc, kterou je tÅeba udÄlat, je zaregistrovÃ¡nÃ­ naÅ¡eho novÃ©ho rozÅ¡Ã­ÅenÃ­ do DI kontejneru. To udÄlÃ¡me velice jednoduÅ¡e v konfiguraÄnÃ­m souboru:\n\n```neon\nextensions:\n\t- Ant\\Articles\\DI\\ArticlesExtension\n```\n\nV tuto chvÃ­li je jiÅ¾ rozÅ¡Ã­ÅenÃ­ funkÄnÃ­ a Nette s nÃ­m poÄÃ­tÃ¡. Jen zatÃ­m nic neumÃ­. To napravÃ­me velmi rychle, nejdÅÃ­ve vÅ¡ak troÅ¡ku nezbytnÃ© teorie. Takto zaregistrovanÃ© rozÅ¡Ã­ÅenÃ­ se zpracovÃ¡vÃ¡ pouze v okamÅ¾iku kompilace DIC. Na toto je dÅ¯leÅ¾itÃ© myslet - je to jedna z nejÄastÄjÅ¡Ã­ch chyb zaÄÃ¡teÄnÃ­kÅ¯. Ono to dÃ¡vÃ¡ smysl. Je to rozÅ¡Ã­ÅenÃ­ DIC. Kontejner se tedy jednou nÄjak pomocÃ­ rozÅ¡Ã­ÅenÃ­ upravÃ­, vygeneruje, uloÅ¾Ã­ a hotovo.\n\nDruhÃ¡ dÅ¯leÅ¾itÃ¡ informace se tÃ½kÃ¡ Å¾ivotnÃ­ho cyklu rozÅ¡Ã­ÅenÃ­. PÅi kompilaci (generovÃ¡nÃ­) DIC se kaÅ¾dÃ© zaregistrovanÃ© rozÅ¡Ã­ÅenÃ­ volÃ¡ celkem tÅikrÃ¡t a pokaÅ¾dÃ© se spustÃ­ jinÃ¡ metoda. Je to podobnÃ© jako [Å¾ivotnÃ­ cyklus presenteru](https://doc.nette.org/cs/2.3/presenters#toc-zivotni-cyklus-presenteru).\n\nPrvnÃ­ volanou metodou je `loadConfiguration` a volÃ¡ se v okamÅ¾iku, kdy Nette zaÄne s rozÅ¡Ã­ÅenÃ­m pracovat. V tu chvÃ­li je jiÅ¾ k dispozici konfigurace jednoho konkrÃ©tnÃ­ho rozÅ¡Ã­ÅenÃ­. Kde se ale tato konfigurace vezme? Tak to se musÃ­me vrÃ¡ti kousek zpÄt a rozÅ¡Ã­ÅenÃ­ zaregistrovat troÅ¡ku jinak:\n\n```neon\nextensions:\n\tarticles: Ant\\Articles\\DI\\ArticlesExtension\n```\n\nDÃ­ky tomu, Å¾e je rozÅ¡Ã­ÅenÃ­ pojmenovanÃ© a ne anonymnÃ­ jako to bylo doposud, mÅ¯Å¾eme rozÅ¡Ã­ÅenÃ­ pÅedat libovolnou vlastnÃ­ konfiguraci:\n\n```neon\narticles:\n\toption_1: value_1\n\toption_2: value_2\n\t# ...\n```\n\nA pÅesnÄ tyto hodnoty (`option_1`, `option_2`) mÅ¯Å¾eme zÃ­skat jako pole pomocÃ­ metody `$this->getConfig()` v rozÅ¡Ã­ÅenÃ­. K Äemu se tedy `loadConfiguration` hodÃ­? JednÃ¡ se o mÃ­sto, kde je vhodnÃ© naÄÃ­st (a zvalidovat) konfiguraci. JÃ¡ osobnÄ nejradÄji naÄÃ­tÃ¡m extra config, kterÃ½ si s sebou nese samo rozÅ¡Ã­ÅenÃ­, takÅ¾e se mi rozÅ¡Ã­ÅenÃ­ zjednoduÅ¡Ã­ na:\n\n```php\npublic function loadConfiguration()\n{\n\t$this->addConfig(__DIR__ . '/services.neon');\n}\n```\n\nKde `services.neon` obsahuje tÅeba:\n\n```neon\nservices:\n\t- Ant\\Articles\\Components\\IArticlesGridFactory\n\t# ...\n```\n\nJe to jednudchÃ© a chÃ¡pe to kaÅ¾dÃ½ kdo chÃ¡pe konfigurace. Jen pozor na to, Å¾e funkce `addConfig` jsem si napsal sÃ¡m. MrknÄte se do [dokumentace](https://doc.nette.org/cs/2.3/di-extensions#toc-loadconfiguration) jak se to dÃ¡ udÄlat. Pokud se nÄkomu nelÃ­bÃ­ mÃ­t u kaÅ¾dÃ©ho rozÅ¡Ã­ÅenÃ­ vlastnÃ­ config, je moÅ¾nÃ© vÅ¡e napsat v rozÅ¡Ã­ÅenÃ­ ruÄnÄ. Zde takÃ© odkÃ¡Å¾u na dokumentaci.\n\nKdyÅ¾ uÅ¾ je konfigurace vÅ¡eho pÅipravena, pÅichÃ¡zÃ­ ke slovu druhÃ¡ funkce `beforeCompile`. Ta se volÃ¡ v okamÅ¾iku, kdy uÅ¾ je skoro vÅ¡e pÅipraveno, ale jeÅ¡tÄ se kontejner negeneruje. JÃ¡ osobnÄ tento Äas vyuÅ¾Ã­vÃ¡m napÅÃ­klad k registraci presenter mappingu pro jednotlivÃ© bundly:\n\n```php\npublic function beforeCompile()\n{\n\t$builder = $this->getContainerBuilder();\n    $builder->getDefinition($builder->getByType(IPresenterFactory::class))->addSetup(\n        'setMapping',\n        [['Articles' => 'Ant\\Articles\\*Module\\Presenters\\*Presenter']]\n    );\n}\n```\n\nTÃ­m jsem chtÄl ukÃ¡zat, Å¾e se jednÃ¡ o mÃ­sto, kde je vhodnÃ© upravovat jiÅ¾ pÅipravenÃ© sluÅ¾by a rÅ¯znÄ je jeÅ¡tÄ donastavit s tÃ­m, Å¾e aÅ¾ se zavolajÃ­ metody `beforeCompile` nad kaÅ¾dÃ½m rozÅ¡Ã­ÅenÃ­m, pÅijde ke slovu poslednÃ­ metoda a tou je `afterCompile`. Tato metoda dostÃ¡vÃ¡ v parametrem `Nette\\PhpGenerator\\ClassType` coÅ¾ je jinak ÅeÄeno vygenerovanÃ½ DI kontejner v pamÄti, tedy jeÅ¡tÄ neuloÅ¾enÃ½ do souboru (cache). Existuje tedy jeÅ¡tÄ poslednÃ­ moÅ¾nost jak s DIC jeÅ¡tÄ nÄco udÄlat. StaÄÃ­ vyuÅ¾Ã­t sÃ­ly `Nette\\PhpGenerator` a mÅ¯Å¾ete tvoÅit kouzla. VÄtÅ¡inou se vÅ¡ak poupravuje metoda DIC `initialize` tÅeba jako to dÄlÃ¡ `Nette\\DI\\Extensions\\ConstantsExtension` nebo [PhpExtension](https://api.nette.org/2.3.9/source-DI.Extensions.PhpExtension.php.html#19-48):\n\n```php\npublic function afterCompile(Nette\\PhpGenerator\\ClassType $class)\n{\n\tforeach ($this->getConfig() as $name => $value) {\n\t\t$class->getMethod('initialize')->addBody('define(?, ?);', array($name, $value));\n\t}\n}\n```\n\n*Initialize* je totiÅ¾ metoda, kterÃ¡ se volÃ¡ jako jedna z [prvnÃ­ch vÅ¯bec](https://api.nette.org/2.3.9/source-Bootstrap.Configurator.php.html#224).\n\nTolik jinak (pro normÃ¡lnÃ­ lidi) napsÃ¡no to, co je v [dokumentaci](https://doc.nette.org/cs/2.3/di-extensions). MÄlo by teÄ bÃ½t jasnÃ©, k Äemu je psanÃ­ rozÅ¡Ã­ÅenÃ­ pro DIC vÅ¯bec dobrÃ© a proÄ by o tom mÄl ÄlovÄk vÅ¯bec uvaÅ¾ovat. Je zÅejmÃ©, Å¾e je to zase dalÅ¡Ã­ sloÅ¾itost navÃ­c, ale kdyÅ¾ programÃ¡tor ovlÃ¡dne psanÃ­ takovÃ½ch rozÅ¡Ã­ÅenÃ­, celÃ¡ aplikace se najednou zaÄne pÄknÄ Å¡katulkovat a rozpadat na jednoduÅ¡Å¡Ã­ ÄÃ¡sti. OstatnÄ takto se pÃ­Å¡ou vÅ¡echny normÃ¡lnÃ­ [addony](https://componette.com/) pro Nette.\n\n# JeÅ¡tÄ nÄjakÃ© jednoduchÃ© testy\n\nÅ patnÃ½ test je sice poÅÃ¡d Å¡patnÃ½, zÃ¡roveÅ je vÅ¡ak lepÅ¡Ã­, neÅ¾ test Å¾Ã¡dnÃ½. VÅ¡Ã­mÃ¡m si vÅ¡ak toho, Å¾e se o testech hodnÄ a dlouho blÃ¡bolÃ­, ale kdyÅ¾ pÅijde ten sprÃ¡vnÃ½ Äas, tak o nich nepadne ani slovo. Proto jsem je zaÄal ve svÃ½ch ukÃ¡zkÃ¡ch hodnÄ tlaÄit a blog nezÅ¯stane pozadu. Jak by tedy takovÃ½ jednoduchÃ½ test mohl vypadat? Asi nebude pÅekvapenÃ­m, kdyÅ¾ na to pouÅ¾iju svÅ¯j [mrtnzlml/testbench](https://github.com/mrtnzlml/testbench), kterÃ½ si mÅ¯Å¾e kdokoliv stÃ¡hnout a kterÃ½ mi uÅ¡etÅÃ­ hodnÄ trÃ¡penÃ­. K testu mi bude staÄit pouze traita `Testbench\\TCompiledContainer` a celÃ½ test case by mohl vypadat tÅeba takto:\n\n```php\n<?php\n\nnamespace Ant\\Tests\\Articles;\n\nuse Ant\\Articles\\Components\\IArticlesGridFactory;\nuse Tester\\Assert;\n\nrequire __DIR__ . '/../bootstrap.php';\n\n/**\n * @testCase\n */\nclass Extension extends \\Tester\\TestCase\n{\n\n\tuse \\Testbench\\TCompiledContainer;\n\n\tpublic function testFunctionality()\n\t{\n\t\t$articlesGridFactory = $this->getService(IArticlesGridFactory::class);\n\t\tAssert::type('Ant\\Articles\\Components\\IArticlesGridFactory', $articlesGridFactory);\n\t\tAssert::type('Ant\\Articles\\Components\\ArticlesGrid', $articlesGridFactory->create(NULL));\n\t}\n\n}\n\n(new Extension)->run();\n```\n\nCo to vlastnÄ testuje? PodÃ­vejte se na obsah `service.neon`, kde jsem dÅÃ­ve v rozÅ¡Ã­ÅenÃ­ pÅidÃ¡val najkou generovanou tovÃ¡rniÄku `IArticlesGridFactory`. V prvnÃ­ ÅadÄ si tak otestuji, Å¾e je zaregistrovÃ¡na sprÃ¡vnÄ a Å¾e ji kontejner znÃ¡. KdyÅ¾ mÃ¡m tovÃ¡rniÄku, tak mohu jeÅ¡tÄ otestovat, jestli je vÅ¯bec moÅ¾nÃ© vytvoÅit komponentu pro kterou je tato tovÃ¡rna urÄena. To uÅ¾ je skoro nadbyteÄnÃ½ test, protoÅ¾e to bych si mÄl asi otestovat aÅ¾ v testu pro komponentu, ale tak proÄ ne.\n\nTo nebylo tak sloÅ¾itÃ©, Å¾e? A navÃ­c je to celÃ© pokrytÃ© testy. NÃ¡dhera... :)","frontmatter":"id: 6b057983-39a9-4328-a526-2dfb03babbbb\ntimestamp: 1457796154000\ntitle: RozÅ¡Ã­ÅenÃ­ pro DIC\nslug: rozsireni-pro-dic"},{"attributes":{"id":"9b774295-d6af-413e-9431-6a05bdedfd7e","timestamp":1454786953000,"title":"JednoduchÃ© testovÃ¡nÃ­ pro ÃºplnÄ kaÅ¾dÃ©ho","slug":"jednoduche-testovani-pro-uplne-kazdeho"},"body":"Konec slibÅ¯, ÄlÃ¡nek je tu. TentokrÃ¡t se rozepÃ­Å¡u o nÃ¡stroji [Testbench](https://github.com/mrtnzlml/testbench). Testbench by mÄl pomoci s rychlÃ½m testovÃ¡nÃ­m Nette aplikace. Je zamÄÅen spÃ­Å¡e integraÄnÄ a vhodnÄ doplÅuje [Nette\\Tester](https://tester.nette.org/), kterÃ½ je zamÄÅen spÃ­Å¡e jednotkovÄ. MyÅ¡lenka, kterÃ¡ stÃ¡la za vytvoÅenÃ­m tohoto nÃ¡stroje je velmi prostÃ¡ - testovÃ¡nÃ­ je sloÅ¾itÃ©. Je sloÅ¾itÃ© hlavnÄ pro lidi, kteÅÃ­ dokonale nerozumÃ­ problÃ©mu. Proto je tento nÃ¡stroj zamÄÅen na rychlÃ½ start pro ÃºplnÄ kaÅ¾dÃ©ho (kdo si proÅ¡el alespoÅ quickstart a chce testovat). To se projevuje v tom, jak je Testbench postaven (viz dalÅ¡Ã­ povÃ­dÃ¡nÃ­). Testbench se sestÃ¡vÃ¡ z rÅ¯znÃ½ch nÃ¡padÅ¯, kterÃ© jsem vÅ¡ude moÅ¾nÄ okoukal za poslednÃ­ch X mÄsÃ­cÅ¯ a nÄco mÄ na nich zaujalo. PojÄme se tedy spoleÄnÄ podÃ­vat jak se Testbench pouÅ¾Ã­vÃ¡ a proÄ ho sÃ¡m rÃ¡d pouÅ¾Ã­vÃ¡m pro rychlÃ© testy.\n\n# ZÃ¡kladnÃ­ nastavenÃ­ testovacÃ­ho prostÅedÃ­\n\nU kaÅ¾dÃ©ho testovÃ¡nÃ­ je vhodnÃ© testovat v co nejvÃ­ce ÄistÃ©m prostÅedÃ­. Proto je dobrÃ½ nÃ¡pad vytvoÅit si vlastnÃ­ bootstrap (`tests/bootstrap.php`), jehoÅ¾ obsah mÅ¯Å¾e bÃ½t velmi jednoduchÃ½:\n\n```php\n<?php\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\nTestbench\\Bootstrap::setup(__DIR__ . '/_temp');\n```\n\nJedinÃ½m parametrem se nastavÃ­ odklÃ¡dacÃ­ sloÅ¾ka pro cache testÅ¯ a testy jsou pÅipraveny. Prakticky jsou vÅ¡ak potÅeba dalÅ¡Ã­ dodateÄnÃ© konfigurace. Zde pomÅ¯Å¾e druhÃ½ parametr `setup` metody:\n\n```php\nTestbench\\Bootstrap::setup(__DIR__ . '/_temp', function (Nette\\Configurator $configurator) {\n\t$configurator->createRobotLoader()->addDirectory([\n        __DIR__ . '/../app',\n    ])->register();\n\n    $configurator->addParameters([\n        'appDir' => __DIR__ . '/../app',\n        'testsDir' => __DIR__,\n    ]);\n\n    $configurator->addConfig(__DIR__ . '/../app/config/config.neon');\n    $configurator->addConfig(__DIR__ . '/tests.neon');\n});\n```\n\nProÄ takto zvlÃ¡Å¡tnÄ pÅes callback? Zvykem je totiÅ¾, Å¾e bootstrap vracÃ­ rovnou instanci DIC. To se vÅ¡ak hodÃ­ pouze pro aplikaci, nikoliv pro testy. Testbench si oproti tomu tuto konfiguraci uschovÃ¡ a kdyÅ¾ bude nÄkdy v testech potÅeba DIC, tak si jej pomocÃ­ tÃ©to konfiguraci vytvoÅÃ­. Tento kontejner navÃ­c vytvÃ¡ÅÃ­ pouze jednou, aby se uÅ¡etÅil Äas pÅi dalÅ¡Ã­m testovÃ¡nÃ­.\n\nDÃ­ky tomu, Å¾e se Testbench starÃ¡ o DI kontejner sÃ¡m, mÅ¯Å¾e si dovolit dÄlat zajÃ­mavÃ© vÄci. Jednou z nich je napÅÃ­klad skuteÄnost, Å¾e se sÃ¡m registruje jako rozÅ¡Ã­ÅenÃ­ do DIC, takÅ¾e je moÅ¾nÃ© v konfiguraÄnÃ­ch NEON souborech pouÅ¾Ã­vat sekci `testbench`. Ta se v souÄasnÃ© dobÄ hodÃ­ pouze pro prÃ¡ci s databÃ¡zÃ­:\n\n```neon\ntestbench:\n\tdbname: <nazev_databaze>\n\tsqls:\n\t\t- %testsDir%/_helpers/sqls/1.sql\n        - %testsDir%/_helpers/sqls/2.sql\n```\n\nPÅesnÄ tak. KdyÅ¾ pÅijde na pÅetÅes prÃ¡ce s databÃ¡zÃ­ (zatÃ­m jen Doctrine), Testbench si vytvoÅÃ­ ÃºplnÄ Äistou databÃ¡zi (kterou na konci testu smaÅ¾e) a postupnÄ do nÃ­ nahraje zde vyjmenovanÃ© SQL soubory (napÅ. pro zÃ¡kladnÃ­ strukturu + nÄjakÃ¡ demo data). NÃ¡zev databÃ¡ze je zde potÅeba z toho dÅ¯vodu, Å¾e se pÅi mazÃ¡nÃ­ potÅebuje na nÄjakou databÃ¡zi pÅipojit a tu doÄasnou (testovacÃ­ databÃ¡zi) smazat. ZatÃ­m nevÃ­m, jak to udÄlat lÃ©pe.\n\nToto je asi tak vÅ¡e, co je potÅeba udÄlat pÅed prvnÃ­m spuÅ¡tÄnÃ­m. K dispozici je potom spustitelnÃ½ skript ve vendoru `vendor/bin/run-tests`, kterÃ½ funguje na Win i na Linuxu a pokud je vÅ¡e pÅipraveno podle pÅedchozÃ­ho nÃ¡vodu, tak po spuÅ¡tÄnÃ­ promaÅ¾e cache testÅ¯, nastavÃ­ sprÃ¡vnÄ Nette\\Tester a spustÃ­ jej. Zde asi Äasem budu dÄlat jeÅ¡tÄ hodnÄ Ãºprav, ale chci je dÄlat postupnÄ - jak co bude potÅeba.\n\n# Testujeme presentery\n\nU testovÃ¡nÃ­ presenterÅ¯ to vlastnÄ celÃ© zaÄalo. Napsat si takovÃ½ zÃ¡kladnÃ­ test na presenter je velmi jednoduchÃ©. StaÄÃ­ pouÅ¾Ã­t tu sprÃ¡vnou traitu a je pÅ¯l prÃ¡ce hotovo:\n\n```php\n<?php //HomepagePresenterTest.phpt\n\nrequire __DIR__ . '/../bootstrap.php';\n\n/**\n * @testCase\n */\nclass HomepagePresenterTest extends \\Tester\\TestCase\n{\n\n\tuse \\Testbench\\TPresenter;\n\n\tpublic function testRenderDefault()\n\t{\n\t\t$this->checkAction('Homepage:default');\n\t}\n\n\tpublic function testRenderDefaultModule()\n    {\n        $this->checkAction('Module:Homepage:default');\n    }\n\n}\n\n(new HomepagePresenterTest())->run();\n```\n\nZ tÃ©to ukÃ¡zky plyne jedna dÅ¯leÅ¾itÃ¡ vÄc. Testbench podporuje pouze PHP 5.4 a vÃ­ce (5.5, 5.6, 7.0 a HHVM). Co se zde vlastnÄ testuje? Testbench si pÅebere prvnÃ­ parametr, spustÃ­ danou akci na danÃ©m presenteru a provede ÃºplnÄ nejzÃ¡kladnÄjÅ¡Ã­ testy kterÃ© lze provÃ©st. To je konkrÃ©tnÄ kontrola sprÃ¡vnÃ© odpovÄdi a dÃ¡le se pokusÃ­ najÃ­t zÃ¡kladnÃ­ HTML prvky na strÃ¡nce. Je to velmi jednoduchÃ½ test, ale o tom to celÃ© je. UÅ¾ samotnÃ© spuÅ¡tÄnÃ­ akce presenteru mÅ¯Å¾e odhalit nÄjakÃ© hloupÃ© chyby v aplikaci. Å½e je to mÃ¡lo? Metoda `checkAction` vracÃ­ [IResponse](https://api.nette.org/2.3.8/Nette.Application.IResponse.html), takÅ¾e je moÅ¾nÃ© dopsat si vlastnÃ­ testy podle potÅeby. V tomto duchu se to celÃ© nese - otestovat jen to zÃ¡kladnÃ­ a nudnÃ© a pÅedat otÄÅ¾e programÃ¡torovi, aÅ¥ si svÃ© speciÃ¡lnÃ­ pÅÃ­pady otestuje sÃ¡m.\n\nTakovÃ½ch zÃ¡kladnÃ­ch a nudnÃ½ch vÄcÃ­ ja samozÅejmÄ vÃ­ce (viz [readme](https://github.com/mrtnzlml/testbench/blob/master/readme.md)). MÅ¯Å¾e se hodit napÅÃ­klad testovÃ¡nÃ­ pÅesmÄrovÃ¡nÃ­ `checkRedirect`, signÃ¡lÅ¯ `checkSignal`, JSON odpovÄdÃ­ `checkJson` nebo testovÃ¡nÃ­ RSS a sitemap (`checkRss` a `checkSitemap`). ZajÃ­mavÃ© mÅ¯Å¾e bÃ½t takÃ© testovÃ¡nÃ­ formulÃ¡ÅÅ¯:\n\n```php\npublic function testSearchForm()\n{\n    $response = $this->checkForm('<action-name>', '<form-name>', [\n        'input' => 'value',\n    ]);\n\n    //Tester\\Assert::... with IResponse $response\n}\n```\n\nOpÄt se Testbench postarÃ¡ o potÅebnÃ© nudnÃ© nÃ¡leÅ¾itosti, otestuje to zÃ¡kladnÃ­ a vrÃ¡tÃ­ zpÄt odpovÄÄ se kterou je moÅ¾nÃ© cokoliv dalÅ¡Ã­ho je potÅeba. Tesbench \"by default\" testuje, jestli doÅ¡lo po odeslÃ¡nÃ­ formulÃ¡Åe k pÅesmÄrovÃ¡nÃ­. To je asi nejÄastnÄjÅ¡Ã­ chovÃ¡nÃ­ u formulÃ¡ÅÅ¯. NeprovedenÃ­ pÅesmÄrovÃ¡nÃ­ je tedy povaÅ¾ovÃ¡no za chybu. Toto lze ovlivnit ÄtvrtÃ½m parametrem. Ten mÅ¯Å¾e bÃ½t `FALSE` - kontrola na pÅesmÄrovÃ¡nÃ­ se neprovÃ¡dÃ­, nebo mÅ¯Å¾e bÃ½t pÅÃ­mo nÄjakÃ¡ URL cesta. Pak se kontroluje, jestli formulÃ¡Å pÅesmÄroval na sprÃ¡vnou URL.\n\nK dispozici je jeÅ¡tÄ AJAX varianta `checkAjaxForm`, kterÃ¡ testuje formulÃ¡Å v AJAX mÃ³du aplikace a jako vÃ½sledek oÄekÃ¡vÃ¡ [JsonResponse](https://api.nette.org/2.3.8/Nette.Application.Responses.JsonResponse.html). ÄtvrtÃ½m parametrem lze pak pÅedat cestu jako v pÅedchozÃ­m pÅÃ­padÄ. V tÃ©to situaci se nejdÅÃ­ve provede test formulÃ¡Åe s normÃ¡lnÃ­m pÅesmÄrovÃ¡nÃ­m a nÃ¡slednÄ jeÅ¡tÄ ten samÃ½ formulÃ¡Å v AJAX mÃ³du.\n\nV neposlednÃ­ ÅadÄ je moÅ¾nÃ© se v testech pÅihlaÅ¡ova a odhlaÅ¡ovat podle libosti pomocÃ­ metod `logIn` a `logOut`.\n\n# TestovÃ¡nÃ­ komponent\n\nTato traita je novÄjÅ¡Ã­, takÅ¾e toho neumÃ­ tolik (nikdo asi nic dalÅ¡Ã­ho zatÃ­m nepotÅeboval). V praxi se ale ukÃ¡zalo jako Å¡ikovnÃ© ovÄÅit si, Å¾e naÅ¡e skvÄlÃ¡, malÃ¡ a chytrÃ¡ komponenta vykresluje to co mÃ¡. k tomu slouÅ¾Ã­ `checkRenderOutput`:\n\n```php\nuse \\Testbench\\TComponent;\npublic function testComponentRender()\n{\n    $control = new \\Component;\n    $this->checkRenderOutput($control, '<strong>OK%A%'); //match string\n    $this->checkRenderOutput($control, __DIR__ . '/Component.expected'); //match file content\n}\n```\n\nInternÄ zde Testbench vyuÅ¾Ã­vÃ¡ [match](https://tester.nette.org/#toc-assert-match) resp. `matchFile` z Nette\\Testeru. Je to Å¡ikovnÃ¡ pomÅ¯cka jak si rychle ovÄÅit, Å¾e tÅeba komponenta co se starÃ¡ o `<title>` se o nÄj starÃ¡ skuteÄnÄ sprÃ¡vnÄ a vracÃ­ takovÃ© HTML, jakÃ© vracet mÃ¡. NavÃ­c se vnitÅnÄ komponenta pÅipojuje k `PresenterMock`, kterÃ½ mÃ¡ zkrÃ¡cenÃ½ Å¾ivotnÃ­ cyklus oproti bÄÅ¾nÃ½m presenterÅ¯m - takÅ¾e by to celÃ© mÄlo bÃ½t hned rychlejÅ¡Ã­. Pokud by pÅipravenÃ½ mock z nÄjakÃ©ho dÅ¯vodu nevyhovoval, je moÅ¾nÃ© jej vymÄnit:\n\n```php\nservices:\n\ttestbench.presenterMock: CustomPresenterMock\n```\n\nTakovÃ½ch mockÅ¯ je pÅipravenÃ¡ celÃ¡ Åada, mrknÄte se do [kÃ³du](https://github.com/mrtnzlml/testbench/tree/master/src/mocks). MÅ¯Å¾e se hodit...\n\n# PrÃ¡ce s databÃ¡zÃ­\n\nKdyÅ¾ zaÄnou mÃ­t testy velkÃ© ambice a potÅebujÃ­ pracovat s databÃ¡zÃ­, je zde jednoduchÃ© ÅeÅ¡enÃ­ ve formÄ `Testbench\\TDoctrine` traity. Jak nÃ¡zev napovÃ­dÃ¡, tak Testbench momentÃ¡lnÄ podporuje pouze Doctrine, protoÅ¾e s niÄÃ­m jinÃ½m momentÃ¡lnÄ nepracuju. AÄkoliv je pÅÃ­prava prÃ¡ce s databÃ¡zÃ­ asi nejsloÅ¾itÄjÅ¡Ã­, tak samotnÃ¡ traita poskytuje pouze jednu metodu na zÃ­skÃ¡nÃ­ EntityManageru:\n\n```php\nuse \\Testbench\\TDoctrine;\npublic function testDatabase()\n{\n    $em = $this->getEntityManager();\n    //Tester\\Assert::...\n}\n```\n\nTestbench tedy pÅipravuje ÄistÃ© izolovanÃ© databÃ¡ze, konfiguruje jednotlivÃ© testy a dÃ¡vÃ¡ k dispozici pÅipravenÃ½ ObjectManager resp. EntityManager z Kdyby. TeÄ uÅ¾ se mÅ¯Å¾e programÃ¡tor jakkoliv nad testovacÃ­ databÃ¡zÃ­ vyÅÃ¡dit. KlidnÄ bych pÅidal i dalÅ¡Ã­ funkce, ale jak jsem jiÅ¾ psal. Nechce se mi pÅidÃ¡vat hovadiny. A proÄ pouze Doctrine? ProtoÅ¾e jsem dalÅ¡Ã­ databÃ¡ze jeÅ¡tÄ nenapsal. Ani vlastnÄ nevÃ­m jak to udÄlat sprÃ¡vnÄ vzhledem k tomu, Å¾e se pouÅ¾Ã­vajÃ­ traity. Asi by bylo nejpohodlnÄjÅ¡Ã­ napsat dalÅ¡Ã­ traitu, tÅeba `TNetteDatabase` nebo `TDibi`. StejnÄ tak existuje [tato issue](https://github.com/mrtnzlml/testbench/issues/7) kterÃ¡ narÃ¡Å¾ela na skuteÄnost, Å¾e se mÅ¯Å¾e traita pÅi MySQL chovat jinak neÅ¾ PostgreSQL. Ani to vlastnÄ nevÃ­m jak udÄlat sprÃ¡vnÄ. TakÅ¾e kdyÅ¾ nekdo budete mÃ­t volnou chvilku, tak ocenÃ­m jakoukoliv pomoc... :)\n\n# Drawbacks\n\nNemÃ¡m rÃ¡d traity. Jsou sice cool, ale nemÃ¡m je rÃ¡d. HlavnÄ asi kvÅ¯li tomuto [bugu v PHP](https://bugs.php.net/bug.php?id=63911). Ale myslÃ­m si, Å¾e zrovna Testbench je vhodnÃ© mÃ­sto, kde lze traity pouÅ¾Ã­t lÃ©pe, neÅ¾ cokoliv jinÃ©ho. Jen je tÅeba myslet, Å¾e mÅ¯Å¾e v urÄitÃ½ch situacÃ­ch nastat problÃ©m. ZÃ¡roveÅ takÃ© zatÃ­m nenÃ­ stabilnÃ­ tag tÃ©to druhÃ© verze, takÅ¾e zatÃ­m pouÅ¾Ã­vejte `dev-master` (pÅÃ­padnÄ existuje RC). StabilnÃ­ mÃ¡m v plÃ¡nu vydat nÄkdy po tomto ÄlÃ¡nku aÅ¾ sesbÃ­rÃ¡m ohlasy a zapracuju je. ZÃ¡roveÅ bych rÃ¡d takÃ© vyÅeÅ¡il jiÅ¾ zmiÅovanou issue.\n\n# Advantages\n\nTestbench sÃ¡m o sobÄ obsahuje pomÄrnÄ bohatÃ© testy. Byla by ostuda, kdyby to tak nebylo. Jak jsem se zde snaÅ¾il popsat, tak napsat nÄjakÃ© rychlÃ© testy, kterÃ© odhalÃ­ nejvÄtÅ¡Ã­ chyby je velmi jednoduchÃ©. SÃ¡m Testbench rÃ¡d pouÅ¾Ã­vÃ¡m. ZejmÃ©na teÄ je tato knihovna mojÃ­ velkou oporou, protoÅ¾e pracuji s legacy kÃ³dem, kterÃ½ je velmi sloÅ¾itÃ© otestovat. JakÃ½koliv test tedy mÅ¯Å¾e zachrÃ¡nit mÅ¯j zadek a proto se mi i ty nejzÃ¡kladnÄjÅ¡Ã­ testy na presentery (a hlavnÄ na `UI\\Control` komponenty) hodnÄ hodÃ­. VyuÅ¾itÃ­ ale bude mÃ­t i u jednoduchÃ½ch webÅ¯, kde nenÃ­ skoro co testovat, protoÅ¾e aplikace skoro nic nedÄlÃ¡, ale je fajn vÄdÄt, jestli jeÅ¡tÄ vÅ¡echny strÃ¡nky fungujÃ­. U sloÅ¾itÄjÅ¡Ã­ch webÅ¯ by mÄl Testbench poskytnout dostateÄnou oporu pÅi konfiguraci prostÅedÃ­ s tÃ­m, Å¾e v niÄem nebrÃ¡nÃ­ a je moÅ¾nÃ© dopsat si vlastnÃ­ testy.\n\nJsem zvÄdav, kam co budu jeÅ¡tÄ pÅidÃ¡vat za funkce. Asi to bude hodnÄ kopÃ­rovat stav tÃ© legacy appky. Ale rÃ¡d bych to dotÃ¡hl aÅ¾ nÄkam k akceptaÄnÃ­m testÅ¯m, pokud to nebude zbyteÄnÄ sloÅ¾itÃ©. To je ale dalekÃ¡ budoucnost.\n\n[Have fun!](https://github.com/mrtnzlml/testbench)","frontmatter":"id: 9b774295-d6af-413e-9431-6a05bdedfd7e\ntimestamp: 1454786953000\ntitle: JednoduchÃ© testovÃ¡nÃ­ pro ÃºplnÄ kaÅ¾dÃ©ho\nslug: jednoduche-testovani-pro-uplne-kazdeho"},{"attributes":{"id":"e05a6170-c3ca-427d-bf0c-e9b088aa541c","timestamp":1449682578000,"title":"ZÄU - Nette je fajn, ale mÃ¡me radÄji Javu","slug":"zcu-nette-je-fajn-ale-mame-radeji-javu"},"body":"![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/dd9f40eb-4a68-4b9d-9b09-e59a6beec7c8/screenshot-from-2015-12-09-17-54-49.png)\n\nDnes jsem mÄl opÄt tu Äest pÅednÃ¡Å¡et studentÅ¯m pÅedmÄtu KIV/WEB na fakultÄ aplikovanÃ½ch vÄd (ZÄU) o tom, jak se dajÃ­ dÄlat webovÃ© aplikace pomocÃ­ webovÃ©ho frameworku. Je to vÅ¾dy skvÄlÃ½ zÃ¡Å¾itek.\n\nJako vÅ¾dy sedÄlo v publiku (doslova) pÃ¡r lidÃ­, kteÅÃ­ uÅ¾ majÃ­ s frameworkem nÄjakÃ© zÃ¡kladnÃ­ zkuÅ¡enosti. OstatnÃ­ jsou vÄtÅ¡inou studenti, pro kterÃ© je toto prvnÃ­ seznÃ¡menÃ­ s webovÃ½m svÄtem a prÃ¡vÄ tato pÅednÃ¡Å¡ka je jedna z poslednÃ­ch - takovÃ½ vrchol pomyslnÃ©ho ledovce. Odnesl jsem si asi dva poznatky. PrvnÄ - nÃ¡sledujÃ­cÃ­ pÅednÃ¡Å¡ka je **moc sloÅ¾itÃ¡**. Kdybych prezentaci dokÃ¡zal zkrÃ¡tit na polovinu, tak by to bylo OK. NenÃ­ tÅeba zmiÅovat se o DI, routovÃ¡nÃ­ atd. (*to jen spÃ­Å¡ takovÃ¡ moje osobnÃ­ poznÃ¡mka*).\n\nDruhÃ½ poznatek je vÅ¡ak mÃ©nÄ uspokojivÃ½ (i kdyÅ¾ o tom vÃ­m). Z nÄjakÃ©ho dÅ¯vodu se neustÃ¡le FAV snaÅ¾Ã­ tlaÄit Javu i na mÃ­sta, kde si myslÃ­m, Å¾e nemÃ¡ zase aÅ¾ takovÃ½ smysl (tedy do webovÃ½ch aplikacÃ­). KaÅ¾dÃ½ rok se o tom na FAV rozhoÅÃ­ ta stejnÃ¡, nikdy nekonÄÃ­cÃ­ debata. SnaÅ¾il jsem se argumentovat tÅeba tÃ­m, koho je potÅeba nejÄastÄji (podle StartupJobs.cz). Jinak ÅeÄeno koho potÅebujeme i my ve firmÄ. Fakt hodnÄ. Abych to uvedl na pravou mÃ­ru, nejsem proti JavÄ na FAV. Je to skvÄlÃ½ jazyk. Ale podle mÄ je prostÄ PHP na takovÃ½ ten bÄÅ¾nÃ½ web vhodnÄjÅ¡Ã­. KdyÅ¾ nad tÃ­m tam pÅemÃ½Å¡lÃ­m, tak vlastnÄ nikdo nebyl ÃºplnÄ proti. Jen asi nenÃ­ o webovÃ© aplikace na FAV takovÃ½ zÃ¡jem, takÅ¾e se to dÃ¡le nevyuÄuje. O to horÅ¡Ã­ je spolupracovat s absolventem, kterÃ½ znÃ¡ pouze zÃ¡klady PHP. NenÃ­ pak divu, Å¾e je PlzeÅ tak hladovÃ¡ po dobrÃ½ch PHP programÃ¡torech.\n\nTo, Å¾e existujÃ­ na tÃ©to fakultÄ (a obecnÄ na univerzitÄ) vzdÄlanÃ­ lidÃ©, kteÅÃ­ se frameworkÅ¯m brÃ¡nÃ­ a dokonce je zakazujÃ­ je vÄc jinÃ¡. A tak mÄ napadÃ¡ dalÅ¡Ã­ otÃ¡zka. **KterÃ¡ vysokÃ¡ Å¡kola se webovÃ½m aplikacÃ­m vÄnuje nejvÃ­ce?** Nejde jen o to, kolik obsahuje webovÃ½ch pÅedmÄtÅ¯, ale Å¾e se nebrÃ¡nÃ­ tomu, co se ve firmÃ¡ch skuteÄnÄ pouÅ¾Ã­vÃ¡. JÃ¡ mÃ¡m totiÅ¾ poÅÃ¡d problÃ©m pochopit to, proÄ se nÄkomu nelÃ­bÃ­ framework (nehledÄ na znaÄku). ProtoÅ¾e buÄme k sobÄ upÅÃ­mnÃ­ - nevÄÅÃ­m tomu, Å¾e danÃ© problematice tento ÄlovÄk rozumÃ­ vÃ­ce. Pro mÄ je to zatÃ­m poÅÃ¡d jen znÃ¡mka tvrdohlavosti. Asi tak stejnÄ jako Å¾e nÄkdo tlaÄÃ­ jen Nette a nic jinÃ©ho. Jak jsem dnes ÅÃ­kal studentÅ¯m - jÃ¡ Nette vlastnÄ takÃ© tlaÄÃ­m, protoÅ¾e ho jako jedinÃ½ framework ovlÃ¡dÃ¡m. JinÃ© neumÃ­m. Ale podÃ­vejte se, kolik existuje integracÃ­ Symfony balÃ­ÄkÅ¯. Kdybych nÄkde kydal na Symfony (nebo na jakÃ½koliv jinÃ½ framework) hnÅ¯j, tak si pÅijdu jako pitomec.\n\nMoÅ¾nÃ¡ se na to dÃ­vÃ¡m ÃºplnÄ blbÄ, ale ÄlovÄk, kterÃ½ tlaÄÃ­ nepouÅ¾Ã­vÃ¡nÃ­ frameworkÅ¯ podle mÃ©ho nepatÅÃ­ mezi nejbystÅejÅ¡Ã­. StejnÄ tak, kdyÅ¾ se nÄkterÃ© vÄci stranÃ­ a nemÃ¡ poÅÃ¡dnÃ© argumenty. Å½e se bez framewoku nauÄÃ­te lÃ©pe danÃ½ programovacÃ­ jazyk? **Bullshit.** KdyÅ¾ jsem zaÄÃ­nal s Nette jÃ¡, tak jsem PHP skoro neumÄl. NauÄil jsem se ho jen dÃ­ky frameworku. True story.\n\nA pokud mi ani teÄ nevÄÅÃ­te, dÃ¡m vÃ¡m reÃ¡lnÃ½ pÅÃ­klad. VÃ­te kolik lidÃ­ mi dokÃ¡zalo odpovÄdÄt na otÃ¡zku jak se escapujÃ­ promÄnnÃ© v HTML? Jeden student. Nikdo uÅ¾ ale nedokÃ¡zal vysvÄtlit parametry tÃ©to funkce. Pokud je toto lepÅ¡Ã­ pÅÃ­stup neÅ¾ pouÅ¾Ã­t poÅÃ¡dnÃ½ Å¡ablonovacÃ­ systÃ©m, tak to teda potÄÅ¡ koÅ¡tÄ...\n\nFuj, to jsem se ale rozohnil. MrknÄte se o Äem jsem dnes povÃ­dal:\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/key/5ovazIJDcXy8xH\" width=\"752\" height=\"462\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\n:)","frontmatter":"id: e05a6170-c3ca-427d-bf0c-e9b088aa541c\ntimestamp: 1449682578000\ntitle: ZÄU - Nette je fajn, ale mÃ¡me radÄji Javu\nslug: zcu-nette-je-fajn-ale-mame-radeji-javu"},{"attributes":{"id":"d0a905ac-329a-46a9-899b-bfe7518519c4","timestamp":1448405176000,"title":"ZnovupouÅ¾itelnÃ© ÄÃ¡sti formulÃ¡Åe","slug":"znovupouzitelne-casti-formulare"},"body":"PÅed nÄjakÃ½m Äasem jsem psal o tom, jak vytvoÅit [znovupouÅ¾itenÃ½ formulÃ¡Å](znovupouzitelny-formular). NejednÃ¡ se o nic jinÃ©ho, neÅ¾ o sprÃ¡vnÃ© navrÅ¾enÃ­ a nÃ¡slednÃ© pouÅ¾itÃ­ komponent, tedy potomkÅ¯ `UI\\Control`. Pokud bych mÄl bÃ½t upÅÃ­mnÃ½, nemyslÃ­m si, Å¾e se formulÃ¡Åe nÄjak Äasto na webu opakujÃ­ a osobnÄ tento princip pouÅ¾Ã­vÃ¡m spÃ­Å¡e pro oddÄlenÃ­ ÄÃ¡sti aplikace do samostatnÃ©ho balÃ­Äku. TÃ­m spÃ­Å¡ najde nÃ¡sledujÃ­cÃ­ ukÃ¡zka mÃ©nÄ pouÅ¾itÃ­. PrÃ¡vÄ mÃ¡m totiÅ¾ za Ãºkol navrhnout pÅedÄlÃ¡nÃ­ jednÃ© administrace. Ãkolem nenÃ­ hledÄt na to, jak moc je tento pÅÃ­stup Å¡patnÃ½, ale navrhnout ÅeÅ¡enÃ­, kterÃ© nahradÃ­ stÃ¡vajÃ­cÃ­ 1:1. Tato administrace obsahuje Äasto se opakujÃ­cÃ­ (a velmi rozsÃ¡hlÃ½) formulÃ¡Å, kterÃ½ se sklÃ¡dÃ¡ z nÄkolika karet. NavÃ­c nÄkterÃ© ÄÃ¡sti formulÃ¡Åe spolu vÅ¯bec nesouvisÃ­ a na kaÅ¾dÃ© strÃ¡nce je formulÃ¡Å troÅ¡ku jinÃ½ (i kdyÅ¾ je podobnost zÅejmÃ¡). Vzhledem k tomu, Å¾e se jednÃ¡ o tak rozsÃ¡hlÃ½ kÃ³d, upustil jsem od znovupouÅ¾itelnÃ©ho formulÃ¡Åe a navrhnul jsem znovupouÅ¾itelnÃ© pouze jeho ÄÃ¡sti. A na nÃ¡sledujÃ­cÃ­ch ÅÃ¡dcÃ­ch nastÃ­nÃ­m jak.\n\n# Na zaÄÃ¡tku stÃ¡la komponenta\n\nPoÅÃ¡d platÃ­, Å¾e je samotnÃ½ formulÃ¡Å komponenta. Na tom se nic nemÄnÃ­. V mÃ©m pÅÃ­padÄ se vÅ¡ak hodilo udÄlat si jeÅ¡tÄ nÄjakÃ© bÃ¡zovÃ© tÅÃ­dy. PokusÃ­m se ukÃ¡zky oÅezat co nejvÃ­ce od zbyteÄnostÃ­ tak, aby to pokud moÅ¾no jeÅ¡tÄ dÃ¡valo smysl:\n\n```php\nclass NewsForm extends BaseControl {\n\n\t/** @var News|NULL */\n\tprivate $news;\n\n\tpublic function __construct($news) {\n\t\tparent::__construct();\n\t\t$this->news = $news;\n\t}\n\n\tpublic function render() {\n\t\t$this->template->render(__DIR__ . '/NewsForm.latte');\n\t}\n\n\tprotected function createComponentNewsForm() {\n\t    $form = $this->form;\n\t    // nastavenÃ­ spoleÄnÃ½ch prvkÅ¯ formulÃ¡Åe\n\t    return $form\n\t}\n\n}\n```\n\nK tomu (tÅeba) nÄjakÃ¡ ta generovanÃ¡ tovÃ¡rniÄka a komponenta tak jak ji znÃ¡me vÅ¡ichni je hotova. Bude vÅ¡ak nutnÃ© rozklÃ­Äovat, co se dÄje tÅeba pod tÅÃ­dou `BaseControl`. JednÃ¡ se o jednoduchÃ©ho pÅedka, kterÃ½ krom dalÅ¡Ã­ch vÄcÃ­ obsahuje hlavnÄ toto:\n\n```php\nabstract class BaseControl extends UI\\Control {\n\n\t/** @var BaseForm */\n\tprotected $form;\n\n\tpublic function __construct() {\n\t\tparent::__construct();\n\t\t$this->form = new BaseForm;\n\t}\n\n\tprotected function attached($obj) {\n\t\tparent::attached($obj);\n\t\tif ($obj instanceof UI\\Presenter) {\n\t\t\t$this->form->addComponent(new SubmitButtonsContainer, 'submitButtons');\n\t\t\t$this->form->addComponent(new AnotherContainer, 'another');\n\t\t}\n\t}\n\n}\n```\n\nZde se vytvoÅÃ­ nÄjakÃ½ formulÃ¡Å (s kterÃ½m pak pracuji v komponentÄ) a po pÅipojenÃ­ formulÃ¡Åe k presenteru se pÅipojÃ­ i nÄjakÃ© formulÃ¡ÅovÃ© kontejnery. NeÅ¾ se vÅ¡ak k tÄmto kontejnerÅ¯m dostanu, tak by bylo dobrÃ© prozradit i co se dÄje v tÅÃ­dÄ `BaseForm`. PopravdÄ nic moc:\n\n```php\n/**\n * @method addTinyMCE($name, $label = NULL, $cols = NULL, $rows = NULL)\n */\nclass BaseForm extends UI\\Form {\n\n\t/** @var callable[] */\n\tpublic $onSaveAndStay;\n\n\t/** @var callable[] */\n\tpublic $onSaveAndExit;\n\n\t/** @var callable[] called BEFORE onClick event */\n\tpublic $onSuccess;\n\n\tpublic function __construct() {\n\t\tparent::__construct();\n\t\t$this->addProtection();\n\t}\n\n}\n```\n\nNastavÃ­m si zde nÄjakÃ© vÄci, kterÃ© jsou pro kaÅ¾dÃ½ formulÃ¡Å v administraci obecnÄ spoleÄnÃ©. KonkrÃ©tnÄ tedy CSRF ochranu a pÃ¡r polÃ­ pro udÃ¡losti. UdÃ¡losti jsem si zde musel nadefinovat sÃ¡m, bÄÅ¾nÄ se na formulÃ¡Åi volÃ¡ `onSuccess` udÃ¡lost aÅ¾ po `onClick` ([link](https://api.nette.org/2.3.7/source-Forms.Form.php.html#380-420)), ale zrovna zde jsem to potÅeboval obrÃ¡cenÄ. HodÃ­ se to v okamÅ¾iku, kdy chci vyuÅ¾Ã­vat `onSuccess`, ale v `onClick` uÅ¾ z formulÃ¡Åe tÅeba pÅesmÄrovÃ¡vÃ¡m pryÄ. Vzhledem k tomu, Å¾e oba eventy se volajÃ­ jen pÅi validnÃ­m odeslÃ¡nÃ­, tak to niÄemu nevadÃ­. V tÃ©to tÅÃ­dÄ je takÃ© vhodnÃ© mÃ­sto pro umÃ­stÄnÃ­ nÄjakÃ½ch dynamickÃ½ch metod do anotacÃ­, aby je IDE dobÅe napovÃ­dalo (viz `addTinyMCE`). Byl to dlouhÃ½ Ãºvod, ale vÅ¡e je pÅipraveno a mÅ¯Å¾eme se vrhnout na kontejnery.\n\n# FormulÃ¡ÅovÃ© kontejnery\n\nOsobnÄ [formulÃ¡ÅovÃ© kontejnery](https://pla.nette.org/cs/dedicnost-vs-kompozice) nemÃ¡m moc rÃ¡d. Jsou sice super, ale pohybujÃ­ se na dalÅ¡Ã­ Ãºrovni formulÃ¡Åe. Pokud se vÅ¡ak s tÃ­mto faktem smÃ­ÅÃ­me (a nejlÃ©pe z nÄj udÄlÃ¡me vÃ½hodu), pak jsou docela super a zde se skvÄle hodÃ­. MÅ¯Å¾u si pÄknÄ oddÄlit napÅÃ­klad odesÃ­lacÃ­ tlaÄÃ­tka a ty pak vesele pouÅ¾Ã­vat ve vÅ¡ech formulÃ¡ÅÃ­ch:\n\n```php\nclass SubmitButtonsContainer extends BaseFormContainer {\n\n\tprivate $form;\n\n\tpublic function attached($obj) {\n\t\tparent::attached($obj);\n\t\tif ($obj instanceof BaseForm) {\n\t\t\t$this->form = $obj;\n\t\t\t$obj->onSuccess[] = function (BaseForm $form) {\n\t\t\t\t$path = $this->lookupPath(BaseForm::class);\n\t\t\t\tdump($form->getValues()->$path); // dalÅ¡Ã­ zpracovÃ¡nÃ­ hodnot\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic function render() {\n\t\t$this->template->_form = $this; // kvÅ¯li formulÃ¡ÅovÃ½m makrÅ¯m v Å¡ablonÄ\n\t\t$this->template->render(__DIR__ . '/SubmitButtonsContainer.latte');\n\t}\n\n\tprotected function configure() {\n\t\t$this->addSubmit('saveAndStay', 'UloÅ¾it a zÅ¯stat')->onClick[] = function (SubmitButton $button) {\n            $form = $button->getForm();\n            $this->form->onSuccess($form, $form->getValues());\n            $this->form->onSaveAndStay($form, $form->getValues());\n\t\t};\n\t}\n\n}\n```\n\nPokud sledujete fÃ³rum, tak vÃ¡m je tento nÃ¡vrh jistÄ povÄdomÃ½. JednÃ¡ se o [slavnÃ© ÅeÅ¡enÃ­ pod Äarou](https://forum.nette.org/cs/11747-skladani-komponent-a-formulare#p84652). PÅesnÄ toto se odehrÃ¡vÃ¡ v rodiÄovskÃ© tÅÃ­dÄ `BaseFormContainer`. Doplnil jsem si do tÃ©to tÅÃ­dy vÅ¡ak jednu malou vychytÃ¡vku. ChtÄl jsem totiÅ¾, aby kaÅ¾dÃ½ kontejner mohl mÃ­t vlastnÃ­ Å¡ablonu. To bÄÅ¾nÄ nenÃ­ moÅ¾nÃ©. Kontejner tedy mohu vykreslovat pomocÃ­ dobÅe znÃ¡mÃ©ho makra `{control ...}` (coÅ¾ nedÄlÃ¡ nic jinÃ©ho, neÅ¾ Å¾e se zavolÃ¡ metoda `render`). JenÅ¾e co je `$this->template`? BÃ¡zovÃ½ kontejner jsem musel rozÅ¡Ã­Åit jeÅ¡tÄ o vhodnou ÄÃ¡st z `UI\\Control`, kterÃ¡ se starÃ¡ o vykreslovÃ¡nÃ­:\n\n```php\nabstract class BaseFormContainer extends Forms\\Container {\n\n\t/** @var UI\\ITemplateFactory */\n\tprivate $templateFactory;\n\n\t/** @var UI\\ITemplate */\n\tprivate $template;\n\n    public function injectTemplateFactory(UI\\ITemplateFactory $templateFactory) {\n\t\t$this->templateFactory = $templateFactory;\n\t}\n\n\tabstract public function render();\n\n    public function getTemplate() {\n\t\t// bla bla, mrkni na: https://api.nette.org/2.3.7/source-Application.UI.Control.php.html#45\n\t\treturn $this->template;\n\t}\n\n\tprotected function createTemplate() {\n\t\t/** @var UI\\ITemplateFactory $templateFactory */\n\t\t$templateFactory = $this->templateFactory ?: $this->lookup(UI\\Presenter::class)->getTemplateFactory();\n\t\treturn $templateFactory->createTemplate(NULL);\n\t}\n```\n\nJednoduchÃ© vykreslitelnÃ© formulÃ¡ÅovÃ© kontejnery. Cool. Abych to rychle zrekapituloval. MÃ¡me jednoduchou komponentu na formulÃ¡Å, kterÃ¡ dÄdÃ­ od `BaseControl`. Tato tÅÃ­da pÅipojuje ve vhodnÃ½ Äas formulÃ¡ÅovÃ© kontejnery, kterÃ© se umÃ­ vykreslit (coÅ¾ bÄÅ¾nÄ nejde).\n\nV Å¡ablonÄ `SubmitButtonsContainer.latte` je moÅ¾nÃ© pouÅ¾Ã­vat normÃ¡lnÄ `{input ...}` makra a dalÅ¡Ã­, jako kdybych pokraÄoval dÃ¡l v Å¡ablonÄ jednoho velkÃ©ho formulÃ¡Åe. SamotnÃ© pÅipojenÃ© formulÃ¡ÅovÃ© kontejnery je moÅ¾nÃ© vykreslovat pomocÃ­ klasickÃ©ho makra `{control newsForm-submitButtons}` v hlavnÃ­m formulÃ¡Åi. To je moÅ¾nÃ¡ troÅ¡ku nevÃ½hoda, protoÅ¾e kontejnery se pÅipojujÃ­ do formulÃ¡Åe a stÃ¡vajÃ­ se tak podkomponentou. MusÃ­m tedy control makro volat stylem *rodiÄ-podkomponenta*.\n\n# ZnovupouÅ¾itelnost vykreslitelnÃ½ch kontejnerÅ¯\n\nKde je ta znovupouÅ¾itelnost? Jak bych udÄlal to, Å¾e pouÅ¾iju tÅeba odesÃ­lacÃ­ tlaÄÃ­tka (nebo jakoukoliv jinou ÄÃ¡st formulÃ¡Åe) nÄkde jinde? JednoduÅ¡e. ProstÄ vytvoÅÃ­me formulÃ¡Å (to je podmÃ­nka nutnÃ¡) a kontejner v nÄm pouÅ¾ijeme:\n\n```php\nprotected function createComponentTest() {\n    $form = new UI\\Form;\n    $form->addComponent(new AnotherContainer, 'another');\n    $form->addSubmit('odeslat', 'Odeslat');\n    $form->onSuccess[] = function ($_, ArrayHash $values) {\n        dump($values);\n    };\n    return $form;\n}\n```\n\nK tomu tÅeba nÄjakÃ¡ takovÃ¡ Å¡ablona:\n\n```\n{form test}\n    {control test-another}\n    {input odeslat}\n{/form}\n```\n\nFormulÃ¡Å se samozÅejmÄ vykreslÃ­ i pÅi obyÄejnÃ©m `{control test}`, ale bez Å¡ablony kontejneru (pÃ­Å¡u si nÃ¡pad na vylepÅ¡enÃ­). VlastnÄ je ta myÅ¡lenka docela jednoduchÃ¡, Å¾e? Jen je tÅeba dÃ¡t pozor na to, Å¾e kontejner takto umisÅ¥uje formulÃ¡ÅovÃ© prvky na jinou ÃºroveÅ.\n\nMalÃ¡ poznÃ¡mka na zÃ¡vÄr, kterÃ¡ je sice mimo, ale mÅ¯Å¾e se hodit. ObÄas je potÅeba zajistit si nÄkde inject zÃ¡vislostÃ­, ale z nÄjakÃ©ho dÅ¯vodu je to problematickÃ©. MÅ¯Å¾e se jednat tÅeba o zÃ¡vislost v abstraktnÃ­ rodiÄovskÃ© tÅÃ­dÄ. V takovÃ©m pÅÃ­padÄ je moÅ¾nÃ© v configu nastavit [decorator](https://github.com/dg/nette-di/blob/master/tests/DI/DecoratorExtension.basic.phpt):\n\n```neon\ndecorator:\n\tBaseFormContainer:\n\t\tinject: on\n```\n\n<del>PÅÃ­Å¡tÄ se podÃ­vÃ¡me znovu na [Dependent select box](dependent-select-box). PÅ¯vodnÃ­ ÄlÃ¡nek si totiÅ¾ zaslouÅ¾Ã­ dÅ¯kladnou revizi a po krÃ¡tkÃ© anketÄ jsem byl pÅesvÄdÄen, Å¾e bude lepÅ¡Ã­ napsat novÃ½ ÄlÃ¡nek a podÃ­vat se na celÃ½ problÃ©m podrobnÄji.</del> <span style=\"color:green\">PodÃ­vejte se radÄji na <a href=\"https://github.com/NasExt/DependentSelectBox\">tento doplnÄk</a>, kterÃ½ zÃ¡vislÃ½ select box ÅeÅ¡Ã­ jinak - moÅ¾nÃ¡ lÃ©pe.</span>","frontmatter":"id: d0a905ac-329a-46a9-899b-bfe7518519c4\ntimestamp: 1448405176000\ntitle: ZnovupouÅ¾itelnÃ© ÄÃ¡sti formulÃ¡Åe\nslug: znovupouzitelne-casti-formulare"},{"attributes":{"id":"334c8bae-af8a-4b17-9735-dfba909f5fa1","timestamp":1447611844000,"title":"Od indexu aÅ¾ po presenter","slug":"od-indexu-az-po-presenter"},"body":"KdyÅ¾ jsem se uÄil pracovat s Nette Frameworkem, musel jsem v zaÄÃ¡tcÃ­ch hodnÄ pÅivÃ­rat oÄi a ÅÃ­kat si \"prostÄ to tak je\". HodnÄ vÄcÃ­ bylo zahaleno do tmy. TeÄ uÅ¾ to tak naÅ¡tÄstÃ­ nenÃ­, ale stÃ¡le se stÃ¡vÃ¡, Å¾e mi nÄkdo napÃ­Å¡e a dÄkuje za poodhalenÃ­ a vysvÄtlenÃ­ toho, jak to funguje na pozadÃ­ (za coÅ¾ zase dÄkuji jÃ¡). PokusÃ­m se tedy pokraÄovat a vrÃ¡tÃ­m se na ÃºplnÃ½ zaÄÃ¡tek - do `index.php` a poodhalÃ­m, jak probÃ­hÃ¡ start takovÃ© bÄÅ¾nÃ© aplikace. A jako vÅ¾dy - co nejjednoduÅ¡eji.\n\nZodpovÃ­m (nebo alespoÅ nastÃ­nÃ­m odpovÄdi na) nÃ¡sledujÃ­cÃ­ otÃ¡zky:\n- proÄ redirect vyvolÃ¡vÃ¡ AbortException\n- jak napsat vlastnÃ­ NanoPresenter\n- proÄ mÃ¡ Nette dva request objekty\n- kde se bere Å¾ivotnÃ­ cyklus presenteru\n\n# Start aplikace\n\nNedÃ¡vno jsem dostal v prÃ¡ci na starost implementovat Nette do jednoho legacy projektu. UÅ¾ jsem tu o tom [psal](navrhovy-vzor-legacy-code). Byl to nesmÃ­rnÄ vyÄerpÃ¡vajÃ­cÃ­ Ãºkol, ale uÅ¾ mÃ¡m hotovo a jsem ve fÃ¡zi nekoneÄnÃ©ho refaktoringu. Jednou z prvnÃ­ch vÄcÃ­, kterÃ© bylo nutnÃ© vyÅeÅ¡it byl start aplikace z jednoho mÃ­sta. Toto naÅ¡tÄstÃ­ ÅeÅ¡Ã­ [web-project](https://github.com/nette/web-project) (nebo [sandbox](https://github.com/nette/sandbox) chcete-li) uÅ¾ v zÃ¡kladu takto (`.htaccess`):\n\n```\n<IfModule mod_rewrite.c>\n\tRewriteEngine On\n\n\tRewriteCond %{REQUEST_FILENAME} !-f\n\tRewriteCond %{REQUEST_FILENAME} !-d\n\tRewriteRule !\\.(pdf|js|ico|gif|jpg|png|css|rar|zip|tar\\.gz|map)$ index.php [L]\n</IfModule>\n```\n\nÄÃ­mÅ¾ se velmi rychle dostÃ¡vÃ¡me k prvnÃ­mu bodu, kterÃ½m je `index.php`:\n\n```php\n/** @var \\Nette\\DI\\Container $container */\n$container = require __DIR__ . '/../app/bootstrap.php';\n/** @var \\Nette\\Application\\Application $application */\n$application = $container->getByType(\\Nette\\Application\\Application::class);\n$application->run();\n```\n\nV tomto souboru vÅ¡e zaÄÃ­nÃ¡ a takÃ© konÄÃ­. TotiÅ¾ zavolÃ¡ se jeÅ¡tÄ minimÃ¡lnÄ `\\Tracy\\Debugger::shutdownHandler`, `\\Nette\\Http\\Session::clean` a `\\Nette\\Http\\Response::__destruct`, ale zÅ¯staÅme u toho, Å¾e zde vÅ¡e zaÄÃ­nÃ¡ a takÃ© konÄÃ­. O co v indexu vlastnÄ jde? Hned pÅeskoÄÃ­m prvnÃ­ ÅÃ¡dku, aÄkoliv se jednÃ¡ o nezanedbatelnou ÄÃ¡st. Z bootrapu zÃ­skÃ¡me hotovou instanci [DIC](https://doc.nette.org/cs/2.3/dependency-injection), resp. pÅÃ­mÃ©ho potomka. NÃ¡sleduje vytaÅ¾enÃ­ [Application](https://api.nette.org/2.3.7/Nette.Application.Application.html) a naÅ¡kytnutÃ­ aplikace pomocÃ­ metody `run`. To je pÅedpoklÃ¡dÃ¡m vÅ¡em jasnÃ©, proto jsem to vzal letem svÄtem. CÃ­lem tohoto ÄlÃ¡nku je vÅ¡ak popsÃ¡nÃ­ prÃ¡vÄ `run` metod.\n\n# Run, run!\n\nMetoda `\\Nette\\Application\\Application::run` vypadÃ¡ pÅesnÄ takto:\n\n```php\npublic function run()\n{\n    try {\n        $this->onStartup($this);\n        $this->processRequest($this->createInitialRequest());\n        $this->onShutdown($this);\n    } catch (\\Exception $e) {\n        $this->onError($this, $e);\n        if ($this->catchExceptions && $this->errorPresenter) {\n            try {\n                $this->processException($e);\n                $this->onShutdown($this, $e);\n                return;\n            } catch (\\Exception $e) {\n                $this->onError($this, $e);\n            }\n        }\n        $this->onShutdown($this, $e);\n        throw $e;\n    }\n}\n```\n\nPro pÅehlednost to jeÅ¡tÄ zjednoduÅ¡Ã­m a vyhodÃ­m vÅ¡e, co pro samotnÃ© spuÅ¡tÄnÃ­ aplikace nenÃ­ nezbytnÄ nutnÃ©:\n\n```php\npublic function run()\n{\n    try {\n        $this->processRequest($this->createInitialRequest());\n    } catch (\\Exception $e) {\n        if ($this->catchExceptions && $this->errorPresenter) {\n            $this->processException($e);\n            return;\n        }\n        throw $e;\n    }\n}\n```\n\nMoc toho opÄt nezbylo. VlastnÄ se zde dÄjÃ­ jen tÅi vÄci. PrvnÄ [createInitialRequest](https://api.nette.org/2.3.7/source-Application.Application.php.html#102-124). Tato metoda vrÃ¡tÃ­ (jak uÅ¾ nÃ¡zev napovÃ­dÃ¡) tzv. aplikaÄnÃ­ request. To je objekt, kterÃ½ pak putuje celou aplikacÃ­ a nese si informaci o tom co vlastnÄ uÅ¾ivatel chce. VzpomÃ­nÃ¡te si na ÄlÃ¡nek o [dynamickÃ©m routovÃ¡nÃ­ URL adres](dynamicke-routovani-url-adres)? Tam jsem ukazoval, jak se HTTP request zmÄnÃ­ prÃ¡vÄ na aplikaÄnÃ­ a zpÄt. CelÃ¡ sranda se tedy odehrÃ¡vÃ¡ nÄkde v RouterFactory (zatÃ­m to platÃ­, do budoucna ale [nebude](https://github.com/nette/routing/commit/e802a85e96f5814ddf1a16ea1517398eb560bab6)). SamotnÃ½ HTTP request se pak dostane do `Application` dÃ­ky DI. UÅ¾ v `createInitialRequest` je tedy jasnÃ©, jestli je moÅ¾nÃ© poÅ¾adavek pÅeloÅ¾it, nebo 404. Pokud 404, tak konec, resp. `processException` pokud je to v configu zapnutÃ© (coÅ¾ jinÃ½mi slovy znamenÃ¡ forward na error presenter):\n\n```neon\napplication:\n    catchExceptions: yes\n```\n\nPokud se vÅ¡ak povede zÃ­skat aplikaÄnÃ­ request, nastupuje funkce `processRequest`. MrknÄte na [implementaci](https://api.nette.org/2.3.7/source-Application.Application.php.html#127-150). OpÄt se nejednÃ¡ o nic sloÅ¾itÃ©ho. Jde zde vlastnÄ jen o jedinou vÄc. ZÃ­skat presenter a zavolat nad nÃ­m `run`. ProÄ `run`? Presenter totiÅ¾ nenÃ­ potomek `\\Nette\\Application\\UI\\Presenter` jak si pamatujÃ­ skoro vÅ¡ichni, ale spÃ­Å¡e objekt, kterÃ½ implementuje interface `\\Nette\\Application\\IPresenter` jehoÅ¾ jedinou metodou je prÃ¡vÄ `run` do kterÃ© se jako jedinÃ½ parametr pÅedÃ¡vÃ¡ jiÅ¾ zmÃ­nÄnÃ½ aplikaÄnÃ­ request. ZÃ¡roveÅ musÃ­ tato metoda vracet `\\Nette\\Application\\IResponse`.\n\nZ toho plyne, Å¾e pokud potÅebujeme velmi jednoduchÃ½ presenter (kterÃ½ skoro nic neumÃ­, ale je rychlÃ½), staÄÃ­ si implementovat `IPresenter` rozhranÃ­ a hotovo:\n\n```php\nclass NanoPresenter extends Nette\\Object implements Nette\\Application\\IPresenter\n{\n\n\tpublic function run(Nette\\Application\\Request $appRequest)\n\t{\n\t\treturn new Nette\\Application\\Responses\\TextResponse('It works!');\n\t}\n\n}\n```\n\nV bÄÅ¾nÃ©m presenteru se toho vÅ¡ak dÄje samozÅejmÄ mnohem vÃ­ce. PrÃ¡vÄ v metodÄ `run` se schovÃ¡vÃ¡ celÃ½ dobÅe znÃ¡mÃ½ Å¾ivotnÃ­ cyklus presenteru. NeÅ¾ se vÅ¡ak dostanu k reÃ¡lnÃ©mu pÅÃ­kladu, zaÄnu na tomto jednoduchÃ©m. `NanoPresenter` vracÃ­ pouze `TextResponse` s obyÄejnÃ½m textem. Tato odpovÄÄ je pÅedÃ¡na zpÄt do `processRequest` a nÃ¡slednÄ je hned zavolÃ¡no `\\Nette\\Application\\IResponse::send` coÅ¾ v tomto konkrÃ©tnÃ­m pÅÃ­padÄ vyÃºstÃ­ v obyÄejnÃ© echo. Co se vÅ¡ak dÄje v bÄÅ¾nÃ©m presenteru?\n\n# VykreslenÃ­ Å¡ablony\n\nPresenter, kterÃ½ dÄdÃ­ od `\\Nette\\Application\\UI\\Presenter` dÄlÃ¡ tÃ©mÄÅ to samÃ©. JedinÃ½ rozdÃ­l je v tom, Å¾e presenter vlastnÄ vykreslitelnÃ¡ komponenta, takÅ¾e si vezme Å¡ablonu a pÅedÃ¡ ji stejnÄ jako v pÅedchozÃ­m pÅÃ­padÄ do `TextResponse`. Zde je oproti mÃ©mu `NanoPresenter` pÅÃ­kladu malÃ½ implementaÄnÃ­ rozdÃ­l, ale ve vÃ½sledku presenter tak jako tak `TextResponse` vrÃ¡tÃ­ zpÄt `Application` objektu do `processRequest` metody. DÃ¡le se opÄt zavolÃ¡ `\\Nette\\Application\\Responses\\TextResponse::send`, tentokrÃ¡t vÅ¡ak nedojde k obyÄejnÃ©mu echu, ale spustÃ­ se renderovÃ¡nÃ­ pÅedanÃ© Å¡ablony (`\\Nette\\Application\\UI\\ITemplate`). VÄtÅ¡inou to tedy propadne na Latte, ale to samozÅejmÄ nenÃ­ podmÃ­nkou.\n\n```php\npublic function send(Nette\\Http\\IRequest $httpRequest, Nette\\Http\\IResponse $httpResponse)\n{\n    if ($this->source instanceof Nette\\Application\\UI\\ITemplate) {\n        $this->source->render();\n    } else {\n        echo $this->source;\n    }\n}\n```\n\nZ pÅedchozÃ­ho textu by mÄlo bÃ½t zÅejmÃ©, kudy poÅ¾adavek putuje. KdyÅ¾ si prohlÃ©dnete detailnÄji to co jsem zde popsal, mÄlo by bÃ½t jasnÃ©, Å¾e se internÄ pouÅ¾Ã­vÃ¡ `\\Nette\\Application\\AbortException` a proto je nebezpeÄnÃ© v presenterech chytat bezmyÅ¡lenkovitÄ vÅ¡echny vÃ½jimky. Nikdo pak nechce ÅeÅ¡it \"proÄ to Nette zase nepÅesmÄrovÃ¡vÃ¡\".\n\nTento text by mÄl pÅeklenout tu temnou propast mezi `index.php` a akcÃ­ v presenteru. PÅÃ­Å¡tÄ uÅ¾ se snad vrhnu na nÄco zajÃ­mavÄjÅ¡Ã­ho... :)","frontmatter":"id: 334c8bae-af8a-4b17-9735-dfba909f5fa1\ntimestamp: 1447611844000\ntitle: Od indexu aÅ¾ po presenter\nslug: od-indexu-az-po-presenter"},{"attributes":{"id":"8474ac83-61b4-4afe-b0d5-ca7ba4e62501","timestamp":1444573684000,"title":"JeÅ¡tÄ lepÅ¡Ã­ struktura Nette aplikace","slug":"jeste-lepsi-struktura-nette-aplikace"},"body":"KaÅ¾dÃ½, kdo postavil pÃ¡r aplikacÃ­, musel vÅ¾dy ÅeÅ¡it ten samÃ½ problÃ©m. Jakou strukturu by mÄla aplikace mÃ­t? A co kdyÅ¾ se zaÄne projekt rozrÅ¯stat? MÄl bych se drÅ¾et toho jak to dÄlÃ¡ [sandbox](https://github.com/nette/sandbox) (resp. [web-project](https://github.com/nette/web-project))? Postupem Äasu jsem dokonvergoval k relativnÄ pÅijatelnÃ©mu vÃ½sledku a vzhledem k tomu, Å¾e projekt na kterÃ©m jsem to poprvÃ© poÅÃ¡dnÄ rozjel byl ukoÄen, [rozhodl jsem se jej zveÅejnit](https://github.com/mrtnzlml/CMS-lite). UÅ¾ je to sice nÄjakÃ½ Äas, ale v dobÄ nejvÄtÅ¡Ã­ho vrcholu tohoto projektu jsem jej povaÅ¾oval za takovou osobnÃ­ Å¡piÄku. A to hned z nÄkolika dÅ¯vodÅ¯. K tomu se ale dostanu postupnÄ. A vezmu to pÄknÄ od tÄch nejmenÅ¡Ã­ch ÄÃ¡stÃ­.\n\n# Presentery a komponenty\n\nU presenterÅ¯ se mi vlastnÄ docela lÃ­bÃ­ jak to dÄlÃ¡ sandbox. Ve sloÅ¾ce presenterÅ¯ jsou logicky presentery a takÃ© sloÅ¾ka `templates`, kterÃ¡ obsahuje Å¡ablony prÃ¡vÄ k tÄmto presenterÅ¯m:\n\n```\npresenters/\n    templates/\n        Homepage/\n            default.latte\n        @layout.latte\n    BasePresenter.php\n    HomepagePresenter.php\n```\n\nDÅÃ­ve to bylo jinak. Å ablony a presentery mÄl dÅÃ­ve sandbox na stejnÃ© Ãºrovni, ale souhlasÃ­m s tÃ­m, Å¾e Å¡ablony patÅÃ­ spÃ­Å¡e (a pomÄrnÄ Ãºzce) k presenterÅ¯m. Je tedy nutnÃ© zmÃ­nit, Å¾e dÃ­ky tomu jak je Nette framework chytrÃ½, tak je v podstatÄ jedno jakou bude mÃ­t projekt strukturu, protoÅ¾e bude fungovat vÅ¡e. Za chvÃ­li se vÅ¡ak zaÄne vÅ¡e nabalovat a bude tÅeba neustÃ¡le udrÅ¾ovat poÅÃ¡dek. Proto je nutnÃ© mÃ­t jasno i v takto triviÃ¡lnÃ­ch otÃ¡zkÃ¡ch.\n\nKomponenty se od presenterÅ¯ tolik neliÅ¡Ã­. SpÃ­Å¡e naopak. Komponenty mohou bÃ½t pomÄrnÄ komplikovanÃ©, ale rÃ¡d je dÄlÃ¡m co nejjednoduÅ¡Å¡Ã­. U komponent pouÅ¾Ã­vÃ¡m nÄkolik nÃ¡vrhÅ¯. Pro velmi triviÃ¡lnÃ­ komponenty zachovÃ¡vÃ¡m plochou strukturu:\n\n```\nContactForm/\n    ContactForm.latte\n    ContactForm.php\n```\n\nJe totiÅ¾ otrava vytvÃ¡Ået spoustu zbyteÄnÃ½ch sloÅ¾ek. To platÃ­ i pro soubory. Proto jsou generovanÃ© tovÃ¡rniÄky vÅ¾dy k nalezenÃ­ pod tÅÃ­dou komponenty v jednom a tom samÃ©m souboru. Jakmile se vÅ¡ak komponenta jen o troÅ¡ku zkomplikuje, automaticky pÅepÃ­nÃ¡m do klasickÃ©ho presenterovÃ©ho stylu:\n\n```\nContactForm/\n    providers/\n        IContactFormTemplateProvider.php\n    templates/\n        ContactForm.latte\n    ContactForm.php\n```\n\nDobÅe, zÃ¡kladnÃ­ stavebnÃ­ kameny jsou poloÅ¾eny. Co by vÅ¡ak mÄlo bÃ½t okolo. A kde jsou vlastnÄ poloÅ¾eny? Inu pojÄme na to opÄt postupnÄ.\n\n# Supercore vÄci\n\nFakt nevÃ­m jak to nazvat jinak, protoÅ¾e ke core zÃ¡leÅ¾itostem se jeÅ¡tÄ dostanu. O co tedy jde? JednÃ¡ se o ÄÃ¡sti aplikace, kterÃ© tvoÅÃ­ to nejzÃ¡kladnÄjÅ¡Ã­ jÃ¡dro. JÃ¡dro, na kterÃ© je pak moÅ¾nÃ© napojovat dalÅ¡Ã­ vÄci. Tuto ÄÃ¡st aplikace nechÃ¡vÃ¡m ve sloÅ¾ce `app`:\n\n```\napp/\n    AdminModule/\n        presenters/ <-- viz prvnÃ­ ukÃ¡zka (je zde jen BasePresenter)\n    AuthModule/\n        presenters/ <-- jen SignPresenter\n    FrontModule/\n        presenters/ <-- viz prvnÃ­ ukÃ¡zka (Base, Contact, Homepage)\n    components/\n        ContactForm/ <-- takÃ© uÅ¾ znÃ¡me (viz druhÃ¡ ukÃ¡zka)\n        AControl.php\n    config/\n    extensions/\n    bootstrap.php\n```\n\nJak je vidÄt, tak vÅ¡echny moduly obsahujÃ­ jen kritickÃ½ zÃ¡klad. Å½Ã¡dnÃ© dalÅ¡Ã­ presentery. Tak kde je zbytek? Zbytek se nechÃ¡zÃ­ v rootu aplikace, konkrÃ©tnÄ ve sloÅ¾kÃ¡ch `custom` a `src`. Je celkem jedno jakÃ½ je nÃ¡zev tÄchto sloÅ¾ek, vtip je v tom nÄjakÃ© mÃ­t a vÅ¡e sem pÅesunout. DÅ¯vod proÄ jsou dvÄ je prostÃ½. ZatÃ­mco v `src` jsou ÄÃ¡sti aplikace, kterÃ© tvoÅÃ­ jÃ¡dro (tedy spoustu funkÄnosti), v `custom` jsou velmi podobnÃ© ÄÃ¡stÃ­ aplikace, bez kterÃ½ch lze vÅ¡ak Å¾Ã­t. PÅ¯vodnÃ­ myÅ¡lenka byla takovÃ¡, Å¾e se pak custom sloÅ¾ka zruÅ¡Ã­ a vÅ¡e v nÃ­ se velmi elegantnÄ rozpadne na composer balÃ­Äky. ObÄ sloÅ¾ky jsou vÅ¡ak strukturÃ¡lnÄ stejnÃ©, proto budeu ÅeÅ¡it jen `custom`.\n\n# Business logika\n\nOk, to jsem takÃ© nazval pÄknÄ debilnÄ. AlespoÅ vÅ¡ak vysvÄtlÃ­m jednu dÅ¯leÅ¾itou vÄc, se kterou jsem v zaÄÃ¡tcÃ­ch bojoval a kterou je potÅeba se odnauÄit. Sadbox vÅ¾dy totiÅ¾ vedl k takovÃ©to podobnÃ© struktuÅe:\n\n```\napp/\n    config/\n    forms/\n    presenters/\n    model/\n    router/\n```\n\nTo nikomu nemÃ¡m za zlÃ©. Je to jednoduÅ¡e pochopitelnÃ© a to je dobÅe. TakÅ¾e s tÃ­m vlastnÄ spÃ­Å¡ souhlasÃ­m. ProblÃ©m je v tom, Å¾e u rozrÅ¯stajÃ­cÃ­ aplikace uÅ¾ to zaÄÃ­nÃ¡ bÃ½t dÄsnÃ½ mrdnÃ­k, protoÅ¾e `presenters` najednou obsahujÃ­ vÅ¡echny presentery a `model` obsahuje vÅ¡echnu logiku. Ale v tom aby se prase vyznalo. Tento efekt se nechÃ¡ troÅ¡ku umÃ­rnit rozdÄlenÃ­m aplikace na moduly a s tÃ­m uÅ¾ jsem byl (a vlastnÄ do dneÅ¡ka jsem) spokojen. JenÅ¾e co s tÃ­m modelem? Fuck model! RozdÄlte si model podle logickÃ½ch ÄÃ¡stÃ­, kterÃ© na sobÄ nejsou zÃ¡vislÃ© a vÅ¡e oddÄlte. TÅeba takto:\n\n```\ncustom/\n    Error/\n    Eshop/\n    Files/\n    Notes/\n    Pages/\n```\n\nJak Åekl kdosi moudrÃ½, existujÃ­ dva nejnÃ¡roÄnÄjÅ¡Ã­ problÃ©my v programovÃ¡nÃ­ a to sprÃ¡vnÃ¡ invalidace cache a pojmenovÃ¡vÃ¡nÃ­ vÄcÃ­. Naprosot s tÃ­m souhlasÃ­m. Moc mi to nejde, ale mÄlo by bÃ½t zÅejmÃ©, Å¾e jsou zde ÄÃ¡sti, kterÃ© se starajÃ­ (vÃ½hradnÄ) o eshop, o poznÃ¡mky, strÃ¡nky atd. PojÄme se tedy zanoÅit hloubÄji:\n\n```\nPages/\n    AdminModule/\n        presenters/\n            CategoryPresenter.php\n            PagePresenter.php\n    components/\n        PageForm/\n        PagesGrid/\n    DI/\n    FrontModule/\n    listeners/\n    Category.php\n    Page.php\n    ...\n```\n\nA voilÃ , mÃ¡me tu zase strukturu sloÅ¾ky `app`. Nebo alespoÅ jejÃ­ obdobu. A v tom je sÃ­la toho nÃ¡vrhu. MÄlo by uÅ¾ teÄ bÃ½t jasnÄjÅ¡Ã­, proÄ jsou v `app` prÃ¡vÄ ty vÄci co tam jsou. CelÃ©m vÅ¾dy bylo mÃ­t v systÃ©mu mÃ­sta, kterÃ© obsahujÃ­ velmi podobnÃ© vÄci, ale nic dalÅ¡Ã­ho. DrobnÃ© niance se zde najdou, to je jasnÃ©, ale zÃ¡klad zÅ¯stÃ¡vÃ¡. JenÅ¾e jak to sakra funguje?\n\n# Jak to sakra funguje\n\nPrÃ¡vÄ teÄ je ten sprÃ¡vnÃ½ Äas [proklikat si celÃ½ systÃ©m](https://github.com/mrtnzlml/CMS-lite). Je zÅejmÃ©, Å¾e uÅ¾ je to troÅ¡ku komplikovanÄjÅ¡Ã­ a samo od sebe to fungovat nemÅ¯Å¾e (ani to nenÃ­ Å¾Ã¡doucÃ­). ZkuÅ¡enÄjÅ¡Ã­ uÅ¾ tuÅ¡Ã­, Å¾e celÃ© kouzlo je ve sloÅ¾ce `DI`. Zde je tedy mÃ© dalÅ¡Ã­ doporuÄenÃ­. AÅ¾ rozsekÃ¡te aplikaci do komponent, udÄlejte to samÃ© s funkcionalitou. A vÃ­te co, udÄlejte to se vÅ¡Ã­m co spolu nÄjak logicky souvisÃ­. Proto jsem do sloÅ¾ky `custom/Pages` umÃ­stil vÅ¡e co patÅÃ­ ke strÃ¡nkÃ¡m. Komponenty, doctrine entity, servisnÃ­ tÅÃ­dy, fasÃ¡dy, ale takÃ© presentery. ProstÄ vÅ¡echno. DÄlejte to tak dlouho, dokud v `app` nezÅ¯stane nic.\n\nTento zpÅ¯sob vÅ¡ak s sebou nese celou Åadu ÃºskalÃ­. PrvnÄ je to komplikovanÃ©. A pak je tÅeba vÅ¡e napojit. ExistujÃ­ dva zpÅ¯soby, kterÃ© mi pÅijou v poÅÃ¡dku. PrvnÃ­ je ponÄkud agresivnÃ­, ale jednoduchÃ½. VychÃ¡zÃ­ vlastnÄ z myÅ¡lenky [Flame\\Modules](http://flame-org.github.io/Modules/). NapÃ­Å¡ete si nÄjakÃ© rozÅ¡Ã­ÅenÃ­, kterÃ© bude implementovat nÄjakÃ½ interface. TÅeba `IFaviconProvider`. Pak je tÅeba mÃ­t (prÃ¡vÄ v supercore) rozÅ¡Ã­ÅenÃ­, kterÃ© takovÃ½ interface najde a pÅi vytvÃ¡ÅenÃ­ DIC zpracuje. HodnÄ toho vyuÅ¾Ã­vajÃ­ Å¡ablony (`custom/Versatile/DI/VersatileExtension.php`). NebezpeÄÃ­ je vÅ¡ak v tom, Å¾e se to prostÄ stane jakmile pÅidÃ¡te toto rozÅ¡Ã­ÅenÃ­ do aplikace. NenÃ­ zde moc rozumnÃ¡ moÅ¾nost jak tÅeba rozÅ¡Ã­ÅenÃ­ deaktivovat. A jeÅ¡tÄ komplikovanÄjÅ¡Ã­ je pak pÅi vytvÃ¡ÅenÃ­ DIC pÅeba automaticky spustit nÄjakÃ½ SQL dotaz.\n\nProto je zde druhÃ½ zpÅ¯sob (kterÃ½ jsem poÅÃ¡dnÄ nestihl dodÄlat). VyuÅ¾Ã­vÃ¡ jej napÅÃ­klad `\\Eshop\\DI\\EshopExtension`. To implementuje `ICustomExtension`. JinÃ© (supercore) rozÅ¡Ã­ÅenÃ­ se toho chytÃ­ a udÄlÃ¡ pouze to, Å¾e jej zobrazÃ­ v administraci vÄetnÄ potÅebnÃ½ch odadteÄnÃ½ch informacÃ­. StejnÄ tak jako to dÄlÃ¡ WordPress. UÅ¾ivatel zde mÅ¯Å¾e kliknutÃ­m modul nainstalovat, coÅ¾ se pÅesnÄ u eshopu dÄje a spustÃ­ se tak celÃ¡ Åada komplikovanÃ½ch operacÃ­, kterÃ© tento modul nainstalujÃ­. JednÃ¡ se zejmÃ©na o pÅedÃ¡nÃ­ URL adres, nastavenÃ­ ACL, zaregistrovÃ¡nÃ­ poloÅ¾ek do menu atd. ElegantnÄ se tak celÃ½ systÃ©m pÅipravÃ­ a dÃ­ky tomu, Å¾e dojde k registraci do DIC, nenÃ­ dÅ¯vod k tomu, aby se s narÅ¯stajÃ­cÃ­m poÄtem modulÅ¯ systÃ©m nÄjak dusil. ProstÄ se chovÃ¡ jako jakÃ¡koliv jinÃ¡ velkÃ¡ aplikace. Nic nenÃ­ hledÃ¡no a ÅeÅ¡eno dynamicky za bÄhu aplikace. DruhÃ½ krok je uÅ¾ pak dodÄlat instalace modulÅ¯ ze vzdÃ¡lenÃ©ho repozitÃ¡Åe, ale to uÅ¾ je jednoduchÃ½ Ãºkol.\n\nA je to. ElegantnÃ­ instalaÄnÃ­ systÃ©m pluginÅ¯ pro vaÅ¡Ã­ Nette aplikaci.\n\n# DalÅ¡Ã­ zajÃ­mavÃ© vlastnosti systÃ©mu\n\nTakÅ¾e to mÃ¡me peckovou strukturu aplikace, kterou je velmi jednoduchÃ© udrÅ¾ovat a rozÅ¡Ã­Åovat + automatickou registraci modulÅ¯ (pluginÅ¯ chcete-li). A to jsem teprve na zaÄÃ¡tku. Proto uÅ¾ jen bodovÄ vypÃ­chnu a pÅipomenu nÄkterÃ© zajÃ­mavÃ© vÄci, kterÃ© vÅ¡em dÃ¡vÃ¡m k dispozici.\n\n1. KaÅ¾dÃ© rozÅ¡Ã­ÅenÃ­ je v Nette nutnÃ© registrovat do konfiguraÄnÃ­ho souboru. To by s tÃ­m ale neÅ¡lo nÄlat takovÃ© Å¡vÃ­ky. Proto jsem napsal `\\App\\Extensions\\CoreExtension`, kterÃ© to dÄlÃ¡ automaticky. NenÃ­ to zrovna ukÃ¡zka ÄistÃ©ho kÃ³du, ale svÅ¯j ÃºÄel to plnÃ­ dobÅe. UÅ¾ touto vlastnostÃ­ jste nÄkolik mil pÅed konkurencÃ­... (-:\n2. VzpomÃ­nÃ¡te si na [HierarchickÃ½ router](hierarchicky-router)? Tak i ten je zde v celÃ© svÃ© krÃ¡se. Jen pro pÅipomenutÃ­. Je moÅ¾nÃ© mÄnit si URL adresy jak chcete, nikdy nepÅijdete o ty starÃ© a vÃ½konovÄ to nestojÃ­ nic navÃ­c.\n3. [DynamickÃ© routovÃ¡nÃ­ URL adres](dynamicke-routovani-url-adres). To je dalÅ¡Ã­ fiÄura, kterou jen tak nÄkdo nemÃ¡. Nebo snad ano? PouÅ¾ijte ji. Vybudujte nÄco ÃºÅ¾asnÃ©ho.\n4. A co takhle Fixtures. [VzpomÃ­nÃ¡te si](fixnete-si-databazi)?\n5. VÅ¡imnÄte si, Å¾e hodnÄ rozÅ¡Ã­ÅenÃ­ obsahuje jakÃ©si providery. Je tak moÅ¾nÃ© jednoduÅ¡e tÅeba zamÄnit Å¡ablonu kontaktnÃ­ho formulÃ¡Åe, nebo navigace. ObdobnÄ mohou rozÅ¡Ã­ÅenÃ­ registrovat vlastnÃ­ styly i javascriptovÃ© skripty.\n6. K dispozici jsou Doctrine migrace. K dispozici jsou v nabÃ­dce pÅes `php index.php`. SamotnÃ© migraÄnÃ­ skripty jsou pak v `migrations` sloÅ¾ce.\n\nJe toho fakt ranec, co pouÅ¡tÃ­m na obdiv i kritiku. Proto jeÅ¡tÄ struÄnÄji pÅehled technologiÃ­, kterÃ© v projektu naleznete:\n\n- grunt + grunt-contrib packages (concat, copy, cssmin, less, uglify)\n- bootstrap, nette.ajax.js, nette-forms, jquery, selectize\n- nette (application, caching, DI, finder, forms, robot-loader, security, utils, ...)\n- latte, tracy, texy, webloader, minify, faker, secured-links\n- kdyby (doctrine, annotations, console, events, translation, autowired, monolog, ...)\n- doctrine (data-fixtures, migrations, ORM, ...)\n- testbench, nette\\tester\n\nA to jsem zde jeÅ¡tÄ nenapsal vÅ¡e. MrknÄte se na nÃ¡hled, nejednÃ¡ se jen o nÄjakÃ½ marnÃ½ pokus:\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/9b3c176d-4884-45c5-95c3-53cac2999d0f/admin.png)\n\n# Instalace systÃ©mu\n\nBohuÅ¾el jsem nevychytal vÅ¡echny mouchy, pÅ¯lka vÄcÃ­ zÅ¯stala nerozdÄlÃ¡na a celÃ½ materiÃ¡l je spÃ­Å¡e pro inspiraci. Pokud by si to vÅ¡ak nÄkdo chtÄl rozjet, dÃ¡vÃ¡m k dispozici takÃ© ponÄkud sloÅ¾itÄjÅ¡Ã­ nÃ¡vod na instalaci (viz readme):\n\n- Nainstalujte si [GIT](http://git-scm.com/)\n- `git clone https://github.com/mrtnzlml/CMS-lite.git`\n- Nainstalujte si [Composer](http://getcomposer.org/)\n- `composer install` (natÃ¡hne PHP zÃ¡vislosti)\n- VytvoÅte si prÃ¡zdnou MySQL databÃ¡zi\n- PÅejmenujte `config.local.neon.dist` (v app/config) na `config.local.neon` a nastavte pÅÃ­stupovÃ© Ãºdaje k databÃ¡zi\n- `php index.php orm:schema-tool:create` (vygeneruje strukturu databÃ¡ze)\n- `php index.php cms:fixtures:load` (naÅ¡te zÃ¡kladnÃ­ data, teÄ uÅ¾ by mÄla aplikace fungovat)\n- Nainstalujte si [Bower](http://bower.io/), popÅ. [npm](https://www.npmjs.com/) je-li tÅeba\n- `bower install` (fetches JS dependencies)\n- Nainstalujte si [Grunt](http://gruntjs.com/)\n- `grunt` (pÅipravÃ­ JS, CSS, fonts, ...)\n\nKaÅ¾dÃ½ pÅÃ­kaz by mÄl bÃ½t spouÅ¡tÄn z rootu webu. VÃ½jimku tvoÅÃ­ pÅÃ­kazy obsahujÃ­cÃ­ `index.php`. Ty je tÅeba spouÅ¡tÄt ze sloÅ¾ky `www`. To dÃ¡ asi rozum.\n\nA na zÃ¡vÄr. Jsem realista. NepÅedpoklÃ¡dÃ¡m, Å¾e by se projektu nÄkdo doprovolnÄ chytil a nakopl mÄ, aby v nÄm pokraÄoval aktivnÄji. ZatÃ­m jej spÃ­Å¡ nikdo nepochopil a musel jsem si protrpÄt i pÃ¡r klackÅ¯ pod nohama. Proto jej dÃ¡vÃ¡m k dispozici jako inspiraci pro ostatnÃ­. NemÃ¡m strach, Å¾e by si to nÄkdo pÅivlastnil, nebo na tom zbohatl. To si spousta firem (lidÃ­) neuvÄdomuje a tak nikdo radÄji nezveÅejÅuje nic. ZveÅejÅujte, pÅedÃ¡vejte znalosti - nepÅijdete o nÄ. NicmÃ©nÄ v rÃ¡mci gentlemanskÃ© dohody bych rÃ¡d vymÄnil svÃ© pÅedanÃ© znalosti za hvÄzdiÄku u tohoto novÃ©ho repozitÃ¡Åe. Nic vÃ­c neÅ¾Ã¡dÃ¡m.\n\n<iframe src=\"https://ghbtns.com/github-btn.html?user=mrtnzlml&repo=CMS-lite&type=star&count=true&size=large\" frameborder=\"0\" scrolling=\"0\" width=\"160px\" height=\"30px\"></iframe>\n\nPokornÄ dÄkuji.","frontmatter":"id: 8474ac83-61b4-4afe-b0d5-ca7ba4e62501\ntimestamp: 1444573684000\ntitle: JeÅ¡tÄ lepÅ¡Ã­ struktura Nette aplikace\nslug: jeste-lepsi-struktura-nette-aplikace"},{"attributes":{"id":"00ea90cf-cd53-48f0-959a-bb1a2264344d","timestamp":1443869668000,"title":"Crazy JavaScript PDF generator","slug":"crazy-javascript-pdf-generator"},"body":"Kdysi mi nÄkdo Åekl, Å¾e sprÃ¡vnÃ½ programÃ¡tor by mÄl bÃ½t tak troÅ¡ku dÄvka pro vÅ¡echno. NestaÄÃ­ jen umÄt PHP. NestaÄÃ­ jen umÄt JavaScript. S tÃ­mto nÃ¡zorem jsem od samÃ©ho zaÄÃ¡tku souhlasil. OstatnÄ je to jeden z dÅ¯vodÅ¯, proÄ se obÄas zajÃ­mÃ¡m i o vÄci, kterÃ© v nejbliÅ¾Å¡Ã­ dobÄ nevyuÅ¾iju a zase tolik jim nerozumÃ­m (takÃ© to podle toho pak vypadÃ¡). Jednou z takovÃ½ch vÄcÃ­ je [React](http://facebook.github.io/react/index.html). NedÃ¡vno jsem si hrÃ¡l takÃ© s [PhantomJS](http://phantomjs.org/) a kdyÅ¾ uÅ¾ jsme u toho, tak ani [NodeJS mi nenÃ­ cizÃ­](http://www.slideshare.net/MartinZlmal/nodejs-42314371). A co se stane, kdyÅ¾ se jednoho veÄera rozhodnete spojit vÅ¡echno dohromady? NÄco Å¡Ã­lenÃ©ho... (-:\n\n# KrÃ¡tkÃ© seznÃ¡menÃ­\n\nVzhledem k tomu, Å¾e tento blog byl vÅ¾dy zacÃ­len spÃ­Å¡e na zaÄÃ¡teÄnÃ­ky, bylo by vhodnÃ© jednotlivÃ© projekty krÃ¡tce pÅiblÃ­Å¾it.\n\n[React](http://facebook.github.io/react/index.html) vytvoÅenÃ½ Facebookem se sÃ¡m prezentuje jako knihovna pro stavÄnÃ­ uÅ¾ivatelskÃ½ch rozhranÃ­. V sekci [Why React?](http://facebook.github.io/react/docs/why-react.html) se lze vÅ¡ak doÄÃ­st zajÃ­mavÄjÅ¡Ã­ skorodefinici: *\"Many people choose to think of React as the **V** in MVC.\"* CelÃ¡ myÅ¡lenka Reactu je postavenÃ¡ na komponentÃ¡ch. A jÃ¡ mÃ¡m [komponenty rÃ¡d](https://doc.nette.org/cs/components). MyslÃ­m si, Å¾e je to dobrÃ½ smÄr jak udrÅ¾et v aplikaci chaos na rozumnÃ© Ãºrovni. NeÅ¾ abych to zde vÅ¡ak dlouhosÃ¡hle popisoval, doporuÄuji pojet si [Getting Started](http://facebook.github.io/react/docs/getting-started.html).\n\n[PhantomJS](http://phantomjs.org/) je oproti tomu ÃºplnÄ nÄco jinÃ©ho. JednÃ¡ se o tzv. \"headless browser\" - velmi volnÄ pÅeloÅ¾eno prohlÃ­Å¾eÄ bez grafickÃ©ho rozhranÃ­. Je to takovÃ© Safari bez Safari. ProhlÃ­Å¾eÄ, kterÃ©mu ÃºplnÄ chybÃ­ (jinak pomalÃ¡) renderovacÃ­ vrstva. NejednÃ¡ se tedy o prohlÃ­Å¾eÄ, kterÃ½ by chtÄl kdokoliv pouÅ¾Ã­vat, ale spÃ­Å¡e o nÃ¡stroj, kterÃ½m lze skuteÄnÃ½ prohlÃ­Å¾eÄ nahradit tÅeba na serveru. PrimÃ¡rnÄ se tedy pouÅ¾Ã­vÃ¡ pro testovÃ¡nÃ­ aplikacÃ­, ve fantazii se vÅ¡ak meze nekladou. Je tak moÅ¾nÃ© napÅ. tvoÅit screeny webÅ¯, nebo spouÅ¡tÄt plnÄ JavaScriptovÃ© strÃ¡nky a koukat se na jejich obsah. JÃ¡ jej zaÄal pouÅ¾Ã­vat kvÅ¯li rychlosti (oproti Seleniu), v tomto konkrÃ©tnÃ­m pÅÃ­padÄ vÅ¡ak slouÅ¾Ã­ prÃ¡vÄ pro spuÅ¡tÄnÃ­ ÄistÄ JavaScriptovÃ© strÃ¡nky.\n\nNo a koneÄnÄ [NodeJS](https://nodejs.org/en/) - JavaScriptovÃ© prostÅedÃ­ pro server. ZatÃ­mco ostatnÃ­ jej vyuÅ¾Ã­vajÃ­ pro tvorbu aplikacÃ­, kterÃ© jsou napsÃ¡ny v JS prakticky kompletnÄ (server,  klient), jÃ¡ jej vyuÅ¾Ã­val kvÅ¯li svÃ½m vlastnostem spÃ­Å¡e na rychlou komunikaci elektronika - server. To se mi na JS lÃ­bÃ­. Dnes se nechajÃ­ napsat i velmi sloÅ¾itÃ© vÄci pomocÃ­ pÃ¡r ÅÃ¡dek, ale tÅeba prÃ¡ce s Äasem a datumem bude vÅ¾dy oser... (-:\n\n# NÄco Å¡Ã­lenÃ©ho\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/e80e305e-8431-4c0e-9c79-5db761c22608/199aff3.jpg)\n\nTo je tak kdyÅ¾ se sejde nÄkolik vÄcÃ­ najednou. VytvoÅit si faktury, otestovat aplikaci, neustÃ¡lÃ½ pÅirozenÃ½ hlad po NodeJS. A pak to pÅiÅ¡lo. Co si tak vytvoÅit [generÃ¡tor faktur](https://github.com/mrtnzlml/js-invoice-generator), kterÃ½ bude samotnou fakturu stavÄt pomocÃ­ Reactu, server bude tvoÅit NodeJS a PDF budu generovat tak, Å¾e si tu strÃ¡nku otevÅu v PhantomJS a uloÅ¾Ã­m (ÄÃ­mÅ¾ snad zÃ­skÃ¡m velmi pÅesnÃ½ vÃ½sledek)? SamozÅejmÄ jsem se pokukoval i po jiÅ¾ hotovÃ½ch ÅeÅ¡enÃ­ch jako je tÅeba [Fakturiod](https://www.fakturoid.cz/). A kdybych byl jen o kousek lÃ­nÄjÅ¡Ã­, tak bych asi nic takovÃ©ho netvoÅil. Nakonec jsem se vÅ¡ak pouze inspiroval [peckovÃ½m designem jednÃ© z jejich faktur](https://www.fakturoid.cz/blog/2015/08/25/nova-verejna-stranka-faktury) (protoÅ¾e k designu mÃ¡m asi tak daleko jako k Praze z Azor) s tÃ­m, Å¾e jÃ­ komplet napÃ­Å¡u znova pomocÃ­ komponent v Reactu a budu se modlit, aby to nikoho z Fakturoidu (aÅ¾ si tento ÄlÃ¡nek pÅeÄte) neurazilo... (-:\n\nPrvnÃ­m krokem bylo [naÅ¡kytnout samotnÃ½ server](https://github.com/mrtnzlml/js-invoice-generator/blob/master/run.js). Zde bylo potÅeba nastartovat jeÅ¡tÄ samotnÃ½ PhantomJS pomocÃ­ [child_process](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options). Mohl jsem to udÄlaj jakkoliv jinak, ale takovou opiÄÃ¡rnu jsem si vÅ¾dy chtÄl vyzkouÅ¡et. SamotnÃ¡ pÅÃ­prava strÃ¡nky pro PhantomJS je pak [jednoduchÃ¡](https://github.com/mrtnzlml/js-invoice-generator/blob/master/invoice.js). TakÅ¾e server funguje a PhantomJS bÄÅ¾Ã­. Co dÃ¡l?\n\nChtÄlo by to nÄco co by Å¡lo renderovat. TakovÃ© minimÃ¡lnÃ­ rozumnÃ© HTML mÅ¯Å¾e vypadat fakt jednoduÅ¡e:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\"/>\n    <script src=\"react.js\"></script>\n</head>\n<body>\n    <div id=\"react-root\"></div>\n    <script src=\"build/index.js\"></script>\n</body>\n</html>\n```\n\nKde `react.js` je samotnÃ½ React a `build/index.js` obsahuje definici komponent:\n\n```jsx\nvar LikeButton = React.createClass({\n\trender: function () {\n\t\treturn (\n\t\t\t<button>LikeButton</button>\n\t\t);\n\t}\n});\n\nReact.render(<LikeButton />, document.getElementById('react-root'));\n```\n\nJe to fakt minimÃ¡lnÃ­, ale funkÄnÃ­ kÃ³d, takÅ¾e si to mÅ¯Å¾e vyzkouÅ¡et kaÅ¾dÃ½. PÅechozÃ­ zÃ¡pis samozÅejmÄ nenÃ­ JavaScript, ale [JSX](https://facebook.github.io/jsx/), takÅ¾e je tÅeba jej jeÅ¡tÄ pÅeloÅ¾it (`jsx --watch src/ build/`). VÃ½slednÃ½ kÃ³d je pak v tomto konkrÃ©tnÃ­m jednoduchÃ©m pÅÃ­padÄ velmi podobnÃ½:\n\n```javascript\nvar LikeButton = React.createClass({displayName: \"LikeButton\",\n\trender: function () {\n\t\treturn (\n\t\t\tReact.createElement(\"button\", null, \"LikeButton\")\n\t\t);\n\t}\n});\n\nReact.render(React.createElement(LikeButton, null), document.getElementById('react-root'));\n```\n\nPokud se vrÃ¡tÃ­m zpÄt k faktuÅe, tak jejÃ­ HTML [je takÃ© velmi jednoduchÃ©](https://github.com/mrtnzlml/js-invoice-generator/blob/master/invoice.html) a celÃ¡ sranda se odehrÃ¡vÃ¡ [zde](https://github.com/mrtnzlml/js-invoice-generator/blob/master/src/react-invoice.js). Zde jsem si takÃ© schvÃ¡lnÄ chtÄl vyzkouÅ¡et, jak reÃ¡lnÄ funguje [Inline Styles](https://facebook.github.io/react/tips/inline-styles.html). SamotnÃ¡ faktura je tedy tvoÅena pouze krÃ¡tkÃ½m HTML a pÄknou kopou JavaScriptu. Å½Ã¡dnÃ© CSS. Abych Åekl pravdu, tak se mi s tÃ­m moc dobÅe nepracuje, ale to je dÃ¡no spÃ­Å¡e tÃ­m, Å¾e zase aÅ¾ tolik CSS nehovÃ­m a proto bylo mÃ­sty komplikovanÃ© pÅemÃ½Å¡let nad tÃ­m jak funguje React a zÃ¡roveÅ drÅ¾et v hlavÄ to, jak mÃ¡ faktura nakonec vypadat. Koukal jsem se, jak se to ÅeÅ¡Ã­ na jinÃ½ch webech jedoucÃ­ch na Reactu a asi se o zase aÅ¾ tak nepouÅ¾Ã­vÃ¡. Ale konec naÅÃ­kÃ¡nÃ­. PodÃ­vejte se [na vÃ½sledek](https://github.com/mrtnzlml/js-invoice-generator/blob/master/invoice.pdf).\n\n# QR kÃ³d\n\nJeÅ¡tÄ bych se rÃ¡d zamÄÅil na samotnÃ½ QR kÃ³d, kterÃ½ je na faktuÅe ([komponenta](https://github.com/mrtnzlml/js-invoice-generator/blob/master/src/react-invoice.js#L246-L269)). PouÅ¾il jsem [stejnou knihovnu](https://larsjung.de/jquery-qrcode/), kterou pouÅ¾Ã­vÃ¡m zde na blogu v zÃ¡hlavÃ­ (nejlepÅ¡Ã­). ProtoÅ¾e se jednÃ¡ o QR, tak se nedÃ¡ Äekat, Å¾e by obsahoval nÄco sloÅ¾itÃ©ho ([podrobnÃ½ popis formÃ¡tu](http://qr-platba.cz/pro-vyvojare/specifikace-formatu/)):\n\n```\nSPD*1.0*ACC:CZ4101000000123456789101+KOMBCZPPXXX*AM:2750.00*CC:CZK*MSG:PLATBA FAKTURY 2015-0001*X-VS:20150001\n```\n\nJe to takovÃ½ hloupÃ½ [RESP](http://redis.io/topics/protocol). ÅetÄzec zaÄÃ­nÃ¡ oznaÄenÃ­m formÃ¡tu `SPD*1.0*` a nÃ¡sleduje vÅ¾dy vÃ½Äet poloÅ¾ek `klÃ­Ä:hodnota*`, kterÃ© chceme do QR kÃ³du dostat. PovinnÃ½ je pouze `ACC`, coÅ¾ je IBAN, popÅ. IBAN+BIC. NÃ¡sleduje ÄÃ¡stka, mÄna, zprÃ¡va pro pÅÃ­jemce a variabilnÃ­ symbol.\n\nTakÅ¾e Ãºkol nÄkdy na pÅÃ­Å¡tÄ. PÅepsat **V** u blogu do Reactu? (-:","frontmatter":"id: 00ea90cf-cd53-48f0-959a-bb1a2264344d\ntimestamp: 1443869668000\ntitle: Crazy JavaScript PDF generator\nslug: crazy-javascript-pdf-generator"},{"attributes":{"id":"23efba3e-e7da-496e-a75f-5e9f736879e6","timestamp":1440940560000,"title":"NÃ¡vrhovÃ½ vzor Legacy code","slug":"navrhovy-vzor-legacy-code"},"body":"Asi kaÅ¾dÃ½ se k tomuto nÃ¡vrovÃ©mu vzoru jednou dostane. ZatÃ­m jsem vÅ¾dy takovou prÃ¡ci striktnÄ odmÃ­tal, ale tentokrÃ¡t Å¡lo o jinou situaci a svolil jsem k poklesu od OOP frameworku ke Å¡pagetÄ. AÄkoliv mÃ¡ pojem \"legacy code\" celou Åadu definic, jÃ¡ osobnÄ jej chÃ¡pu jako kÃ³d, kterÃ½ je prostÄ starÃ½. VhodnÄjÅ¡Ã­ by vÅ¡ak bylo asi ÅÃ­ci, Å¾e se jednÃ¡ o kÃ³d se kterÃ½m teÄ musÃ­m pracovat, ale nenapsal jsem ho. ZÅ¯staÅme vÅ¡ak u prvnÃ­ definice. Zde platÃ­, Å¾e (stejnÄ tak jako jakÃ½koliv jinÃ½ navrhovÃ½ vzor) obsahuje celou Åadu opakujÃ­cÃ­ch se poznÃ¡vacÃ­ch prvkÅ¯.\n\nNapÅÃ­klad mezi vÃ½vojÃ¡Åi panuje pozoruhodnÃ¡ pasivita. Nikdo se nepostavÃ­ na zadnÃ­ a nepÅijde s nÄÄÃ­m novÃ½m. NemyslÃ­m novou fiÄuru, ale nÄjakou systÃ©movou vÄc. Na druhou stranu se to dÃ¡ pochopit. Je to ta nejdraÅ¾Å¡Ã­ zmÄna a zase aÅ¾ tak niÄemu to z vnÄjÅ¡Ã­ho pohledu neprospÄje. NepovaÅ¾uji to za sprÃ¡vnÃ½ pÅÃ­stup, ale takovÃ¡ je asi realita. BohuÅ¾el se pak Äasto argumentuje (totÃ¡lnÃ­) zpÄtnou kompatibilitou. DÃ¡le tento nÃ¡vrhovÃ½ vzor pÅedpoklÃ¡dÃ¡, Å¾e se pouÅ¾Ã­vÃ¡ nÄjakÃ½ vypÃ­ÄenÃ½ verzovacÃ­ systÃ©m a nikoho to netrÃ¡pÃ­ (viz pozoruhodnÃ¡ pasivita vÃ½vojÃ¡ÅÅ¯). O coding standardu ani nemluvÄ a globÃ¡lnÃ­ prostor je samozÅejmostÃ­. No a pak samozÅejmÄ klasickÃ© vÄci jako RY pÅÃ­stup (opak [DRY](https://cs.wikipedia.org/wiki/Don%27t_repeat_yourself) - Don't Repeat Yourself), Å¡ablonovacÃ­ systÃ©m (pokud vÅ¯bec existuje) je stejnÄ debilnÃ­ jako ten verzovacÃ­ a v neposlednÃ­ ÅadÄ neotestovanÃ½/neotestovatelnÃ½ kÃ³d.\n\nV mÃ©m konkrÃ©tnÃ­m pÅÃ­padÄ jsem se musel potÃ½kat jeÅ¡tÄ s nÄÄÃ­m. Jednak jsem se musel poprat s opaÄnÃ½m smÃ½Å¡lenÃ­m vÃ½vojÃ¡ÅÅ¯. TakÅ¾e napÅÃ­klad zatÃ­mco vÅ¡ude se direktiva `magic_quotes_gpc` [vypÃ­nala](http://php.vrana.cz/vypnuti-magic_quotes_gpc.php), zde se globÃ¡lnÄ zapÃ­nala atd. No a pak samotnÃ½ globÃ¡lnÃ­ prostor to je pÃ­sniÄka sama pro sebe. Myslel jsem si, Å¾e to aÅ¾ takovÃ½ problÃ©m nebude, ale neuvÄdomoval jsem si, co to vlastnÄ obnÃ¡Å¡Ã­. Pokud stejnÄ jako jÃ¡ nikdy globÃ¡lnÃ­ promÄnnÃ© nepouÅ¾Ã­vÃ¡te, zde je pÅÃ­klad na pÅipomenutÃ­.\n\nJakÃ¡koliv globÃ¡lnÃ­ promÄnnÃ¡, kterÃ¡ nenÃ­ nijak dÃ¡le zabalenÃ¡ je automaticky globÃ¡lnÃ­:\n\n```php\n$x = 'y';\ndump($GLOBALS['x']); //y\n```\n\nTo dÃ¡vÃ¡ smysl a nenÃ­ na tom nic divnÃ©ho. Za mnohem vÄtÅ¡Ã­ problÃ©m vÅ¡ak povaÅ¾uji fakt, Å¾e to funguje i obrÃ¡cenÄ:\n\n```php\n$GLOBALS['x'] = 'y';\ndump($x); //y\n```\n\nProÄ je to problÃ©m? ProtoÅ¾e druhÃ½ pÅÃ­pad je striktnÄ zÃ¡vislÃ½ na pouÅ¾itÃ©m kontextu. TÃ­m pÃ¡dem tato pseudoglobÃ¡lnÃ­ promÄnnÃ¡ funguje ve Å¡pagetÄ, ale kdyÅ¾ chcete takovÃ½ kÃ³d jinak uspoÅÃ¡dat a nedej boÅ¾e jeÅ¡tÄ obalit, tak je to problÃ©m. Vzhledem k tomu, Å¾e bylo mÃ½m Ãºkolem integrovat [Nette Framework](https://nette.org/) do takovÃ©ho systÃ©mu, musel jsem troÅ¡ku upravit start aplikace a tÃ­m jsem hodnÄ vÄcÃ­ rozbil.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/d6ca5ea3-5c1a-43af-8488-73d4fae836f1/strip-wordpress-550-finalenglish.jpg)\n\n# Jak jsem na to Å¡el\n\nNebudu zde rozebÃ­rat pÅesnÄ dÅ¯vody proÄ jsem to udÄlal tak a ne jinak. VÄtÅ¡inou mÄ to k tomu ÅeÅ¡enÃ­ jasnÄ dovedlo, protoÅ¾e dÄlat to jinak by bylo nesmyslnÄ sloÅ¾itÃ© - pokud vÅ¯bec moÅ¾nÃ©. Berte to jako inspiraci. MyslÃ­m si, Å¾e se to bude jeÅ¡tÄ nekomu hodit, protoÅ¾e je tento nÃ¡vrhovÃ½ vzor rozÅ¡Ã­Åen vÃ­ce, neÅ¾ si pÅiznÃ¡vÃ¡m.\n\nV prvnÃ­ ÅadÄ bylo nutnÃ© do projektu pÅidÃ¡vat zÃ¡vislosti pomocÃ­ Composeru. Jednak se tak projekt troÅ¡ku vyÄistil od zbyteÄnÄ nakopÃ­rovanÃ½ch knihoven a potom jsem mohl s vÃ½hodou pouÅ¾Ã­vat jednotlivÃ© Nette komponenty. Pak je velmi dÅ¯leÅ¾itÃ© celÃ½ projekt poznat trochu hloubÄji. Na to nenÃ­ vÅ¾dy Äas. ZaÄal jsem proto tak, Å¾e jsem napojil na systÃ©m jednoduÅ¡Å¡Ã­ ÄÃ¡sti frameworku jako je tÅeba Tracy, Cache, Utils, RobotLoader atd. S tÃ­m se samozÅejmÄ svezlo nÄkolik Ãºprav, jako je napÅÃ­klad zapnutÃ­ error reportingu nebo vypnutÃ­ zahazovÃ¡nÃ­ vÃ½jimek a dalÅ¡Ã­ podobnÃ© hovadiny. SamotnÃ© zapnutÃ­ error reportingu je neskuteÄnÃ½ oser, protoÅ¾e se tÃ­m ukÃ¡Å¾e, jak se danÃ¡ aplikace hroznÄ sype ([vÅ¡ak jsou to jen notices](https://media.giphy.com/media/11c2hRHwmvgFOg/giphy.gif), co se mÅ¯Å¾e stÃ¡t). KaÅ¾dopÃ¡dnÄ uÅ¾ tÅeba pouÅ¾itÃ­m cache na sprÃ¡vnÃ½ch mÃ­stech a Ãºpravou nÄkolik funkcÃ­ se aplikace rozjela daleko rychleji.\n\nDalÅ¡Ã­ Äeho bych se rÃ¡d zbavil jsou `mysql_*` funkce a nahradil je PDO. To nenÃ­ ÃºplnÄ jednoduchÃ½ Ãºkol a poÅÃ¡d je to \"in progress\". Zde jsem zvolil NDB, ale nejsem si tou volbou vÅ¯bec jistÃ½. No a pak nastal Äas, kdy je tÅeba pÅistoupit k hlubÅ¡Ã­ integraci frameworku. To jsem chtÄl udÄlat jako Å¡tÃ­t pÅed celou aplikacÃ­. TÃ­m jsem samozÅejmÄ polovinu vÄcÃ­ rozbil, ale naÅ¡tÄstÃ­ uÅ¾ to tak nÄjak funguje. Co to vlastnÄ znamenÃ¡? V prvnÃ­ ÅadÄ napÅÃ­klad startovÃ¡nÃ­ aplikace z jednoho mÃ­sta (coÅ¾ nebylo normÃ¡lnÃ­ a rozbilo to vÅ¡echno) a potom napsÃ¡nÃ­ LegacyPresenteru, kterÃ½ se starÃ¡ o zpÄtnou kompatibilitu se starÃ½m jÃ¡drem (coÅ¾ zase rozbilo pseudoglobÃ¡lnÃ­ kontext). No a potom bylo potÅeba vyÅeÅ¡it takÃ© routovÃ¡nÃ­. To vÅ¡ak ve vÃ½sledku bylo velmi triviÃ¡lnÃ­ a staÄilo napsat nÄkolik zÃ¡kladnÃ­ch pravidel, za kterÃ¡ se schovÃ¡ jakÃ¡koliv URL v systÃ©mu. JednoduchÃ¡ implementace takovÃ©ho presenteru mÅ¯Å¾e vypadat tÅeba takto:\n\n```php\n//dodateÄnÃ¡ nastavenÃ­ ve startup()\n\npublic function renderDefault($fakePath = NULL)\n{\n    if (NULL !== $fakePath) {\n        if (file_exists($file = SITE_ROOT . DS . $fakePath)) {\n            require $file; //bacha na Local File Inclusion\n        }\n    }\n}\n```\n\nTato implementace vlastnÄ kopÃ­ruje pÅ¯vodnÃ­ chovÃ¡nÃ­. NapsÃ¡nÃ­ routovacÃ­ch pravidel je fakt jednoduchÃ©:\n\n```php\n$router[] = new Route('<? index(\\.html?|\\.php)>', 'Legacy:default', Route::ONE_WAY);\n$router[] = new Route('[<fakePath .+>]', 'Legacy:default');\n```\n\nMnohem zajÃ­mavÄjÅ¡Ã­ je vÅ¡ak implementace Smarty Å¡ablonovacÃ­ho systÃ©mu. K tomu je vhodnÃ© napsat si vlastnÃ­ implementaci render metody objektu [Template](https://api.nette.org/2.3.5/source-Bridges.ApplicationLatte.Template.php.html). Zde se rozhodne, jak se bude Å¡ablona vykreslovat. V mÃ©m pÅÃ­padÄ jestli pomocÃ­ Latte, nebo Smarty. Je samozÅejmÄ nutnÃ© upravit i TemplateFactory hlavnÄ kvÅ¯li [tÃ©to ÅÃ¡dce](https://api.nette.org/2.3.5/source-Bridges.ApplicationLatte.TemplateFactory.php.html#56).\n\n# Å patnÃ© poÅadÃ­\n\nVÅ¡echno Å¡patnÄ. TeÄ vÃ­m, Å¾e jsem mÄl zaÄÃ­t obrÃ¡cenÄ a nejdÅÃ­ve si na to napsat testy. AlespoÅ dodateÄnÄ (klasicky po prvnÃ­m problÃ©mu) jsem si na to jeÅ¡tÄ napsal jednoduchÃ© scÃ©nÃ¡Åe pro akceptaÄnÃ­ testy v Codeception. A pak jsem si mÄl stÃ¡t za svÃ½m a neÃºstupnÄ odstranit vÅ¡echny weird vÄci, protoÅ¾e ty prostÄ nejsou kompatibilnÃ­ s modernÃ­m frameworkem a zpÅ¯sobuje to jen nepÅedvÃ­datelnÃ© problÃ©my.\n\nJsou vlastnÄ nÄjakÃ© vÃ½hody takovÃ© integrace frameworku do starÃ©ho systÃ©mu? Vyjma tÄch klasickÃ½ch, kterÃ© pÅinÃ¡Å¡Ã­ framework sÃ¡m o sobÄ, je teÄ moÅ¾nÃ© psÃ¡t novÃ© vÄci Nette stylem a vyuÅ¾Ã­vat vÅ¡echny moÅ¾nosti (hlavnÄ asi DIC a Latte). Se starÃ½m kÃ³dem se kromÄ vyÄiÅ¡tÄnÃ­ od hovadin vlastnÄ zase aÅ¾ tak dÃ­t nic nebude a je moÅ¾nÃ© jej pÅepisovat do novÃ©ho kabÃ¡tku. OsobnÄ bych nejradÄji odstranil globÃ¡lnÃ­ promÄnnÃ© ÃºplnÄ, to je ale na tak velkÃ©m projektu skoro nemoÅ¾nÃ©.\n\nNo a pak je zde psychickÃ¡ strÃ¡nka vÄci. Jak se budou tvÃ¡Åit ostatnÃ­ vÃ½vojÃ¡Åi aÅ¾ zjistÃ­, Å¾e framework nemÃ¡ jen pomÃ¡hat, ale i omezovat, aby programÃ¡tor nedÄlal pÃ­Äoviny? Najednou je programovÃ¡nÃ­ nÃ¡roÄnÄjÅ¡Ã­. Spousta objektÅ¯, Å¾Ã¡dnÃ½ `$GLOBALS`, dependency injection... SkvÄlÃ© vÅ¡ak je, Å¾e mÃ¡ takovÃ½to Ãºkol i svÃ¡ nespornÃ¡ pozitiva. JedinÄ zde budete pracovat s frameworkem skuteÄnÄ po ÄÃ¡stech a tÃ­m spÃ­Å¡ se nechajÃ­ jednotlivÃ© ÄÃ¡sti poznat.\n\nMÃ¡te takÃ© nÄjakÃ© zkuÅ¡enosti s legacy projektem?","frontmatter":"id: 23efba3e-e7da-496e-a75f-5e9f736879e6\ntimestamp: 1440940560000\ntitle: NÃ¡vrhovÃ½ vzor Legacy code\nslug: navrhovy-vzor-legacy-code"},{"attributes":{"id":"90a00b9f-47cd-4a93-bb59-13a8e1893ab3","timestamp":1436618301000,"title":"HierarchickÃ½ router","slug":"hierarchicky-router"},"body":"Tento ÄlÃ¡nek volnÄ navazuje na [pÅedchozÃ­](dynamicke-routovani-url-adres). Zde jsem ukÃ¡zal, jak vytvoÅit routy tak, aby bylo moÅ¾nÃ© mÃ­t zcela libovolnou adresu a routovat ji na jakoukoliv akci v aplikaci. Dnes to troÅ¡ku vylepÅ¡Ã­me. PÅidÃ¡me totiÅ¾ dalÅ¡Ã­ dva poÅ¾adavky s tÃ­m, Å¾e prvnÃ­ je ten dÅ¯leÅ¾itÄjÅ¡Ã­:\n\n1. KdyÅ¾ se zmÄnÃ­ adresa (napÅÃ­klad ÄlÃ¡nku), musÃ­ se starÃ¡ pÅesmÄrovat na novou. To se mÅ¯Å¾e dÃ­t opakovanÄ a nechceme mÃ­t mnohonÃ¡sobnÃ½ redirect. Redirect mÅ¯Å¾e bÃ½t maximÃ¡lnÄ jeden a to pro jakoukoliv starou (i pÅ¯vodnÃ­) adresu.\n2. Bude moÅ¾nÃ© vytvoÅit jakoukoliv adresu, kterÃ¡ bude pÅesmÄrovÃ¡vat na jakoukoliv jinou.\n\nDruhÃ½ poÅ¾adavek je vlastnÄ jen speciÃ¡lnÃ­ (zjednoduÅ¡enÃ½) pÅÃ­pad toho prvnÃ­ho. Co to znamenÃ¡? PodÃ­vejte se na nÃ¡sledujÃ­cÃ­ ASCII art. Obsahuje pÄt obrÃ¡zkÅ¯ znÃ¡zorÅujÃ­cÃ­ch postupnÃ© zmÄny pÅesmÄrovÃ¡nÃ­ pÅi pÅidÃ¡vÃ¡nÃ­ dalÅ¡Ã­ch pÅesmÄrovÃ¡nÃ­. Nebudeme jiÅ¾ ÅeÅ¡it routovÃ¡nÃ­ na akce v presenterech, ale prÃ¡ci se samotnÃ½m URL a jak se bude chovat, kdyÅ¾ se pÅesmÄruje aktuÃ¡lnÃ­ cÃ­lovÃ© URL jinam.\n\n```\nURL-1\n\n\nURL-1 ----> URL-2\n\n\nURL-1 -------.\n             v\nURL-2 ----> URL-3\n\n\nURL-1 -------.\n             v\nURL-2 ----> URL-4 <---- URL-3\n\n\nURL-1 -------.\n             v\nURL-2 ----> URL-5 <---- URL-3\n             ^\n             '----------URL-4\n```\n\nSlovy ÅeÄeno, nesmÃ­ se **nikdy** stÃ¡t, aby byla cesta od starÃ© adresy k novÃ© delÅ¡Ã­, neÅ¾ je jeden skok. Je zÅejmÃ©, Å¾e pÅ¯vodnÄ byla pouze URL-1. Ta byla pÅesmÄrovÃ¡na na URL-2. V okamÅ¾ik, kdy se pÅesmÄruje URL-2 na URL-3, pÅ¯vodnÃ­ propojenÃ­ mezi URL-1 a URL-2 se musÃ­ ÃºplnÄ zruÅ¡it a namÄrovat URL-1 aÅ¾ na URL-3. A tak to pokraÄuje dÃ¡le. Z toho je zÅejmÃ©, Å¾e nazÃ½vat tento router hierarchickÃ½m je ponÄkud zavÃ¡dÄjÃ­cÃ­, protoÅ¾e ve skuteÄnosti se udrÅ¾uje takovÃ½ obrÃ¡cenÃ½ les. S troÅ¡kou reÅ¾ie na zaÄÃ¡tku je to vÅ¡ak vhodnÄjÅ¡Ã­, protoÅ¾e se tÃ­m hezky mÄnÃ­ prÅ¯bÄÅ¾nÄ struktura redirectÅ¯ a je to lepÅ¡Ã­, neÅ¾ napÅÃ­klad takto, to je asi vÅ¡em jasnÃ©:\n\n```\nURL-1\n '--> URL-2\n       '--> URL-3\n             '--> URL-4\n                   '--> URL-5\n```\n\n# PÅepoÄet odkazÅ¯\n\nV tom to vlastnÄ celÃ© vÄzÃ­. Je nutnÃ© pÅi vytvÃ¡ÅenÃ­ redirectu najÃ­t vÅ¡echny starÃ© odkazy a zmÄnit je na novÃ©. VrÃ¡tÃ­me se vÅ¡ak k pÅedchozÃ­mu ÄlÃ¡nku a troÅ¡ku vylepÅ¡Ã­me cache. Tedy cache zÅ¯stane stejnÃ¡, ale vylepÅ¡Ã­me jejÃ­ invalidaci nÃ¡sledovnÄ:\n\n```php\n$destination = $this->cache->load($path, function (& $dependencies) use ($path) {\n    $destination = $this->em->getRepository(Url::class)->findOneBy(['fakePath' => $path]);\n    if ($destination === NULL) {\n        $this->monolog->addError(sprintf('Cannot find route for path %s', $path));\n        return NULL;\n    }\n    $dependencies = [Nette\\Caching\\Cache::TAGS => ['route/' . $destination->getId()]];\n    return $destination;\n});\n```\n\nPÅidÃ¡me ke kaÅ¾dÃ©mu uloÅ¾enÃ­ cache tzv. tag, dÃ­ky ÄemuÅ¾ bude moÅ¾nÃ© pozdÄji tuto cache snadno najÃ­t a zruÅ¡it jejÃ­ platnost. V closure je nutnÃ© dÄlat to takto pÅes dependencies promÄnnou. Jsou samozÅejmÄ i jinÃ© moÅ¾nosti [jak cache zneplatnit](http://doc.nette.org/cs/2.3/caching#toc-expirace-a-invalidace), ale tento zpÅ¯sob povaÅ¾uji za dostateÄnÃ½. HodÃ­ se to proto, Å¾e aÅ¾ budeme upravovat starÃ© odkazy, tak je (a pouze je) smaÅ¾eme z cache, ÄÃ­mÅ¾ zapÅÃ­ÄinÃ­me jejich opÄtovnÃ© vytvoÅenÃ­, tentokrÃ¡t vÅ¡ak s jinÃ½m pÅesmÄrovÃ¡nÃ­m.\n\nDo entity URL adresy je tÅeba pÅidat dalÅ¡Ã­ vlastnost - odkaz na sebe.\n\n```php\n/**\n * @ORM\\ManyToOne(targetEntity=\"Url\", cascade={\"persist\"})\n * @ORM\\JoinColumn(referencedColumnName=\"id\", onDelete=\"SET NULL\")\n * @var Url\n */\nprotected $redirectTo = NULL;\n```\n\nTento odkaz vyuÅ¾ijeme v routeru, kterÃ½ v pÅÃ­padÄ existence tohoto odkazu bude pracovat prÃ¡vÄ s nÃ­m. V opaÄnÃ©m pÅÃ­padÄ router pracuje normÃ¡lnÄ viz pÅedchozÃ­ ÄlÃ¡nek. To uÅ¾ tu nebudu ÅeÅ¡it. SpÃ­Å¡e se podÃ­vÃ¡me na samotnou tvorbu redirectÅ¯. Tu mÃ¡m umÃ­stÄnou v `@RedirectFacade::createRedirect`. Tato metoda pÅijÃ­mÃ¡ dvÄ ÄÃ­sla (ID) a to odkud se pÅesmÄrovÃ¡vÃ¡ a kam se pÅesmÄrovÃ¡vÃ¡. BohuÅ¾el nenÃ­ moÅ¾nÃ© pÅedat si parciÃ¡lnÃ­ entitu, protoÅ¾e nenÃ­ moÅ¾nÃ© ji naplnit a odeslat do databÃ¡ze (vlastnost Doctrine). No a pÅedÃ¡vat celÃ© entity je zbyteÄnÃ©. Proto jen ID. ZjednoduÅ¡enÄ vypadÃ¡ tato metoda takto:\n\n```php\npublic function createRedirect($from, $to)\n{\n    $this->em->transactional(function () use ($from, $to) {\n        /** @var Url $oldLink */\n        foreach ($this->em->getRepository(Url::class)->findBy([\n            'redirectTo' => $from\n        ]) as $oldLink) {\n            $oldLink->setRedirectTo($this->em->getPartialReference(Url::class, $to));\n            $this->cache->clean([Nette\\Caching\\Cache::TAGS => ['route/' . $oldLink->getId()]]);\n        }\n\n        /** @var Url $from */\n        $from = $this->em->find(Url::class, $from);\n        $from->setRedirectTo($this->em->getPartialReference(Url::class, $to));\n        $this->em->flush();\n        $this->cache->clean([Nette\\Caching\\Cache::TAGS => ['route/' . $from->getId()]]);\n    });\n}\n```\n\nDalo by se to optimalizovat z hlediska databÃ¡zovÃ½ch dotazÅ¯ lÃ©pe, ale jednak to nenÃ­ (zatÃ­m nebylo) potÅeba a pak se hodÃ­ tahat si jednotlivÃ© zÃ¡znamy postupnÄ prÃ¡vÄ kvÅ¯li invalidace cache. Jak to funguje? V prvnÃ­ ÄÃ¡sti si vytÃ¡hnu vÅ¡echny odkazy, kterÃ© ukazujÃ­ na odkaz ze kterÃ©ho budu pÅesmÄrovÃ¡vat. To jsou ty starÃ©, kterÃ© je tÅeba zruÅ¡it. Ty jsou nahrazeny odkazy na novÃ© strÃ¡nky a jejich cache je samozÅejmÄ smazÃ¡na. To je ta dÅ¯leÅ¾itÄjÅ¡Ã­ ÄÃ¡st. V druhÃ© polovinÄ dojde jen k uloÅ¾enÃ­ novÃ©ho pÅesmÄrovÃ¡nÃ­ a opÄt smazÃ¡nÃ­ cache pro tento odkaz. Za povÅ¡imnutÃ­ stojÃ­ funkce `getPartialReference` o kterÃ© jsem psal uÅ¾ minule. Je to funkce, kterÃ¡ nevracÃ­ celou entitu, ale pouze nenaplnÄnou entitu s ID (parciÃ¡lnÃ­). Nic vÃ­c totiÅ¾ dost Äasto nenÃ­ potÅeba...\n\n# DruhÃ¡ ÄÃ¡st ÅeÅ¡enÃ­\n\nDruhÃ¡ ÄÃ¡st ÅeÅ¡enÃ­ je jiÅ¾ jednoduchÃ¡.\n\n> Bude moÅ¾nÃ© vytvoÅit jakoukoliv adresu, kterÃ¡ bude pÅesmÄrovÃ¡vat na jakoukoliv jinou.\n\nStaÄÃ­ entitÄ povolit, aby mohlo bÃ½t NULL `destination` (tedy internÃ­ odkaz na presenter a akci) a `internalId`. To jsou totiÅ¾ informace, kterÃ© nejsou znÃ¡mÃ© a pro tetno ÃºÄel jsou i zbyteÄnÃ©. DÅ¯leÅ¾itÃ¡ je totiÅ¾ jen cesta a odkaz na cÃ­lovou URL. A to je vlastnÄ vÅ¡e, protoÅ¾e vÅ¡e ostatnÃ­ uÅ¾ pÅirozenÄ umÃ­ dÅÃ­ve napsanÃ½ router.\n\nJeÅ¡tÄ jsem nedÃ¡vno narazil na zajÃ­mavÃ½ router, kterÃ½ umoÅ¾Åoval smazat jakoukoliv ÄÃ¡st cesty a on si jÃ­ domyslel a pÅesmÄroval. Nekoukal jsem ÃºplnÄ do stÅev, ale asi tak, Å¾e vyhledÃ¡ pÅesnÄ znÄnÃ­ cesty a kdyÅ¾ ji nemÅ¯Å¾e najÃ­t, tak poloÅ¾Ã­ nÄjakÃ½ LIKE% dotaz ve snaze alespoÅ ji odhadnout. To uÅ¾ ale povaÅ¾uji za zbyteÄnÃ© a nevyuÅ¾itelnÃ©. OsobnÄ se mi jeÅ¡tÄ vÃ­ce lÃ­bÃ­ routy, kterÃ© jsou na ÄSFD. ObsahujÃ­ totiÅ¾ pÅirozenÃ½ zkracovaÄ adres viz tyto dvÄ adresy, kterÃ© jsou stejnÃ©:\n\n```\nhttp://www.csfd.cz/film/5911\nhttp://www.csfd.cz/film/5911-tenkrat-na-zapade/\n```\n\nVyzkouÅ¡ejte [si](http://www.csfd.cz/film/5911) [to](http://www.csfd.cz/film/5911-tenkrat-na-zapade/). PrvnÃ­ pÅesmÄruje na druhou. BohuÅ¾el ne vÅ¡em se ÄÃ­sla v adresÃ¡ch lÃ­bÃ­ (i kdyÅ¾ podle mÃ©ho nÃ¡zoru bezdpÅ¯vodnÄ).\n\nAÄkoliv budu na routeru dÃ¡le pracovat, tak k nÄmu zatÃ­m nemÃ¡m v plÃ¡nu dalÅ¡Ã­ komentÃ¡Åe. Pokud tedy nÄco nenÃ­ jasnÃ©, teÄ je ta sprÃ¡vnÃ¡ chvÃ­le zeptat se. Jo mimochodem. PÅedchozÃ­ router uÅ¾ nenÃ­ obyÄejnou implementacÃ­ `\\Nette\\Application\\IRouter`, ale dÄdÃ­ od `\\Nette\\Application\\Routers\\RouteList`. Je to z toho dÅ¯vodu, Å¾e se bez toho Kdyby\\Console [nerozjede](https://github.com/Kdyby/Console/blob/master/src/Kdyby/Console/CliRouter.php#L124). Pokud bych tedy nepouÅ¾Ã­val tuto knihovnu, tak by to nebyl problÃ©m. SamotnÃ¡ quick'n'dirty Ãºprava spoÄÃ­vÃ¡ v pÅidÃ¡nÃ­ tohoto kÃ³du na zaÄÃ¡tek match metody:\n\n```php\n/** @var Application\\IRouter $route */\nforeach ($this as $route) {\n    /** @var Application\\Request $applicationRequest */\n    $applicationRequest = $route->match($httpRequest);\n    if ($applicationRequest !== NULL) {\n        return $applicationRequest;\n    }\n}\n```\n\nA to je vÅ¡e...","frontmatter":"id: 90a00b9f-47cd-4a93-bb59-13a8e1893ab3\ntimestamp: 1436618301000\ntitle: HierarchickÃ½ router\nslug: hierarchicky-router"},{"attributes":{"id":"66b21edb-b3c2-426c-a1f4-80b189562720","timestamp":1436098908000,"title":"DynamickÃ© routovÃ¡nÃ­ URL adres","slug":"dynamicke-routovani-url-adres"},"body":"A kdyÅ¾ ÅÃ­kÃ¡m dynamickÃ©, tak tÃ­m myslÃ­m opravdu kompletnÄ. JinÃ½mi slovy to znamenÃ¡, Å¾e chceme jakoukoliv cestu za domÃ©nou pÅeloÅ¾it na jakÃ½koliv internÃ­ poÅ¾adavek ([Application\\Request](http://api.nette.org/2.3.3/Nette.Application.Request.html)). Kousek routovacÃ­ tabulky tedy mÅ¯Å¾e vypadat nÃ¡sledovnÄ:\n\n```\n/\t\t\t\t\t\t=> \tFront:Homepage:default\n/neco.html\t\t\t\t=> \tFront:Page:default\n/neco-jineho-8\t\t\t=> \tFront:Page:default(id=56)\n/neco/treba/takoveho\t=> \tFront:Page:default(id=96)\n/a/b/c/d/e/f \t\t\t=> \tAdmin:Dashboard:new\n...\n```\n\nTÃ­m jsem doufÃ¡m dostateÄnÄ pÅesnÄ nastÃ­nil zadÃ¡nÃ­ a od toho se odvÃ­jejÃ­cÃ­ poÅ¾adavky na router. V URL mÅ¯Å¾e pÅijÃ­t jakÃ¡koliv cesta a aplikace ji musÃ­ umÄt sprÃ¡vnÄ naroutovat.\n\n# Jak funguje routovÃ¡nÃ­ v Nette\n\nPokusÃ­m se to vysvÄtlit troÅ¡ku jinak neÅ¾ je to vysvÄtlovÃ¡no jinde. VÄtÅ¡inou se totiÅ¾ doÄtete, jak pracovat s [tÅÃ­dou Route](http://api.nette.org/2.3.3/Nette.Application.Routers.Route.html). To je samozÅejmÄ sprÃ¡vnÄ, protoÅ¾e takto se routovÃ¡nÃ­ v Nette aplikacÃ­ch naprosto bÄÅ¾nÄ dÄlÃ¡. NicmÃ©nÄ pro tento ÃºÄel mi pÅijde vhodnÄjÅ¡Ã­ napsat si router vlastnÃ­ - o nÄco hloupÄjÅ¡Ã­, ale pasujÃ­cÃ­ na toto zadÃ¡nÃ­ lÃ©pe. Proto opustÃ­me tuto tÅÃ­du a budeme se radÄji zajÃ­mat o [IRouter interface](http://api.nette.org/2.3.3/Nette.Application.IRouter.html).\n\nTento interface mÃ¡ dvÄ metody - `match` a `constructUrl`. Metoda `match` mÃ¡ za Ãºkol pÅeloÅ¾it HTTP request na jiÅ¾ zmÃ­nÄnÃ½ [Application\\Request](http://api.nette.org/2.3.3/Nette.Application.Request.html). JednÃ¡ se tedy o pÅeklad ve smÄru Å¡ipky viz zadÃ¡nÃ­. PodÃ­vejte se, jak to ÅeÅ¡Ã­ tÅÃ­da Route, v tomto konkrÃ©tnÃ­m prÃ­padÄ vÅ¡ak bude potÅeba pracovat s databÃ¡zÃ­ a napsat si jinou logiku. Oproti tomu metoda `constructUrl` mÃ¡ pÅesnÄ opaÄnÃ½ Ãºkol. PÅeklÃ¡dÃ¡ pÅÃ­chozÃ­ Application request na (absolutnÃ­) URL adresu.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/9ab04acb-febc-4901-aaad-5b554f77e529/vystrizek.png)\n\nZatÃ­mco Route dokÃ¡Å¾e tyto pÅeklady sestavit pouze z masky routy a namapovat je na internÃ­ odkazy v aplikaci, v tomto pÅÃ­padÄ bude nutnÃ¡ databÃ¡ze. Po chvÃ­li laborovÃ¡nÃ­ a asi pÄti variantÃ¡ch jsem nakonec udÄlal Ãºstupek a zvolil tu nejjednoduÅ¡Å¡Ã­ (ale dostateÄnou) variantu viz obrÃ¡zek. StaÄÃ­ si tedy uchovÃ¡vat cestu, internÃ­ odkaz a internÃ­ ID. To je vÅ¡e, co by mÄlo bÃ½t potÅeba.\n\n# KonkrÃ©tnÃ­ ÅeÅ¡enÃ­\n\nNechci sem dÃ¡vat celÃ© zdrojÃ¡ky (jen ÃºtrÅ¾ky), protoÅ¾e je tento ÄlÃ¡nek hlavnÄ o teorii. Proto se podÃ­vejte na nÄjakou jinou jiÅ¾ hotovou implementaci IRouteru, tÅeba na [StaticRouter](https://github.com/nextras/static-router/blob/master/src/StaticRouter.php). OstatnÄ s dobrÃ½m nÃ¡padem je samotnÃ¡ implementace jednoduchÃ¡. V `match` si staÄÃ­ podle cesty vytÃ¡hnout internÃ­ odkaz tÅeba nÄjak takto:\n\n```php\n$destination = $this->em->getRepository(Url::class)->findOneBy(['fakePath' => $path]);\nif ($destination === NULL) {\n\t$this->monolog->addError(sprintf('Cannot find route for path %s', $path));\n\treturn NULL;\n}\n```\n\nSamozÅejmÄ je fajn si tu cestu jeÅ¡tÄ pÅed dotazem nÄjak upravit, podle toho jak jÃ­ mÃ¡te v databÃ¡zi. JÃ¡ je tam mÃ¡m tÅeba bez ÃºvodnÃ­ho lomÃ­tka. Tato cesta odkazu smÄrem do aplikace je velmi jednoduchÃ¡, protoÅ¾e pouze na zÃ¡kladÄ cesty v URL si natÃ¡hnete vÅ¡e, co je potÅeba a uÅ¾ vlastnÄ jen sestavÃ­me Application request:\n\n```php\n$params = $httpRequest->getQuery();\n$params['action'] = $action;\nif ($destination[$internalDestination]) {\n\t$params['id'] = $destination[$internalDestination];\n}\nreturn new Application\\Request(\n\t$presenter,\n\t$httpRequest->getMethod(),\n\t$params,\n\t$httpRequest->getPost(),\n\t$httpRequest->getFiles(),\n\t[Application\\Request::SECURED => $httpRequest->isSecured()]\n);\n```\n\nNedÄlÃ¡ se zde nic zvlÃ¡Å¡tnÃ­ho, prostÄ postavÃ­m request a pÅibalÃ­m do nÄj cÃ­lovÃ½ presenter (ten jsem si vytÃ¡hl z databÃ¡ze), do parametrÅ¯ je tÅeba pÅidat action a volitelnÄ jeÅ¡tÄ to internÃ­ ID. Stanovil jsem si takovou konvenci, Å¾e aplikace bude pouÅ¾Ã­vat internÄ pouze ID. ProÄ? PrvnÄ je to velmi jednoduchÃ© a neÅeÅ¡Ã­m Å¾Ã¡dnÃ© hovadiny. NepotÅebuji nÄco jako je slug, protoÅ¾e jsou adresy konstruovÃ¡ny jinak. TakovÃ© je zadÃ¡nÃ­. No a potom prÃ¡ce s ID je i z hlediska Doctrine [velmi pÅirozenÃ©](http://forum.nette.org/cs/23681-kdyby-doctrine-use-cases-best-practices-a-jak-vam-to-dava-smysl#p159096). Jeden pÅÃ­klad za vÅ¡echny. MÃ¡m aplikaci rozsekanou na komponenty co nejvÃ­ce to Å¡lo. Je jich fakt hodnÄ - strÃ¡nku vlastnÄ jen sklÃ¡dÃ¡m z komponent. To povaÅ¾uji za skvÄlÃ½ nÃ¡vrh, ale vede k tomu, Å¾e se jednolivÃ© komponenty od sebe aplikaÄnÄ troÅ¡ku vzdalujÃ­. No a kdyÅ¾ bych chtÄl tÅeba v kaÅ¾dÃ© komponentÄ vytÃ¡hnout nÄco stejnÃ©ho, tak pÅi nevhodnÃ©m dotazu by Doctrine poloÅ¾ila dva stejnÃ© dotazy na databÃ¡zi. Je vÅ¡ak moÅ¾nÃ© vyuÅ¾Ã­t ID a zeptat se jinak. Porovnejte nÃ¡sledujÃ­cÃ­ dotazy:\n\n```php\n$this->em->getRepository(File::class)->findOneBy(['id' => 930]);\n$this->em->getRepository(File::class)->find(930);\n```\n\nNejsou stejnÃ©. Ten druhÃ½ mÅ¯Å¾ete pouÅ¾Ã­t kolikrÃ¡t chcete, ale pokud jiÅ¾ Doctrine znÃ¡ odpovÄÄ, tak se nezeptÃ¡ databÃ¡ze znova. ObdobnÄ (jeÅ¡tÄ lÃ©pe) to funguje s `getPartialReference`. TakÅ¾e bod pro prÃ¡ci pouze s ID.\n\nJe tÅeba zajistit i obrÃ¡cenÃ½ pÅeklad. Ten mi vÅ¾dy pÅijde nÃ¡roÄnÄjÅ¡Ã­ a mÄl jsem vymyÅ¡lenÃ½ fakt pÄknÃ½ nÃ¡pad, ale neumÄl jsem ho zrealizovat. Ale dÃ­ky tomu, Å¾e se vyuÅ¾Ã­vÃ¡ internÄ jen ID, mohu jej uloÅ¾it jako tÅetÃ­ sloupec do databÃ¡ze a je moÅ¾nÃ© jednoduÅ¡e patÅiÄnou cestu dohledat. Je vÅ¡ak tÅeba uvÄdomit si, Å¾e existujÃ­ ÄtyÅi moÅ¾nÃ© stavy:\n\n1. Odkaz nemÃ¡ Å¾Ã¡dnÃ© ID, hledÃ¡me cestu pouze podle destination (napÅ. Front:Homepage:default - ID je volitelnÃ©)\n2. Odkaz mÃ¡ ID, hledÃ¡me cestu podle destination a ID\n3. Odkaz sice mÃ¡ ID, ale v databÃ¡zi takovÃ½ zÃ¡znam nenÃ­, v tom pÅÃ­padÄ pouÅ¾Ã­t prvnÃ­ bod a parametry povÄsit do query odkazu (fallback)\n4. Odkaz se nepodaÅilo najÃ­t ani odhadnout v dalÅ¡Ã­ch bodech, routa vracÃ­ NULL\n\nProÄ vracÃ­ v poslednÃ­m bodÄ routa NULL? UrÄitÄ vÃ­te, Å¾e pÅi definovÃ¡nÃ­ klasickÃ©ho routeru zÃ¡leÅ¾Ã­ na poÅadÃ­ rout. Je to prÃ¡vÄ kvÅ¯li tomuto. KdyÅ¾ prvnÃ­ routa nedokÃ¡Å¾e pÅÃ­chozÃ­ poÅ¾adavek sestavit, vracÃ­ NULL a na ÅadÄ je dalÅ¡Ã­ routa, kterÃ¡ se o to pokusÃ­. PoÅ¾adavek propadne dÃ¡le. Tak to jde aÅ¾ do okamÅ¾iku, kdy uÅ¾ nenÃ­ Å¾Ã¡dnÃ¡ jinÃ¡ moÅ¾nost a to je chybovÃ½ stav (404). Vzhledem k tomu, Å¾e pouÅ¾Ã­vÃ¡m pouze tento vlastnÃ­ router, tak NULL je ekvivalent prÃ¡vÄ k chybÄ 404. Ale napsal jsem si to tak, aby routa byla hodnÄ Å¾ravÃ¡ a pokusila se za kaÅ¾dou cenu nÄjakÃ½ odkaz postavit. TÅetÃ­ bod je navÃ­c stav, kterÃ½ se loguje.\n\nJeÅ¡tÄ je dÅ¯leÅ¾itÃ¡ poslednÃ­ vÄc. Jak jsem psal dÅÃ­ve, tak se v `match` metodÄ pÅidÃ¡vÃ¡ do Application requestu action a volitelnÄ ID. V metodÄ `constructUrl` je potÅeba zvolit opaÄnÃ½ pÅÃ­stup a zase je zruÅ¡it. Nedostanou se tak do URL. V tom je celÃ© kouzlo takto volnÄ definovanÃ½ch adres. Na vstupu pÅidÃ¡m nÄjakÃ© informace navÃ­c (action, ID), s nima aplikace pracuje a na vÃ½stupu je zase z adresy odstranÃ­m.\n\n# Bez cache ani rÃ¡nu\n\nZatÃ­m je to docela fajn. By default mÃ¡m v databÃ¡zi nÄjakÃ© zÃ¡kladnÃ­ odkazy a napÅÃ­klad pÅi uklÃ¡dÃ¡nÃ­ ÄlÃ¡nku vytvoÅÃ­m odkazy novÃ©, kterÃ© se pak naroutujÃ­. VÃ½hoda je jednak v tom, Å¾e mohu mÃ­t ÃºplnÄ libovolnÃ© adresy. Mohu je ale takÃ© rÅ¯znÄ upravovat podle nastavenÃ­ a pak co je asi nejdÅ¯leÅ¾itÄjÅ¡Ã­, adresy jsou unikÃ¡tnÃ­ a kdyÅ¾ ji u ÄlÃ¡nku zmÄnÃ­m, mohu starou (automaticky) pÅesmÄrovat na novou. Po tomto musÃ­ SEO odbornÃ­ci Ävachtat blahem... :)\n\nProblÃ©m je vÅ¡ak v tom, Å¾e je to spousta prÃ¡ce a bez nÄjakÃ© alespoÅ jednoduchÃ© cache by to bylo moc komplikovanÃ©, skoro aÅ¾ nepouÅ¾itelnÃ©. ÅeÅ¡enÃ­ je vÅ¡ak jednoduchÃ©. ProstÄ cache pouÅ¾ijeme:\n\n```php\n$destination = $this->cache->load($path, function (& $dependencies) use ($path) {\n\t$destination = $this->em->getRepository(Url::class)->findOneBy(['fakePath' => $path]);\n\tif ($destination === NULL) {\n\t\t$this->monolog->addError(sprintf('Cannot find route for path %s', $path));\n\t\treturn NULL;\n\t}\n\treturn [$destination->destination => $destination->internalId];\n});\nif ($destination === NULL) {\n\treturn NULL;\n}\n```\n\nJe to vlastnÄ stejnÃ½ kÃ³d jako v prvnÃ­ ukÃ¡zce, ale vÃ½sledek si uloÅ¾Ã­ do cache a pÅÃ­Å¡tÄ uÅ¾ vÃ­ jakÃ½ odkaz pouÅ¾Ã­t. TroÅ¡ku nevÃ½hoda je, Å¾e to vygeneruje cache soubÅ¯rek pro kaÅ¾dÃ½ individuÃ¡lnÃ­ odkaz. MyslÃ­m si vÅ¡ak, Å¾e je to sprÃ¡vnÄ, protoÅ¾e skuteÄnÄ kaÅ¾dÃ½ odkaz mÅ¯Å¾e bÃ½t ÃºplnÄ jinÃ½. TakÅ¾e jsem si alespoÅ pro dobrÃ½ pocit vyrobil jeÅ¡tÄ upravenÃ½ [FileStorage](http://api.nette.org/2.3.3/Nette.Caching.Storages.FileStorage.html), kterÃ½ cache zanoÅuje jeÅ¡tÄ o ÃºroveÅ nÃ­Å¾e podle prvnÃ­ch dvou znakÅ¯ (resp. podle druhÃ©ho a tÅetÃ­ho). No a celÃ¡ ta sranda se chovÃ¡ tak, Å¾e pÅi naÄtenÃ­ strÃ¡nky vyÅeÅ¡Ã­ ty dotazy, kterÃ© je potÅeba vyÅeÅ¡it a pÅi dalÅ¡Ã­m naÄtenÃ­ jiÅ¾ nic nedÄlÃ¡, pouze je pÅeÄte z cache. PÅi prÅ¯chodu strÃ¡nkou pouze dochÃ¡zÃ­ k ÅeÅ¡enÃ­ dalÅ¡Ã­ch - jeÅ¡tÄ nevyÅeÅ¡enÃ½ch odkazÅ¯. Pak to se postupnÄ vyÅeÅ¡Ã­ vÅ¡echny a uÅ¾ se na to nikdy nebude sahat (nenÃ­ to moc Å¾Ã¡doucÃ­).\n\n# PÃ¡r dÅ¯leÅ¾itÃ½ch poznÃ¡mek\n\nVzhledem k tomu, Å¾e v tomto konkrÃ©tnÃ­m pÅÃ­padÄ chci pouÅ¾Ã­vat pouze tuto routu, tak je moÅ¾nÃ© vÅ¡echny ostatnÃ­ ÃºplnÄ vyhodit pryÄ. Fakticky staÄÃ­ z rozÅ¡Ã­ÅenÃ­ vyhodit definici pÅ¯vodnÃ­ nativnÃ­ routy:\n\n```php\n$containerBuilder->removeDefinition('routing.router');\n```\n\nUdÄlal jsem to teÄ, takÅ¾e to jeÅ¡tÄ nemÃ¡m poÅÃ¡dnÄ vyzkouÅ¡enÃ© a doufÃ¡m, Å¾e jsem tÃ­m nic nerozbil. Ale nemÄl bych. Po zaregistrovÃ¡nÃ­ tÃ©to vlastnÃ­ routy v configu vÅ¡e zaÄne krÃ¡snÄ fungovat. StaÄÃ­, Å¾e implementuje IRouter a tato implementace je jedinÃ¡ v celÃ©m projektu (coÅ¾ je po tÃ©to ÃºpravÄ pravda).\n\nNo a na zÃ¡vÄr jeÅ¡tÄ Ãºvaha, kterou jsem sice jeÅ¡tÄ neimplementoval, ale asi bych to tak rÃ¡d udÄlal. JednÃ¡ se o jazykovÃ© mutace. Jednak je mohu ovlivÅovat pÅidÃ¡nÃ­m nÄjakÃ©ho `/en/` do cesty (coÅ¾ se tento router jednoduÅ¡e nauÄÃ­), ale pak mÅ¯Å¾e pÅijÃ­t sloÅ¾itÄjÅ¡Ã­ poÅ¾adavek. MÃ¡me dvÄ domÃ©ny smÄÅujÃ­cÃ­ na jednu aplikaci a kaÅ¾dÃ¡ domÃ©na pÅedstavuje jinou jazykovou mutaci. To je docela naprd, ale vzhledem k tomu, Å¾e do `match` metody v argumentu vstupuje HTTP request, mohu tuto jazykovou mutaci nastavit pouze na zÃ¡kladÄ adresy zase velmi jednoduÅ¡e. JedinÃ¡ modifikace bude v tom, Å¾e zaÄnu v Application requestu posÃ­lat i locale promÄnnou pro translÃ¡tor.\n\n# PoslednÃ­ nejdÅ¯leÅ¾itÄjÅ¡Ã­ upozornÄnÃ­\n\nMoÅ¾nÃ¡ si jiÅ¾ nÄkdo vÅ¡iml, Å¾e jsem zmÄnil domÃ©nu. NovÃ¡ domÃ©na je `zlml.cz`. Vzhledem k tomu, Å¾e pÅ¯vodnÃ­ byla pouze doÄasnÃ¡ (i kdyÅ¾ na nÄkolik let) a nepodaÅilo se mi zÃ­skat tu co jsem moc chtÄl, zvolil jsem tuto. Jak si jÃ­ snadno zapamatovat? Je to jednoduchÃ©. ProstÄ moje pÅÃ­jmenÃ­ bez samohlÃ¡sek. PÅ¯vodnÃ­ domÃ©na je pÅesmÄrovÃ¡na 1:1 a jeÅ¡tÄ ji budu docela dlouhou dobu drÅ¾et. Ale aÅ¾ uvidÃ­m, Å¾e to nemÃ¡ takovÃ½ smysl, tak bych jÃ­ tÅeba za pÃ¡r let zruÅ¡il. Pokud tedy chcete mÃ­t jistotu, Å¾e se k vÃ¡m vÅ¾dy novÃ© ÄlÃ¡nky dostanou, zmÄÅte si prosÃ­m ve svÃ½ch RSS ÄteÄkÃ¡ch adresu na [http://zlml.cz/rss](rss).\n","frontmatter":"id: 66b21edb-b3c2-426c-a1f4-80b189562720\ntimestamp: 1436098908000\ntitle: DynamickÃ© routovÃ¡nÃ­ URL adres\nslug: dynamicke-routovani-url-adres"},{"attributes":{"id":"425908f8-6a85-43fa-a029-b4615b7635ae","timestamp":1435428633000,"title":"VzhÅ¯ru dolÅ¯! A pak zase nahoru...","slug":"vzhuru-dolu-a-pak-zase-nahoru"},"body":"Na relativnÄ dlouhou dobu jsem se teÄ odmlÄel. Psal jsem totiÅ¾ nÄkam jinam neÅ¾ na blog a svÅ¯j pÅÃ­dÄl pÃ­smenek na mÄsÃ­c jsem odevzdÃ¡val prÃ¡vÄ tam. Ale stÃ¡lo to za to. TotiÅ¾ jak se to vezme. ProjdÄme si sled udÃ¡lostÃ­. UdÃ¡lost prvnÃ­. PoprvÃ© jsem [pÅedstavil](http://www.slideshare.net/MartinZlmal/nodejs-42314371) svÅ¯j projekt na FAV, kde studenty zaujal a na konci pÅednÃ¡Å¡ky se kolem samotnÃ©ho projektu utvoÅil hlouÄek zvÄdavcÅ¯ touÅ¾Ã­cÃ­ prohlÃ©dnout si zaÅÃ­zenÃ­ lÃ©pe. UdÃ¡lost druhÃ¡. PÅedstavil jsem tento projekt [Å¡irÅ¡Ã­ veÅejnosti](http://www.slideshare.net/MartinZlmal/barcamp2015) na Barcampu v Plzni a zÃ­skal jsem velkou spoustu negativnÃ­ch reakcÃ­. SamotnÃ¡ zadÃ¡vajÃ­cÃ­ firma se dÃ¡le pÅestala o tento projekt vÃ­ce zajÃ­mat a musel jsem se s tÃ­m chvÃ­li pasovat, abych vÄdÄl na Äem jsem. UdÃ¡lost tÅetÃ­. I kdyÅ¾ mi to chvÃ­li trvalo, tak jsem se vzpamatoval, implementoval jsem jeÅ¡tÄ nÄkolik cool vÄcÃ­ a tento projekt uvedl do finÃ¡lnÃ­ fÃ¡ze, kdy bych byl ochoten se s nÃ­m pochlubit pÅed odbornÃ½m publikem. Tak jsem takÃ© u SZZ udÄlal a prÃ¡ci ÃºspÄÅ¡nÄ obhÃ¡jil. UdÃ¡lost ÄtvrtÃ¡ a poslednÃ­. Tato prÃ¡ce [vyhrÃ¡la soutÄÅ¾](http://www.abb.cz/cawp/seitp202/67b19426a3ab3b8fc1257e6e004f2d33.aspx) ABB University Award 2015 - soutÄÅ¾ o nejlepÅ¡Ã­ technicky zamÄÅenou vysokoÅ¡kolskou prÃ¡ci v ÄR.\n\nProÄ to vÅ¯bec ÅÃ­kÃ¡m? Abych si troÅ¡ku zamachroval... (-: Ale takÃ© proto, abych s lehkÃ½m ÃºÅ¡klebkem podÄkoval vÅ¡em lidem, dÃ­ky kterÃ½m jsem se chvÃ­li cÃ­til fakt Å¡patnÄ a dÃ­ky kterÃ½m jsem tu prÃ¡ci po Barcampu pÅihlÃ¡sil do soutÄÅ¾e. ChtÄl jsem vÄdÄt, jestli je to fakt takovÃ¡ sraÄka a bude to jasnÃ¡ teÄka za mÃ½m snaÅ¾enÃ­m, nebo ta prÃ¡ce (resp. myÅ¡lenka) mÃ¡ nÄjakÃ½ smysl. A smysl to mÄlo. Hodnotil se nÃ¡pad, zpracovÃ¡nÃ­ a to jak jsem to ÃºstnÄ pÅednesl (pravdÄpodobnÄ). Pokud mÃ¡te Äas, tak si tuto prÃ¡ci mÅ¯Å¾ete pÅeÄÃ­st. Budu rÃ¡d pokud tak (alespoÅ nÄjak rychle) uÄinÃ­te a mÅ¯Å¾eme si o tom popovÃ­dat vÃ­ce.\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/key/q1xdPbSZTIUXQ\" width=\"600\" height=\"750\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nCo celÃ¡ prÃ¡ce velmi jednoduÅ¡e ÅeÄeno ÅeÅ¡Ã­? Jak co nejrychleji dostat data z nÄjakÃ© elektroniky (koncentrÃ¡toru) aÅ¾ do webovÃ© aplikace a zpÄt. K tomu by mÄlo bÃ½t (a je) moÅ¾nÃ© zmÄnit zapojenÃ­ sÃ­tÄ, tzn. jednÃ¡ se o logickou sÃ­Å¥, kterÃ¡ nenÃ­ zÃ¡vislÃ¡ ani na fyzickÃ©m zapojenÃ­, ani na pouÅ¾itÃ½ch zaÅÃ­zenÃ­ch a technologiÃ­ch. Ve vÃ½sledku je to triviÃ¡lnÃ­ problÃ©m, ale ne kaÅ¾dÃ½ jej dokÃ¡Å¾e vstÅebat, nebo si nÄco takovÃ©ho vÅ¯bec pÅipustit.\n\nCo dÃ¡l jeÅ¡tÄ nevÃ­m. UvidÃ­m, jestli se to nÄjakÃ© firmÄ zalÃ­bÃ­ vÃ­ce, neÅ¾ tÃ© souÄasnÃ© a bude schopna se za to postavit. Pokud ne, tak celÃ½ nÃ¡pad postrÃ¡dÃ¡ smysl a vrhnul bych se asi do nÄjakÃ½ch myÅ¡lenek uvedenÃ½ch ke konci prÃ¡ce, jako je napÅÃ­klad [Li-Fi](https://en.wikipedia.org/wiki/Li-Fi), nebo ÄÃ¡steÄnÄ decentralizovanÃ½ pÅÃ­stup sÃ­tÄ. Jedno vÃ­m ale jistÄ. Na Barcamp uÅ¾ s tÃ­m ani nepÃ¡chnu... :-))","frontmatter":"id: 425908f8-6a85-43fa-a029-b4615b7635ae\ntimestamp: 1435428633000\ntitle: VzhÅ¯ru dolÅ¯! A pak zase nahoru...\nslug: vzhuru-dolu-a-pak-zase-nahoru"},{"attributes":{"id":"c8a25638-706f-4849-8965-d4aa66144ffc","timestamp":1432200241000,"title":"FixnÄte si databÃ¡zi","slug":"fixnete-si-databazi"},"body":"MoÅ¾nÃ¡ to znÃ¡te. JiÅ¾ nÄjakÃ½ Äas nepouÅ¾Ã­vÃ¡te Å¾Ã¡dnÃ½ SQL soubor a strukturu databÃ¡ze si generujete z entit pomocÃ­ Doctrine. Je to super, rychlÃ© a funguje to. ParÃ¡da. JenÅ¾e mÃ¡lokterÃ¡ databÃ¡ze se obejde bez nÄjakÃ½ch inicializaÄnÃ­ch dat. JenÅ¾e jak na to?\n\n# PrvnÃ­ pÅÃ­stup\n\nNebudu ho popisovat moc dlouho, protoÅ¾e ukazuje pÅesnÄ to, co nechci ukÃ¡zat. JendoduÅ¡e si napÃ­Å¡ete nÄjakÃ© to SQL, kterÃ© pak nahrnete do databÃ¡ze. TÅeba nÄjak takto:\n\n```sql\nREPLACE INTO `options` (`key`, `value`)\nVALUES\n('option1', 'value1'),\n('option2', 'value2'),\n('option3', 'value3');\n```\n\nTo jak si to poÅ¡lete do databÃ¡ze je celkem jedno. Jestli ruÄnÄ, nebo pÅes PHP. PoÅÃ¡d nÄkde zÅ¯stÃ¡vÃ¡ SQL. ProÄ mi to vadÃ­? Tak tÅeba zde na blogu je nÄjakÃ¡ instalace. A protoÅ¾e jsem se jeÅ¡tÄ nedokopal k tomu to pÅepsat, tak musÃ­m mÃ­t tyto soubory dva. Jeden pro MySQL a druhÃ½ pro PosgreSQL. _(Jo sprÃ¡vnÄ, blog jde nainstalovat na vÃ­ce databÃ¡zÃ­...)_ A to je voser.\n\nAle jsou i projekty, kde jsem to udÄlal rovnou poÅÃ¡dnÄ (i kdyÅ¾ jsou jen na jednÃ© databÃ¡zi).\n\n# LepÅ¡Ã­ pÅÃ­stup pomocÃ­ fixtures\n\nZnÃ¡te [Doctrine Data Fixtures Extension](https://github.com/doctrine/data-fixtures)? NeznÃ¡te? Tak to doporuÄuji, protoÅ¾e vÃ¡m pomohou vyÅeÅ¡it pÅesnÄ tento problÃ©m. LÃ©pe tuto knihovnu poznÃ¡te pomocÃ­ composeru:\n\n```\ncomposer require doctrine/data-fixtures\n```\n\nSamozÅejmÄ je takovÃ½ nepsanÃ½ pÅedpoklad, Å¾e pouÅ¾Ã­vÃ¡te Doctrine... :) Co dÃ¡l? JeÅ¡tÄ neÅ¾ se pustÃ­m do dalÅ¡Ã­ho vysvÄtlovÃ¡nÃ­, bylo by fajn napsat si nÄjakÃ½ command. Na takovÃ½ command objekt se nejlÃ©pe hodÃ­ moje oblÃ­benÃ¡ knihovna [Kdyby/Console](https://github.com/Kdyby/Console), kterÃ¡ integruje [command ze Symfony](http://symfony.com/doc/current/components/console/introduction.html). UÅ¾ jsem o tom psal nÄco mÃ¡lo [dÅÃ­ve](kdyby-console). A dÃ­ky tÃ©to pÅehrÅ¡li odkazÅ¯ jiÅ¾ vÃ­te jak na to a mÅ¯Å¾eme rovnou nÄjakÃ½ psÃ¡t. A protoÅ¾e jsem lÃ­nÃ½ programÃ¡tor, tak se podÃ­vÃ¡m jak to vyÅeÅ¡il [nÄkdo jinÃ½](https://github.com/doctrine/DoctrineFixturesBundle/blob/master/Command/LoadDataFixturesDoctrineCommand.php). A troÅ¡ku si to zjedoduÅ¡Ã­m:\n\n```php\n<?php\n\nuse Doctrine\\Common\\DataFixtures\\Executor\\ORMExecutor;\nuse Doctrine\\Common\\DataFixtures\\Loader;\nuse Doctrine\\Common\\DataFixtures\\Purger\\ORMPurger;\nuse Kdyby\\Doctrine\\EntityManager;\nuse Symfony\\Component\\Console\\Command\\Command;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\n\nclass DefaultData extends Command\n{\n\n\t/** @var EntityManager @inject */\n\tpublic $em;\n\n\tprotected function configure()\n\t{\n\t\t$this\n\t\t\t->setName('orm:demo-data:load')\n\t\t\t->setDescription('Load data fixtures to your database.');\n            //->addOption...\n    }\n    \n    protected function execute(InputInterface $input, OutputInterface $output)\n\t{\n\t\ttry {\n        \t$loader = new Loader();\n\t\t\t$loader->loadFromDirectory(__DIR__ . '/../basic');\n            $fixtures = $loader->getFixtures();\n\n\t\t\t$purger = new ORMPurger($this->em);\n            \n            $executor = new ORMExecutor($this->em, $purger);\n\t\t\t$executor->setLogger(function ($message) use ($output) {\n\t\t\t\t$output->writeln(sprintf('  <comment>></comment> <info>%s</info>', $message));\n\t\t\t});\n\t\t\t$executor->execute($fixtures);\n\t\t\treturn 0; // zero return code means everything is ok\n        } catch (\\Exception $exc) {\n\t\t\t$output->writeLn(\"<error>{$exc->getMessage()}</error>\");\n\t\t\treturn 1; // non-zero return code means error\n\t\t}\n\t}\n}\n```\n\nOk, to jsem to moÅ¾nÃ¡ oÅezal vÃ­ce neÅ¾ je tÅeba. MrknÄte na tu ukÃ¡zku pro Symfony, bude to velmi podobnÃ©. A teÄ uÅ¾ koneÄnÄ k samotnÃ½m fixture objektÅ¯m. To jsou ty co naÄÃ­tÃ¡m ze sloÅ¾ky basic pomocÃ­ `loadFromDirectory`. JednÃ¡ o objekty, kterÃ© implementujÃ­ interface `FixtureInterface`, nebo moÅ¾nÃ¡ lÃ©pe dÄdÃ­ od abstraktnÃ­ tÅÃ­dy `AbstractFixture`. ObojÃ­ je v `Doctrine\\Common\\DataFixtures` namespace. Objekt obsahujÃ­cÃ­ defaultnÃ­ uÅ¾ivatele mÅ¯Å¾e vypadat takto:\n\n```php\n<?php\n\nuse Doctrine\\Common\\Persistence\\ObjectManager;\nuse Nette\\Security\\Passwords;\n\nclass UsersFixture extends \\Doctrine\\Common\\DataFixtures\\AbstractFixture\n{\n\n\tpublic function load(ObjectManager $manager)\n\t{\n\t\t$admin = new \\Users\\User('admin@nette.org');\n\t\t$admin->setPassword(Passwords::hash('admin'));\n\t\t$admin->addRole($this->getReference('admin-role'));\n\t\t$manager->persist($admin);\n\n\t\t$demo = new \\Users\\User('demo@nette.org');\n\t\t$demo->setPassword(Passwords::hash('demo'));\n\t\t$demo->addRole($this->getReference('demo-role'));\n\t\t$manager->persist($demo);\n\n\t\t$manager->flush();\n\n\t\t$this->addReference('admin-user', $admin);\n\t\t$this->addReference('demo-user', $demo);\n\t}\n\n}\n```\n\nV Äem je to tak parÃ¡dnÃ­? PouÅ¾Ã­vÃ¡m PHP kÃ³d, pouÅ¾Ã­vÃ¡m vlastnÃ­ nadefinovanÃ© entity. Hned vidÃ­m, Å¾e mi to fugnuje, ovÄÅuji svÅ¯j nÃ¡vrh databÃ¡ze a rovnou poskytuji dalÅ¡Ã­m ukÃ¡zku toho, jak jsem to myslel. Za povÅ¡imnutÃ­ stojÃ­ funkce `addReference` a `getReference`. Je jasnÃ©, Å¾e v kaÅ¾dÃ© relaÄnÃ­ databÃ¡zi budou nÄjakÃ© relace a prÃ¡vÄ k tomu tyto funkce slouÅ¾Ã­. VytvoÅÃ­m si tedy nÄjakÃ© ukazatele a ty pak mohu pouÅ¾Ã­t v jinÃ© ÄÃ¡sti demo dat. LÃ©pe to  bude vidÄt na druhÃ© tabulce:\n\n```php\n<?php\n\nuse Doctrine\\Common\\Persistence\\ObjectManager;\n\nclass RolesFixture extends \\Doctrine\\Common\\DataFixtures\\AbstractFixture\n{\n\n\tpublic function load(ObjectManager $manager)\n\t{\n\t\t$user = new \\Users\\Role();\n\t\t$user->setName(\\Users\\Role::DEMO_USER);\n\t\t$manager->persist($user);\n\n\t\t$admin = new \\Users\\Role();\n\t\t$admin->setName(\\Users\\Role::ADMIN);\n\t\t$manager->persist($admin);\n\n\t\t$manager->flush();\n\n\t\t$this->addReference('demo-role', $user);\n\t\t$this->addReference('admin-role', $admin);\n\t}\n\n}\n```\n\nVidÃ­te? MÃ¡m role, vytvoÅÃ­m si na nÄ odkaz a pouÅ¾Ã­vÃ¡m je pÅi definici uÅ¾ivatele. VyzkouÅ¡ejte si to. UvidÃ­te, jak se krÃ¡snÄ naplnÃ­ referenÄnÃ­ tabulky a vÅ¡e bude tak, jak to mÃ¡ bÃ½t...\n\nJen pozor na jedno vÄc. OhlÃ­dejte si [poÅadÃ­ tÄchto objektÅ¯](https://github.com/doctrine/data-fixtures#fixture-ordering). To lze vyÅeÅ¡it implementacÃ­ rozhranÃ­ `OrderedFixtureInterface`, nebo `DependentFixtureInterface`, coÅ¾ je o nÄco lepÅ¡Ã­ pÅÃ­stup.\n\nA jak toto celÃ© pouÅ¾Ã­t? VÅ¡ak uÅ¾ to znÃ¡te:\n\n```\nÎ» php index.php\nÎ» php index.php orm:schema-tool:create\nÎ» php index.php orm:demo-data:load\n```\n\nPrvnÃ­ pÅÃ­kaz vÃ¡m nabÃ­dne vÅ¡echny dostupnÃ© pÅÃ­kazy, druhÃ½ vygeneruje strukturu databÃ¡ze bez dat a poslednÃ­ spustÃ­ nataÅ¾enÃ­ demo dat. Pak uÅ¾ se jen kochÃ¡te:\n\n```\nÎ» php index.php orm:demo-data:load --demo\nCareful, database will be purged. Do you want to continue Y/N ? y\n  > purging database\n  > loading RolesFixture\n  > loading UsersFixture\n  > loading ArticlesFixture\n  > loading ProductsFixture\n  ...\n```","frontmatter":"id: c8a25638-706f-4849-8965-d4aa66144ffc\ntimestamp: 1432200241000\ntitle: FixnÄte si databÃ¡zi\nslug: fixnete-si-databazi"},{"attributes":{"id":"c7509237-b0ee-42d7-95e6-5dba3e937a4c","timestamp":1430044733000,"title":"Doctrine pro non-doctrine programÃ¡tory","slug":"doctrine-pro-non-doctrine-programatory"},"body":"A takÃ© o tom proÄ jsem se ptal kdo studoval, studuje, nebo bude studovat elektrotechnickou fakultu a proÄ jsem si aÅ¾ pak uvÄdomil, Å¾e jsem se vlastnÄ zeptal ÃºplnÄ blbÄ.\n\nAle napÅed k samotnÃ© pÅednÃ¡Å¡ce. NemÃ¡ smysl zde psÃ¡t dlouhosÃ¡hlÃ© slohy o tom co jsem ÅÃ­kal, poÄkejte si na video. PÃ¡r slov si vÅ¡ak neodpustÃ­m. MyslÃ­m si, Å¾e jsem mÃ¡lo zdÅ¯raznil to, aby si kaÅ¾dÃ½ koho to alespoÅ troÅ¡ku zajÃ­mÃ¡ Doctrine vyzkouÅ¡el. Ale ne jen tak si nÄco uloÅ¾it a pÅeÄÃ­st z databÃ¡ze. JÃ¡ jsem si napÅÃ­klad pÅepsal tento blog. KompletnÄ. UdÄlejte nÄco podobnÃ©ho. Teprve potom se ukÃ¡Å¾e jakÃ© jsou vÃ½hody/nevÃ½hody a hlavnÄ - teprve teÄ se mÅ¯Å¾ete rozhodnout co vÃ¡m vÃ­ce sedÃ­, protoÅ¾e uÅ¾ mÃ¡te vyÅeÅ¡enÃ© nÄjakÃ© konkrÃ©tnÃ­ problÃ©my, ne jen modelovÃ© situace. VÃ½mÄnou za hvÄzdiÄku se mÅ¯Å¾ete inspirovat napÅÃ­klad [zde](https://github.com/mrtnzlml/zlml.cz).\n\nA co kdyÅ¾ si nevÃ­te rady? To nevadÃ­. StÃ¡vÃ¡ se to Äasto, proto existuje spoustu mÃ­st kde se ptÃ¡t. Jedno je samozÅejmÄ zde. Existuje vÅ¡ak [Nette fÃ³rum](http://forum.nette.org/cs/) a pak (a to hlavnÄ) [Kdyby HELP fÃ³rum](https://help.kdyby.org/). Na vÅ¡ech mÃ­stech vÃ¡m urÄitÄ nÄkdo poradÃ­.\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/key/79L3O5KfQJxyOc\" width=\"752\" height=\"462\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nJeÅ¡tÄ neÅ¾ prozradÃ­m jak je to s tou FEL, rÃ¡d bych jeÅ¡tÄ jednou podÄkoval lidem z [ANT studia](http://www.antstudio.cz/), protoÅ¾e bez nich bych si PoSobotu nemohl tolik uÅ¾Ã­t a nemohl bych zajÃ­t na afterpivo - i kdyÅ¾ jen nealkoholickÃ©. TÄÅ¡Ã­ mÄ to i z toho dÅ¯vodu, Å¾e prÃ¡vÄ s [ANT studiem](http://www.antstudio.cz/) zaÄÃ­nÃ¡m, po vyÅeÅ¡enÃ­ vÅ¡ech studijnÃ­ch formalit, spolupracovat na zajÃ­mavÃ½ch projektech v Nette... (-:\n\nA teÄ uÅ¾ koneÄnÄ k onÃ© neÅ¡Å¥astnÃ© otÃ¡zce. SprÃ¡vnÄ mÄla znÃ­t:\n\n> Kdo studoval, studuje, nebo bude studovat nÄjakou **neprogramÃ¡torskou** Å¡kolu?\n\nBylo totiÅ¾ krÃ¡tkozrakÃ© omezit se jen na elektro, ale tam to vÅ¡e vzniklo a uÅ¾ jsem to neÅeÅ¡il dÃ¡l. Upozornil mÄ na to aÅ¾ [@stekycz](https://twitter.com/stekycz). A proÄ jsem se na to ptal? Inu nastal Äas kdy jsem se potÅeboval posunout nÄkam dÃ¡l a zaÄal jsem obchÃ¡zet firmy v Plzni. MÄl jsem tak pÅÃ­leÅ¾itost potkat spoustu zajÃ­mavÃ½ch lidÃ­ a skuteÄnÄ si vybrat nÄco co by mÄ mohlo bavit. A pÅi tomto koleÄku mÄ zaujal Äasto se opakujÃ­cÃ­ rozhovor:\n\n> TakÅ¾e vy studuje asi FAV, Å¾e?\n>\n> Ne, FEL.\n>\n> Aha, to my takÃ©...\n\nA bylo to ÄastÄjÅ¡Ã­, neÅ¾ bych si byl kdy bÃ½val pomyslel. DoÅ¡el jsem pak s kolegou k jednoduchÃ©mu zÃ¡vÄru. ZÅejmÄ vÅ¡ichni kdo programujÃ­ dobrovolnÄ, tedy vÅ¡ichni kterÃ© do programovÃ¡nÃ­ nepÅinutÃ­ Å¡kola, jsou prostÄ dobÅÃ­. MajÃ­ obrovskou nadÄji na uchycenÃ­ se. VidÄl jsem to i z pozice kdy jsem dÄlal pohovory s lidma. Je skuteÄnÄ obrovskÃ½ rozdÃ­l potkat borce z FAV a programÃ¡tora z FEL nebo odkudkoliv kde programovÃ¡nÃ­ zase aÅ¾ tak nefrÄÃ­.\n\nA naposledy jeÅ¡tÄ jednou velkÃ© dÃ­ky [@chemix_cz](https://twitter.com/chemix_cz)! OdvÃ¡dÃ­Å¡ neuvÄÅitelnou prÃ¡ci.","frontmatter":"id: c7509237-b0ee-42d7-95e6-5dba3e937a4c\ntimestamp: 1430044733000\ntitle: Doctrine pro non-doctrine programÃ¡tory\nslug: doctrine-pro-non-doctrine-programatory"},{"attributes":{"id":"47afe102-bda4-448a-895e-fb948bdd9206","timestamp":1427631321000,"title":"BarÃ¡k budoucnosti","slug":"barak-budoucnosti"},"body":"Aneb jak jsem poprvÃ© a naposledy pÅeÅ¡lÃ¡pl. Je to jednoduchÃ©, nebudeme si nic nalhÃ¡vat. JeÅ¡tÄ jsem nepochopil smysl Barcampu. A tak se stalo, Å¾e jsem si pÅipravil povÃ­dÃ¡nÃ­ o nÄÄem, co nikdo moc nechÃ¡pal. JistÄ Å¾e mÄ to troÅ¡ku mrzÃ­, zÃ¡roveÅ mi vÅ¡ak pÅijde absurdnÃ­, Å¾e nÄkdo pÅijde na pÅednÃ¡Å¡ku, kde jsem upozorÅoval v anotaci na pouÅ¾itÃ© technologie, kterÃ© budou ve vyprÃ¡vÄnÃ­ zahrnuty a pak jsem slyÅ¡el, Å¾e nÄkdo vÅ¯bec nevÄdÄl o Äem je ÅeÄ. To je ale kapitola sama pro sebe... (-:\n\nPouÄÃ­m se a dÄkuji za feedback. Bylo to tak pÅ¯l na pÅ¯l. PÅ¯l lidÃ­ mi opakovala vlastnÄ jednu a tu samou vÄc. Å½e to bylo moc sloÅ¾itÃ©. Å½e bylo potÅeba znÃ¡t hodnÄ vÄcÃ­ okolo, aby se mohl ÄlovÄk chytat. To je jeden z dÅ¯vodÅ¯, proÄ uÅ¾ si nikdy nevezmu takovou pÅednÃ¡Å¡ku na akci jako je Barcamp. Spektrum posluchaÄÅ¯ totiÅ¾ bylo extrÃ©mnÃ­. Od lidÃ­ ÃºplnÄ mimo mÃ­su aÅ¾ po lidi, kteÅÃ­ tÃ©to problematice perfektnÄ rozumÃ­ (lÃ©pe neÅ¾ jÃ¡). Proto jsem rÃ¡d i za druhou polovinu feedbacku. Potkal jsem se totiÅ¾ zhruba se stejnÃ½m poÄtem lidÃ­, ale s obrÃ¡cenÃ½m postojem, takÅ¾e jsem mÄl prostor nÄkterÃ© vÄci jeÅ¡tÄ dovysvÄtlit a vyjasnit. Bylo fakt super, kdyÅ¾ mÄ nÄkdo zastavil na chodbÄ a chtÄl vÄdÄt jak je technicky moÅ¾nÃ© poÅeÅ¡it nÄkterÃ© vÄci o kterÃ½ch jsem mluvil, nebo si chtÄl povÃ­dat o tom, jak jsou ty koncentrÃ¡tory vlastnÄ implementovanÃ© a jak to funguje podrobnÄji, **Å¾e se mu to lÃ­bÃ­!**\n\nZjednoduÅ¡enÄ - nejsem spokojenÃ½ se svÃ½m vÃ½stupem, ale jsem rÃ¡d, Å¾e jsem mohl potkat nÄkolik inspirativnÃ­ch lidÃ­ a dobÅe si popovÃ­dat. DÃ­ky. Nebudu to zde vÃ­ce rozpatlÃ¡vat. PodÃ­vejte se na prezentaci... (-:\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/46412746\" width=\"752\" height=\"462\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nPÅiklÃ¡dÃ¡m jeÅ¡tÄ odkazy na zmiÅovanÃ½ [referenÄnÃ­ manuÃ¡l](http://www.st.com/web/en/resource/technical/document/reference_manual/DM00031020.pdf) od mikrokontrolÃ©rÅ¯ a dokument pojednÃ¡vajÃ­cÃ­ o myÅ¡lence Fog Computingu: [Fog Computing and Its Role in the Internet of Things](http://conferences.sigcomm.org/sigcomm/2012/paper/mcc/p13.pdf).\n\n# A co ostatnÃ­ pÅednÃ¡Å¡ky?\n\nNo tak vÅ¡echny skvÄlÃ©. JÃ¡ si vÃ¡Å¾Ã­m toho, kdyÅ¾ nÄkdo vystoupÃ­ a ukÃ¡Å¾e co dÄlÃ¡ a je z toho nadÅ¡enÃ½. NÄkterÃ© pÅednÃ¡Å¡ky jsem tedy jen prosedÄl a nic novÃ©ho jsem se moc nedozvÄdÄl (a to prÃ¡vÄ nevÃ­m, jestli mÃ¡m od BarcampÅ¯ Äekat). Ne vÅ¡echny pÅednÃ¡Å¡ky pro mÄ majÃ­ takovou informaÄnÃ­ hodnotu. Ale lidem se to lÃ­bÃ­, takÅ¾e za mÄ dobrÃ©.\n\nSouÄÃ¡stÃ­ Barcampu byl i [Arduino Day 2015](https://day.arduino.cc/#/). Tam jsem byl pouze na pÅednÃ¡Å¡ce o SuperkondenzÃ¡torech. KamarÃ¡d z toho byl ÃºplnÄ nadÅ¡enÃ½. Pokud vÃ¡s zajÃ­mÃ¡ elektronika a nejlÃ©pe jeÅ¡tÄ rÃ¡di bastlÃ­te, tak doporuÄuji vyhledat si zÃ¡znam. JÃ¡ osobnÄ povaÅ¾uji za nejlepÅ¡Ã­ pÅednÃ¡Å¡ky [8 a pÅ¯l roku pÅednÃ¡Å¡enÃ­ pro Microsoft](https://plzenskybarcamp.cz/2015/prednasky/5cd9cd30) a [Od zadÃ¡nÃ­ k release za dva dny: jak se programuje v novinÃ¡ch](https://plzenskybarcamp.cz/2015/prednasky/8eba3b56) aneb jak se hledÃ¡ balanc mezi nÃ¡prasem a perfektnÃ­m kÃ³dem... (-:\n\nA kdyÅ¾ opomenu pÅednÃ¡Å¡ky? No tak Afterparty byla super. I zde jsem mÄl pÅÃ­leÅ¾itost prohodit pÃ¡r zajÃ­mavÃ½ch rozhovorÅ¯. Nakonec se to troÅ¡ku protÃ¡hlo a do postele jsem ulehal aÅ¾ v 6 rÃ¡no. Ale s hezkÃ½m pocitem, Å¾e nedÄlÃ¡m ÃºplnÃ© hovadiny, jen se musÃ­m nauÄit svÃ© myÅ¡lenky lidem lÃ©pe prodat...","frontmatter":"id: 47afe102-bda4-448a-895e-fb948bdd9206\ntimestamp: 1427631321000\ntitle: BarÃ¡k budoucnosti\nslug: barak-budoucnosti"},{"attributes":{"id":"55c2f8a2-9b13-46e2-b919-128c0c95a40d","timestamp":1427231722000,"title":"GenerovanÃ© tovÃ¡rniÄky - definitive guide","slug":"generovane-tovarnicky-definitive-guide"},"body":"No dobÅe, moÅ¾nÃ¡ ne ÃºplnÄ definitivnÃ­, ale uÅ¾iteÄnÃ¡ pÅÃ­ruÄka snad. PokusÃ­m se zde rozebrat vÅ¡echny potÅebnÃ© stavy generovanÃ½ch tovÃ¡rniÄek, kterÃ© povaÅ¾uji za dÅ¯leÅ¾itÃ© a jejich co nejjednoduÅ¡Å¡Ã­ zÃ¡pis v configu. JednÃ¡ se hlavnÄ o pohled z hlediska pÅedÃ¡vÃ¡nÃ­ parametrÅ¯. DoufÃ¡m, Å¾e to jeÅ¡tÄ nÄkdo doplnÃ­ o nÄjakÃ© vylepÅ¡enÃ­, nebo dalÅ¡Ã­ pÅÃ­klad, abych mohl tento seznam rozÅ¡Ã­Åit. To je jeden ze dvou dÅ¯vodÅ¯ tohoto typu ÄlÃ¡nkÅ¯. Ten druhÃ½ je, abych mÄl kam odkazovat, aÅ¾ se mÄ nÄkdo bude opÄt ptÃ¡t.\n\nCelkem rozebÃ­rÃ¡m tyto jednotlivÃ© pÅÃ­pady:\n- [PÅedÃ¡nÃ­ parametru z presenteru](#toc-predani-parametru-z-presenteru)\n- [PÅedÃ¡nÃ­ parametru z konfiguraÄnÃ­ho souboru](#toc-predani-parametru-z-konfiguracniho-souboru)\n  - Metodou \"create\"\n  - Metodou \"arguments\"\n- [All in One](#toc-all-in-one)\n\n# PÅedÃ¡nÃ­ parametru z presenteru\n\nToto povaÅ¾uji za asi ÃºplnÄ nejÄastÄjÅ¡Ã­ poÅ¾adavek. Komponenta je jednoduchÃ¡:\n\n```php\n<?php\n\nclass ParameterComponent extends Nette\\Application\\UI\\Control {\n\tpublic function __construct(array $xxx) {}\n}\n\ninterface IParameterComponentFactory {\n\n\t/** @return ParameterComponent */\n\tfunction create(array $xxx);\n\n}\n```\n\nDÅ¯leÅ¾itÃ© je, Å¾e jak datovÃ½ typ, tak nÃ¡zev promÄnnÃ© se musÃ­ shodovat. Config pak nenÃ­ o nic sloÅ¾itÄjÅ¡Ã­:\n\n```neon\nservices:\n\t- IParameterComponentFactory\n```\n\nKontejner se potom vygeneruje dle oÄekÃ¡vÃ¡nÃ­:\n\n```php\nfinal class Container_59ca411ae5_IParameterComponentFactoryImpl_28_IParameterComponentFactory implements IParameterComponentFactory {\n\n\tprivate $container;\n\n\tpublic function __construct(Container_59ca411ae5 $container) {\n\t\t$this->container = $container;\n\t}\n\n\tpublic function create(array $xxx) {\n\t\t$service = new ParameterComponent($xxx);\n\t\treturn $service;\n\t}\n\n}\n```\n\nSamotnÃ© pouÅ¾itÃ­ je velmi jednoduchÃ©. StaÄÃ­ si nechat v presenteru pÅedat interface `IParameterComponentFactory` napÅÃ­klad pomocÃ­ anotace `@inject` a nad nÃ­m volat metodu `create`. FÃ­gl je prÃ¡vÄ v tom, Å¾e vygenerovanÃ½ kÃ³d v kontejneru tento interface implementuje a odvÃ¡dÃ­ tak zbyteÄnou prÃ¡ci za vÃ¡s. Bez dalÅ¡Ã­ch zmÄn lze vyuÅ¾Ã­t autowire zaregistrovanÃ½ch sluÅ¾eb. PÅedÃ¡nÃ­ parametru z configu a zÃ¡roveÅ zÃ­skÃ¡nÃ­ dalÅ¡Ã­ zÃ¡vislosti pak mÅ¯Å¾e vypadat tÅeba takto (pouze upravenÃ¡ pÅedchozÃ­ komponenta):\n\n```php\n<?php\n\nclass ParameterComponent extends Nette\\Application\\UI\\Control {\n\tpublic function __construct(array $xxx, App\\Model\\UserManager $userManager) {}\n}\n```\n\n# PÅedÃ¡nÃ­ parametru z konfiguraÄnÃ­ho souboru\n\nToto je troÅ¡ku horÅ¡Ã­, ale poÅÃ¡d snadno pochopitelnÃ©. KÃ³d komponenty bude opÄt podobnÃ½:\n\n```php\n<?php\n\nclass ConfigComponent extends Nette\\Application\\UI\\Control {\n\tpublic function __construct($configParam) {}\n}\n\ninterface IConfigComponentFactory {\n\tfunction create();\n}\n```\n\nVÅ¡imnÄte si, Å¾e je v tomto pÅÃ­padÄ ÃºplnÄ zbyteÄnÃ¡ `@return` anotace. Co mÃ¡ factory vytvÃ¡Ået lze totiÅ¾ specifikovat v configu:\n\n```neon\nparameters:\n\ttestkey1: testvalue1\n\nservices:\n\t- implement: IConfigComponentFactory\n\t  create: ConfigComponent(%testkey1%)\n```\n\nZde by skoro Å¡lo pÅestat interface ÃºplnÄ psÃ¡t. To ale nenÃ­ v souÄasnÃ© dobÄ moÅ¾nÃ© a vygenerovanÃ½ kÃ³d je pak pÅesnÄ takovÃ½, jakÃ½ by mÄl bÃ½t:\n\n```php\nfinal class Container_59ca411ae5_IConfigComponentFactoryImpl_33 implements IConfigComponentFactory {\n\n\tprivate $container;\n\n\tpublic function __construct(Container_59ca411ae5 $container) {\n\t\t$this->container = $container;\n\t}\n\n\tpublic function create() {\n\t\t$service = new ConfigComponent('testvalue1');\n\t\treturn $service;\n\t}\n\n}\n```\n\nAlternativnÄ lze zvolit populÃ¡rnÄjÅ¡Ã­ zpÅ¯sob a upravit konfiguraÄnÃ­ soubor takto:\n\n```neon\nparameters:\n\ttestkey1: testvalue1\n\nservices:\n\t- implement: IConfigComponentFactory\n\t  arguments: [%testkey1%]\n```\n\nVygenerovanÃ½ vÃ½sledek je stejnÃ½. V tomto pÅÃ­padÄ je vÅ¡ak nutnÃ© dÃ¡t pozor na to, Å¾e pÅi psanÃ­ interface je nutnÃ© psÃ¡t jej i s `@return` anotacÃ­.\n\nOk, toto je snad jasnÃ©. Co to troÅ¡ku zkomplikovat?\n\n# All in One\n\nToto snad bude dostateÄnÄ krajnÃ­ pÅÃ­pad. PokusÃ­me se vytvoÅit tovÃ¡rniÄku pro komponentu, kterÃ¡ bude ke svÃ©mu vytvoÅenÃ­ vyÅ¾adovat parametr z configu, parametr z presenteru, sluÅ¾bu a opÄt parametr z configu - vÅ¡e pÅesnÄ v tomto poÅadÃ­. A nebudu se v tom snaÅ¾it hledat zÃ¡vislosti. Je vyÅ¾adovÃ¡no nÄco takovÃ©ho:\n\n```php\n<?php\n\nclass AllInComponent extends Nette\\Application\\UI\\Control {\n\n\tpublic function __construct($configParam1, array $userParam, App\\Model\\UserManager $userManager, $configParam2) {}\n\n}\n\ninterface IAllInComponentFactory {\n\n\t/** @return AllInComponent */\n\tfunction create(array $userParam);\n\n}\n```\n\nJe tedy jasnÃ©, Å¾e musÃ­m vytvoÅit `create` metodu s parametrem, kterÃ½ naplnÃ­m v presenteru. Zde by opÄt `@return` anotace nemusela bÃ½t. Je ÃºplnÄ zbyteÄnÃ¡. A jak na ty parametry z configu? To uÅ¾ je pÅece vyÅeÅ¡enÃ© viz dÅÃ­vÄjÅ¡Ã­ ukÃ¡zky:\n\n```neon\nparameters:\n\ttestkey1: testvalue1\n\ttestkey2: testvalue2\n\nservices:\n\t- implement: IAllInComponentFactory\n\t  create: AllInComponent(configParam2: %testkey2%, configParam1: %testkey1%)\n```\n\nZde jsem si to jeÅ¡tÄ zkomplikoval tÃ­m, Å¾e jsem zadal parametry v obrÃ¡cenÃ©m poÅadÃ­ (coÅ¾ by pÅesnÄ takto fungovalo). Abych docÃ­lil sprÃ¡vnÃ©ho poÅadÃ­, musÃ­m parametry sprÃ¡vnÄ pojmenovat (shodnÄ s konstruktorem komponenty). A vygenerovanÃ½ kÃ³d? Radost pohledÄt:\n\n```php\nfinal class Container_59ca411ae5_IAllInComponentFactoryImpl_32 implements IAllInComponentFactory {\n\n\tprivate $container;\n\n\tpublic function __construct(Container_59ca411ae5 $container) {\n\t\t$this->container = $container;\n\t}\n\n\tpublic function create(array $userParam) {\n\t\t$service = new AllInComponent('testvalue1', $userParam, $this->container->getService('27_App_Model_UserManager'), 'testvalue2');\n\t\treturn $service;\n\t}\n\n}\n```\n\nI v tomto pÅÃ­padÄ je moÅ¾nÃ© zvolit jinÃ½ (ÃºspornÄjÅ¡Ã­) zÃ¡pis v konfiguraÄnÃ­m souboru. VygenerovanÃ½ vÃ½stup je opÄt stejnÃ½:\n\n```neon\nparameters:\n\ttestkey1: testvalue1\n\ttestkey2: testvalue2\n\nservices:\n\t- implement: IAllInComponentFactory\n\t  arguments: [configParam2: %testkey2%, configParam1: %testkey1%]\n```\n\nTeÄ mÄ nenapadÃ¡, jestli je nÄkdy (bÄÅ¾nÄ) potÅeba jeÅ¡tÄ nÄco sloÅ¾itÄjÅ¡Ã­ho. Toto jsou vÅ¡ak dva zÃ¡kladnÃ­ pÅÃ­stupy zkombinovanÃ© do jednÃ© ukÃ¡zky. PodÃ­vejte se na vÅ¡echny tyto [pÅÃ­klady podrobnÄji na GitHubu](https://github.com/mrtnzlml/generated-factories).","frontmatter":"id: 55c2f8a2-9b13-46e2-b919-128c0c95a40d\ntimestamp: 1427231722000\ntitle: GenerovanÃ© tovÃ¡rniÄky - definitive guide\nslug: generovane-tovarnicky-definitive-guide"},{"attributes":{"id":"700bba3f-043d-4d84-b62f-7436e189f808","timestamp":1420324989000,"title":"Dva pÅÃ­klady toho, proÄ nenÃ­ JS pÅipravenÃ½","slug":"dva-priklady-toho-proc-neni-js-pripraveny"},"body":"Tento ÄlÃ¡nek nastartoval jeden hloupÃ½ tweet. MÄl jsem jej na \"to do\" listu jiÅ¾ nÄjakÃ½ Äas, ale Äekal jsem aÅ¾ to nÄkdo tweetne... (-:\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/MartinSadovy\">@MartinSadovy</a> MoÅ¾nÃ¡ ale to nenÃ­ podstatnÃ©. PodstatnÃ© je, Å¾e JS bÄÅ¾Ã­ v prohlÃ­Å¾eÄi i na serveru. Isomorphism ftw. PHP je evoluÄnÃ­ mrtvola.</p>&mdash; Daniel Steigerwald (@steida) <a href=\"https://twitter.com/steida/status/551431843560824832\">January 3, 2015</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nNebudu ÅeÅ¡it jak je hloupÃ½. NeznÃ¡m totiÅ¾ Å¾Ã¡dnou objektivnÃ­ stupnici kam bych jej mohl zaÅadit. PomÅ¯Å¾e mi vÅ¡ak oprÃ¡Å¡it pÃ¡r vÄcÃ­, kterÃ© mÄ Å¡tvou a tÅeba se ukÃ¡Å¾e, Å¾e to dÄlÃ¡m ÃºplnÄ Å¡patnÄ. PoslednÃ­ dobou totiÅ¾ kopu za [Node.js](http://nodejs.org/) (potaÅ¾mo [Express.js](http://expressjs.com/)), C i [Nette](http://nette.org/) tÃ¡bor. VÅ¡e v jednom projektu. NicmÃ©nÄ jsem odkojen na Nette a tak nÄkterÃ© vÄci ÅeÅ¡Ã­m v jinÃ©m frameworku tÃ©mÄÅ aÅ¾ se slzou v oku.\n\nRÃ¡d bych upozornil na to, Å¾e nejsem Å¾Ã¡dnÃ½ superprogramÃ¡tor, takÅ¾e je skuteÄnÄ moÅ¾nÃ©, Å¾e k problÃ©mu pÅistupuji Å¡patnÄ. Proto bych byl rÃ¡d za rozumnÃ© podnÄty a pÅipomÃ­nky, nikoliv osobnÃ­ vÃ½stÅednosti v komentÃ¡ÅÃ­ch...\n\n# 1. Odkazy\n\nA hned pÄknÄ z ostra. Jak jsem jiÅ¾ zmÃ­nil, jsem odkojen na Nette a proto jsem nÃ¡leÅ¾itÄ rozmazlen. Ale rozmazlen v dobrÃ©m slova smyslu. PovaÅ¾uji totiÅ¾ framework za vÄc, kterÃ¡ mi mÃ¡ pomoci. Nikoliv hÃ¡zet klacky pod nohy. Jednou z takovÃ½ch vÄcÃ­ je tvorba odkazÅ¯. Jak by to mÄlo bÃ½t sprÃ¡vnÄ? PÅesnÄ tak jak je to v Nette, Äili je zapotÅebÃ­ najkÃ½ systÃ©m, kterÃ½ mi umoÅ¾nÃ­ stavÄt odkazy a zÃ¡roveÅ mi umoÅ¾nÃ­ je kdykoliv zmÄnit bez zÃ¡sahu do Å¡ablon. Jak je tomu v takovÃ©m Exresss.js, webovÃ©m frameworku pro Node.js? V Express.js je defaultnÄ Å¡ablonovacÃ­ systÃ©m [Jade](http://jade-lang.com/). NemluvÄ o tom, jakÃ½ je to neÅ¡Å¥astnÃ½ systÃ©m, odkazy se v nÄm vytvÃ¡ÅejÃ­ zhruba takto:\n\n```html\na(href='/') Home\na(href='/about') About\n```\n\nUÅ¾ asi tuÅ¡Ã­te kam mÃ­ÅÃ­m a proÄ je to podle mÃ©ho soudu fatÃ¡lnÃ­. TakovÃ½ hard-code odkazÅ¯ je totiÅ¾ perfektnÄ pomalÃ¡ cesta do blÃ¡zince. Ve skuteÄnosti je vÅ¡ak mnohem vÄtÅ¡Ã­ anekdota oznaÄovÃ¡nÃ­ aktivnÃ­ch odkazÅ¯. PodÃ­vejte se na [6 WTF rad](http://stackoverflow.com/questions/10713923/node-js-jade-express-how-can-i-create-a-navigation-that-will-set-class-acti), jak tento triviÃ¡lnÃ­ problÃ©m vyÅeÅ¡it. CelÃ½ princip spoÄÃ­vÃ¡ v tom pouÅ¾Ã­t hard-code odkazÅ¯ na vÃ­ce mÃ­stech v Å¡ablonÄ:\n\n```html\nul.nav.navbar-nav\n\tli(class=path == '/' ? 'active' : undefined)\n\t\ta(href='/') Home\n\tli(class=path == '/about' ? 'active' : undefined)\n\t\ta(href='/about') About\n```\n\nKde se bere `path`? Ten si musÃ­te pÅedat v routeru, napÅ.:\n\n```js\nrouter.get('/', function (req, res) {\n\tres.render('homepage', {\n\t\tpath: '/'\n\t});\n});\n```\n\nTak to mÃ¡me celkem 4 mÃ­sta kde je to pÄknÄ natvrÄÃ¡ka. ProÄ ne? **ProÄ jo?** JistÄ, existuje moÅ¾nost jak si to naprogramovat lÃ©pe, jinak, znova. Jen si ÅÃ­kÃ¡m, kde se stala chyba a proÄ to framework nezvlÃ¡dÃ¡ nÄjak lÃ©pe?\n\n# 2. FormulÃ¡Åe\n\nJedna z vÄcÃ­, kterÃ¡ se v tomto svÄtÄ ÅeÅ¡Ã­ ponÄkud laxnÄ jsou formulÃ¡Åe. Na to nejsem zvyklÃ½ a troÅ¡ku mÄ to dÄsÃ­. Funguje to zhruba tak, Å¾e vytvoÅÃ­te v Å¡ablonÄ formulÃ¡Å:\n\n```html\nform(id='save-form', method='POST', action='/save')\n\t.form-group\n\t\tlabel(for='xxx') XXX\n\t\tinput(type='text', name='xxx', class='form-control', id='xxx', placeholder='xxx', required)\n\t.form-group\n\t\tbutton.btn.btn-default Odeslat\n```\n\nA nÃ¡slednÄ se napÃ­Å¡e router pro zpracovÃ¡nÃ­ dat:\n\n```js\nrouter.post('/save', function (req, res) {\n\tconsole.log(req.body.xxx); // <<< !\n\tres.render('save', {\n\t\tpath: '/save'\n\t});\n});\n```\n\nJistÄ, je to jednoduchÃ©. Ale to prostÄ [nenÃ­ ok](http://stackoverflow.com/questions/19030220/is-it-ok-to-work-directly-on-the-data-in-req-body). KromÄ toho, Å¾e je v kÃ³du opÄt hard-code, tak se jednÃ¡ o nÃ¡dhernÄ \"oÅ¡etÅenÃ½\" vstup. TakovÃ½ krÃ¡snÄ ÄistÃ½ `$_POST`. Takto si framework nepÅedstauji. MoÅ¾nÃ¡ je to proto, Å¾e je Express.js jeÅ¡tÄ moc low-level, moÅ¾nÃ¡ takÃ© proto, Å¾e jeÅ¡tÄ neuzrÃ¡l.\n\n# NenÃ­ to tak zlÃ©\n\nMusÃ­m vÅ¡ak utlumit nÄkterÃ© pobouÅenÃ© ÄtenÃ¡Åe. Nebylo by totiÅ¾ fÃ©r jen nÄco hejtovat. Bez Node.js bych danou aplikaci naprogramoval jen velmi tÄÅ¾ko. Je totiÅ¾ super, Å¾e mohu vyuÅ¾Ã­t \"event-driven, non-blocking I/O model\". Toto je vÅ¡ak vÄc, kterou podle mÃ©ho nÃ¡zoru moc lidÃ­ nevyuÅ¾ije, protoÅ¾e jÃ­ prostÄ nepotÅebuje. KolikrÃ¡t nÄco takovÃ©ho programujete? Proto kdyÅ¾ jsem mÄl na tÃ©ma Node.js [pÅednÃ¡Å¡ku](prednaska-na-zcu-node-js), jen velmi tÄÅ¾ko jsem lidem vysvÄtloval k Äemu je to vlastnÄ dobrÃ©. A prÃ¡vÄ proto jsem pouÅ¾itÃ­ Node.js paradoxnÄ neukazoval na webovÃ© aplikaci. TÅeba proto, Å¾e se s nÃ­m nepracuje ÃºplnÄ nejlÃ©pe, zÃ¡roveÅ je vÅ¡ak v urÄitÃ½ch smÄrech nenahraditelnÃ½.\n\nAÄkoliv jsem tedy zaÄÃ­nal jednÃ­m hloupÃ½m tweetem, nenÃ­ toto rekace na nÄj a je mi celkem hluboce ukradenÃ½. SpÃ­Å¡e mÄ zajÃ­mÃ¡ jestli to co jsem zde popisoval (a celÃ¡ Åada dalÅ¡Ã­ch problÃ©mÅ¯) je normÃ¡lnÃ­ vÅ¡ednÃ­ den server-side JS programÃ¡tora, nebo se s tÄmito problÃ©my vypoÅÃ¡dÃ¡vÃ¡te jinak?\n\nEvoluÄnÃ­ mrtvola FTW!","frontmatter":"id: 700bba3f-043d-4d84-b62f-7436e189f808\ntimestamp: 1420324989000\ntitle: Dva pÅÃ­klady toho, proÄ nenÃ­ JS pÅipravenÃ½\nslug: dva-priklady-toho-proc-neni-js-pripraveny"},{"attributes":{"id":"3d718b54-4cf2-40dd-8d54-fe865a3655d1","timestamp":1419375234000,"title":"RESP protokol - pÅÃ­mÃ½ pÅÃ­stup k Redis databÃ¡zi","slug":"resp-protokol-primy-pristup-k-redis-databazi"},"body":"![](*RESP*)(http://redis.io/topics/protocol) (**RE**dis **S**erialization **P**rotocol) je nÄco, s ÄÃ­m se asi vÄtÅ¡ina lidÃ­ nepotkÃ¡. DÅ¯vod je prostÃ½. Tento protokol je vÄtÅ¡inou zabalen hluboko v knihovnÄ, kterÃ¡ pracuje s Redis databÃ¡zÃ­. ExistujÃ­ vÅ¡ak situace, kdy se tento protokol hodÃ­. Jednou ze situacÃ­ je stav, kdy potÅebujete pÅedat, nebo naopak zÃ­skat z Redisu nÄjakÃ¡ data a vÅ¡echno ostatnÃ­ vyjma RESP komunikace je zbyteÄnÃ© zdrÅ¾ovÃ¡nÃ­ (u mÄ tÅeba sypÃ¡nÃ­ dat z procesoru pÅÃ­mo do Redisu). DruhÃ½ pÅÃ­pad nastane v okamÅ¾iku, kdy potÅebujete zajistit komunikaci klient-server a potÅebujete zvolit vhodnÃ½ formÃ¡t pÅenosu informacÃ­. JednÃ¡ se tedy o pouÅ¾itÃ­ tohoto protokolu ÃºplnÄ mimo Redis. DÅ¯vodÅ¯ mÅ¯Å¾e bÃ½t celÃ¡ Åada, nejhlavnÄjÅ¡Ã­ by vÅ¡ak byl asi ten, Å¾e se s RESP formÃ¡tem dat dÃ¡ snadno pracovat, protoÅ¾e pouÅ¾Ã­vÃ¡ prefixovÃ½ zÃ¡pis.\n\n# FormÃ¡t RESP protokolu\n\nRESP pouÅ¾Ã­vÃ¡ celkem 5 zpÅ¯sobÅ¯ jak zaobalit pÅenÃ¡Å¡enou informaci. VÅ¾dy vÅ¡ak platÃ­, Å¾e prvnÃ­ byte je byte urÄujÃ­cÃ­ o jakÃ½ formÃ¡t se jednÃ¡:\n\n- `+` jednoduchÃ½ string\n- `-` error\n- `:` integer\n- `$` bulk string (binary safe)\n- `*` array\n\nNÃ¡sleduje samotnÃ½ obsah, nebo dodateÄnÃ© informace, napÅÃ­klad o dÃ©lce a vÅ¡e je ukonÄeno pomocÃ­ CRLF (`\\r\n`). PostupnÄ tedy pÅenÃ¡Å¡enÃ© informace moho vypadat napÅÃ­klad takto:\n\n- `+PONG\\r\n`\n- `-Error 123\\r\n`\n- `:54986\\r\n`\n- `$4\\r\nPING\\r\n` (prvnÃ­ ÄÃ¡st urÄuje dÃ©lku bulk stringu, NULL je pak `$-1\\r\n`)\n- `*2\\r\n$3\\r\nGET\\r\n$3\\r\nkey\\r\n` (prvnÃ­ je dÃ©lka pole, nÃ¡sleduje kombinace pÅedchozÃ­ch)\n\nTo je celÃ©, Å¾Ã¡dnÃ¡ vÄda v tom nenÃ­. Je to skuteÄnÄ jednoduchÃ½ protokol a to je super, protoÅ¾e se s nÃ­m dÃ¡ snadno pracovat. NavÃ­c lze poslat celÃ½ dlouhÃ½ text obsahujÃ­cÃ­ vÃ­ce pÅÃ­kazÅ¯ v jednom spojenÃ­.\n\n# Implementace v Node.js\n\nV Node.js by teÄ mÄla bÃ½t realizace velmi jednoduchÃ¡. NapÃ­Å¡eme si krÃ¡tkÃ½ TCP client, kterÃ½ se nÃ¡m napojÃ­ na Redis databÃ¡zi (vÄtÅ¡inou port 6379) a budeme posÃ­lat/pÅijÃ­mat data:\n\n```javascript\nvar net = require('net');\n\nvar client = net.connect({port: 6379}, function() {\n\tconsole.log('Connected to the Redis server.');\n\n\tclient.write('*1\\r\n$4\\r\nPING\\r\n');\n\tclient.write('*3\\r\n$3\\r\nSET\\r\n$3\\r\nkey\\r\n$5\\r\nxxxxx\\r\n');\n\tclient.write('*2\\r\n$3\\r\nGET\\r\n$3\\r\nkey\\r\n');\n\tclient.write('*5\\r\n$5\\r\nPFADD\\r\n$11\\r\nHyperLogLog\\r\n$3\\r\nxxx\\r\n$3\\r\nyyy\\r\n$3\\r\nzzz\\r\n');\n\tclient.write('*2\\r\n$7\\r\nPFCOUNT\\r\n$11\\r\nHyperLogLog\\r\n');\n\n\tclient.write('*1\\r\n$7\\r\nFLUSHDB\\r\n');\n});\n\nclient.on('data', function(data) {\n\tconsole.log(data.toString());\n\tclient.end();\n});\n\nclient.on('end', function() {\n\tconsole.log('Disconnected from the Redis server.');\n});\n```\n\n<span style=\"color:green\">JeÅ¡tÄ jednu poznÃ¡mku, kterou jsem do pÅ¯vodnÃ­ho ÄlÃ¡nku nezahrnul. ProÄ jsou udesÃ­lanÃ¡ data zabalena v RESP poli? VychÃ¡zÃ­ to z toho, Å¾e podle dokumentace, by klient mÄl posÃ­lat na server pole bulk stringÅ¯. NicmÃ©nÄ dobÅe funkÄnÃ­ a validnÃ­ zÃ¡pis je i bez pole (`client.write('GET key\\r\n');`) jen musÃ­ bÃ½t opÄt ukonÄen pomocÃ­ CRLF.</span>\n\nOdesÃ­lÃ¡me do Redis databÃ¡ze celkem 6 pÅÃ­kazÅ¯. PrvnÃ­ je obyÄejnÃ½ `PING`, nÃ¡sleduje `SET` a `GET` klÃ­Äe, `PFADD` a `PFCOUNT` z HyperLogLog datovÃ©ho dypu a nakonec jen smazÃ¡nÃ­ databÃ¡ze. Co bude vÃ½stupem?\n\n```\n+PONG\n+OK\n$5\nxxxxx\n:0\n:3\n+OK\n```\n\nJak je moÅ¾nÃ©, Å¾e server vrÃ¡til 7 odpovÄdÃ­? Je to prostÃ©, upravÃ­me si datovÃ½ callback aÅ¥ je zÅejmÃ©, co skuteÄnÄ dostÃ¡vÃ¡me za data:\n\n```javascript\nclient.on('data', function(data) {\n\tconsole.log(JSON.stringify(data.toString()));\n\tclient.end();\n});\n```\n\nTeÄ uÅ¾ bude vÃ½stup o nÄco jinÃ½:\n\n```\n\"+PONG\\r\n+OK\\r\n$5\\r\nxxxxx\\r\n:0\\r\n:3\\r\n+OK\\r\n\"\n```\n\nA vÅ¡e jiÅ¾ dÃ¡vÃ¡ smysl. PrvnÃ­ odpovÄÄ je `PONG` (na `PING`), nÃ¡sleduje reakce `OK` na nastavenÃ­ klÃ­Äe, odpovÄÄ ve formÄ bulk stringu, kterÃ½ mÃ¡ dvÄ ÄÃ¡sti - dÃ©lku a samotnou textovou odpovÄÄ (proto to odÅÃ¡dkovÃ¡nÃ­ navÃ­c), nÃ¡sleduje odpovÄÄ z `PFADD` (0 nebo 1 podle situace) a takÃ© odpovÄÄ z `PFCOUNT` (mohutnost mnoÅ¾iny v HyperLogLog). PoslednÃ­ `OK` je reakce na `FLUSHDB`. Jak je vidÄt, tak i v odpovÄdi je prvnÃ­m znakem formÃ¡t dat danÃ© odpovÄdi.\n\nTakto jsem to celkem zbyteÄnÄ (ale pro pÅehlednost) rozepisoval. CelÃ¡ komunikace smÄrem k serveru by se dala napsat do jednoho poÅ¾adavku:\n\n```\n*1\\r\n$4\\r\nPING\\r\n*3\\r\n$3\\r\nSET\\r\n$3\\r\nkey\\r\n$5\\r\nxxxxx\\r\n*2\\r\n$3\\r\nGET\\r\n$3\\r\nkey\\r\n*5\\r\n$5\\r\nPFADD\\r\n$11\\r\nHyperLogLog\\r\n$3\\r\nxxx\\r\n$3\\r\nyyy\\r\n$3\\r\nzzz\\r\n*2\\r\n$7\\r\nPFCOUNT\\r\n$11\\r\nHyperLogLog\\r\n*1\\r\n$7\\r\nFLUSHDB\\r\n\n```\n\nOdpovÄÄ by zÅ¯stala stejnÃ¡.","frontmatter":"id: 3d718b54-4cf2-40dd-8d54-fe865a3655d1\ntimestamp: 1419375234000\ntitle: RESP protokol - pÅÃ­mÃ½ pÅÃ­stup k Redis databÃ¡zi\nslug: resp-protokol-primy-pristup-k-redis-databazi"},{"attributes":{"id":"45d3a9a8-d3e9-482c-b582-4dc3773de0c2","timestamp":1418241190000,"title":"PoslednÃ­ pÅednÃ¡Å¡ka na FAV - Nette","slug":"posledni-prednaska-na-fav-nette"},"body":"Tak a je to... (-:\n\nZveÅejÅuji mojÃ­ poslednÃ­ pÅednÃ¡Å¡ku v tomto roce, kterou jsem mÄl na ZÄU na fakultÄ aplikovanÃ½ch vÄd pro studenty pÅedmÄtu KIV/WEB. TentokrÃ¡t jsem si pohrÃ¡l troÅ¡ku se zvukem, takÅ¾e by to oproti [minulÃ©mu tÃ½dnu](prednaska-na-zcu-node-js) mÄlo bÃ½t o mnoho lepÅ¡Ã­.\n\nTÃ©matem tÃ©to pÅednÃ¡Å¡ky byl mÅ¯j oblÃ­benÃ½ Nette Framework, konkrÃ©tnÄ ve verzi 2.3-dev. CÃ­lem bylo seznÃ¡mit studenty se zÃ¡kladnÃ­ myÅ¡lenkou MVC/P a rychle nastÃ­nit o co vlastnÄ v Nette jde a  jak se v nÄm stavÃ­ jednoduchÃ© aplikace. PÅednÃ¡Å¡ka nakonec utekla rychleji neÅ¾ jsem Äekal a nemohl jsem ukÃ¡zat vÅ¡e, proto jsem pÅipravil repozitÃ¡Å na [GitHubu](https://github.com/mrtnzlml/kivweb-nette-fcbk) ze kterÃ©ho by mÄlo bÃ½t vÅ¡e jasnÃ© (pokud nenÃ­, mÅ¯Å¾ete se jeÅ¡tÄ dodateÄnÄ ptÃ¡t).\n\nKonec pÃ­smenek, podÃ­vejte se sami:\n\n<iframe width=\"640\" height=\"360\" src=\"//www.youtube.com/embed/GdATlrmoPRM\" frameborder=\"0\" allowfullscreen></iframe>\n\nA samozÅejmÄ nesmÃ­ chybÄt samotnÃ¡ prezentace:\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/42574181\" width=\"752\" height=\"462\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nOpÄt takÃ© dÄkuji [Honzovi *chemix* ÄernÃ©mu](http://honzacerny.com/) za zapÅ¯jÄenÃ­ kamery.","frontmatter":"id: 45d3a9a8-d3e9-482c-b582-4dc3773de0c2\ntimestamp: 1418241190000\ntitle: PoslednÃ­ pÅednÃ¡Å¡ka na FAV - Nette\nslug: posledni-prednaska-na-fav-nette"},{"attributes":{"id":"5ed9400f-ee4e-4a62-b563-1cf97565ac87","timestamp":1417636504000,"title":"PÅednÃ¡Å¡ka na ZÄU - Node.js","slug":"prednaska-na-zcu-node-js"},"body":"Jak jsem slÃ­bil, tak zveÅejÅuji pÅenÃ¡Å¡ku na tÃ©ma **Node.js**, kterou jsem mÄl dnes na ZÃ¡padoÄeskÃ© univerzitÄ pro lidi studujÃ­cÃ­ pÅedmÄt **KIV/WEB**, tedy WebovÃ© aplikace. Tato pÅednÃ¡Å¡ka volnÄ navazuje na pÅedchozÃ­ obsah tohoto pÅedmÄtu. Studenti se pozvolna seznamujÃ­ s webovÃ½m prostÅedÃ­m od ÃºplnÄ zÃ¡kladnÃ­ prÃ¡ce s HTML a CSS aÅ¾ k pokroÄilÃ½m webovÃ½m frameworkÅ¯m. PodÃ­vejte se na zÃ¡znam tÃ©to pÅednÃ¡Å¡ky:\n\n<iframe width=\"640\" height=\"360\" src=\"//www.youtube.com/embed/eakg5THIbcI\" frameborder=\"0\" allowfullscreen></iframe>\n\nA prohlÃ©dnÄte si takÃ© pÅipravenou prezentaci:\n\n<iframe src=\"//www.slideshare.net/slideshow/embed_code/42314371\" width=\"752\" height=\"460\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nRÃ¡d bych takÃ© podÄkoval [Honzovi *chemix* ÄernÃ©mu](http://honzacerny.com/) za zapÅ¯jÄenÃ­ kamery.\n\nA pÅÃ­Å¡tÄ? PÅÃ­Å¡tÄ se podÃ­vÃ¡me na skvÄlÃ½ PHP framework [Nette](http://nette.org/)! Tak doufÃ¡m, Å¾e opÄt dorazÃ­te... (-:","frontmatter":"id: 5ed9400f-ee4e-4a62-b563-1cf97565ac87\ntimestamp: 1417636504000\ntitle: PÅednÃ¡Å¡ka na ZÄU - Node.js\nslug: prednaska-na-zcu-node-js"},{"attributes":{"id":"3979a0f0-f8ed-45c3-8311-d48e563a49b1","timestamp":1416264254000,"title":"NadvlÃ¡da inteligentnÃ­ch procesorÅ¯","slug":"nadvlada-inteligentnich-procesoru"},"body":"PÃ¡r dnÃ­ zpÃ¡tky jsem tweetoval o tom, nad ÄÃ­m prÃ¡vÄ teÄ trÃ¡vÃ­m asi nejvÃ­ce Äasu. CÃ­lem celÃ©ho mÃ©ho snaÅ¾enÃ­ je dostat data z procesoru, kterÃ½ obsluhuje rÅ¯znÃ© periferie na zÃ¡kladnÃ­ desce aÅ¾ do webovÃ©ho prohlÃ­Å¾eÄe a zpÄt - vÅ¡e v reÃ¡lnÃ©m Äase. PrÃ¡vÄ dnes jsem dosÃ¡hl prvnÃ­ho milnÃ­ku, tedy dostal jsem nÄjakÃ¡ skuteÄnÄ smysluplnÃ¡ data do prohlÃ­Å¾eÄe a rÃ¡d bych zde nastÃ­nil jak jsem postupoval a jakÃ© technologie jsem volil. JiÅ¾ dÅÃ­ve se totiÅ¾ ukÃ¡zalo, Å¾e nÄkterÃ© reakce na mÃ© ÄlÃ¡nky jsou skuteÄnÄ konstruktivnÃ­ a tedy i velmi pÅÃ­nosnÃ©... (-:\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Procesor â¡Ethernet â¡NodeJS â¡Redis â¡ExpressJS â¡Socket.IO â¡Browser â <a href=\"http://t.co/MAIlmMZEL9\">pic.twitter.com/MAIlmMZEL9</a></p>&mdash; Martin ZlÃ¡mal (@mrtnzlml) <a href=\"https://twitter.com/mrtnzlml/status/531104236571230208\">November 8, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n# NÄkolik slepÃ½ch uliÄek\n\nPÅ¯vodnÄ byl celÃ½ nÃ¡pad ÃºplnÄ jinÃ½ a rozhodnÄ ne real-time. A stejnÄ jako je teÄ velkÃ½ trend stavÄt vÅ¡e pomocÃ­ *Raspberry Pi* nebo pomocÃ­ *Arduino*, tak i jÃ¡ jsem tak chtÄl uÄinit. DÅ¯vod je jednoduchÃ½. Napsat se s pomocÃ­ tÄchto desek dÃ¡ vÅ¡elicos velmi rychle a nestojÃ­ to moc nÃ¡mahy. NavÃ­c jsem chtÄl vÃ­ce Äasu vÄnovat webovÃ© aplikaci, neÅ¾ nÄjakÃ©mu mikroÄipu. Postupem Äasu a po nÄkolika vÃ¡Å¾nÃ½ch rozhovorech jsem zaÄal pÅemÃ½Å¡let nad real-time pÅenosem informace v obou smÄrech. TakÅ¾e bylo zapotÅebÃ­ najÃ­t vhodnou desku. JenÅ¾e na real-time uÅ¾ jsem si jen s *Raspberry* nevÄÅil a proto jsem hledal nÄjakou lepÅ¡Ã­ desku na kterou bych nahodil nÄjakÃ½ velmi lehkÃ½ Linux a NodeJS. Po dalÅ¡Ã­ch vÃ¡Å¾nÃ½ch rozhovorech jsem vÅ¡ak i z tÃ©to cesty ustoupil a zvolil jsem nÄco, co jsem ze zaÄÃ¡tku vÅ¯bec neuvaÅ¾oval. ChtÄl jsem zvolit desky od ST z Åady [Nucleo](www.st.com/stm32nucleo), ale tyto desky nemajÃ­ ethernet a tak bylo lehÄÃ­ vypÅ¯jÄit si [eval-boardy](www.st.com/stm3220g-eval). Tyto desky majÃ­ stejnÃ© procesory, ale vÃ­ce periferiÃ­ okamÅ¾itÄ k dispozici. JenÅ¾e to znamenÃ¡, Å¾e musÃ­m opustit vÅ¡echno hranÃ­ si a hluboce se ponoÅit do **C**Äka...\n\n# SprÃ¡vnÃ¡ uliÄka?\n\nDesky a procesory jsou tedy jasnÃ©. Co dÃ¡l? NezbÃ½vÃ¡ neÅ¾ stanovit, jak se bude informace pÅenÃ¡Å¡et aÅ¾ do prohlÃ­Å¾eÄe. Zde je zÅejmÄ jasnÃ¡ vÄc to, Å¾e mezi procesorem a prohlÃ­Å¾eÄem musÃ­ bÃ½t nÄjakÃ½ meziÄlen. Ten u mÄ tvoÅÃ­ [NodeJS](http://nodejs.org/) server v kombinaci s [Redis](http://redis.io/) databÃ¡zÃ­ zhruba tak, jak je znÃ¡zornÄno na [ASCII artu](http://cs.wikipedia.org/wiki/ASCII_art) nÃ­Å¾e:\n\n```\n------------      ----------      -----------\n| Procesor | ---> | NodeJS | ---> | Browser |\n------------      ----------      -----------\n        |             ^\n        |             |\n        |         ---------\n        --------> | Redis |\n                  ---------\n```\n\nJak celÃ½ pÅenos v souÄasnÃ© chvÃ­li probÃ­hÃ¡? Procesor je teÄ aktivnÃ­m prvkem, tzn. sbÃ­rÃ¡ nÄjakÃ¡ potÅebnÃ¡ data (napÅ. pomocÃ­ ADC snÃ­mÃ¡ polohu natoÄenÃ­ potenciometru) a pomocÃ­ UDP datagramÅ¯ je odesÃ­lÃ¡ na jasnÄ danou IP adresu NodeJS serveru, kde se informace z datagramu uloÅ¾Ã­ do danÃ© struktury v Redis databÃ¡zi. Tyto datagramy se sklÃ¡dajÃ­ z klasickÃ© UDP hlaviÄky a datovÃ© ÄÃ¡sti. Ta je v [RESP](http://redis.io/topics/protocol) formÃ¡tu, takÅ¾e teoreticky bude nÄkdy pozdÄji moÅ¾nÃ© NodeJS server ÃºplnÄ pÅeskoÄit a data uklÃ¡dat pÅÃ­mo z procesoru do databÃ¡ze jak je na diagramu naznaÄeno. Server vÅ¡ak nikdy nepÅ¯jde ÃºplnÄ odstranit, protoÅ¾e na NodeJS serveru bÄÅ¾Ã­ v tÃ©to chvÃ­li UDP server, ale takÃ© tam bÄÅ¾Ã­ webovÃ½ server ([ExpressJS](http://expressjs.com/)), kterÃ½ mi umoÅ¾Åuje rovnou vytvoÅit webovou strÃ¡nku a s pomocÃ­ [Socket.IO](http://socket.io/) si mohu otevÅÃ­t websocket a z databÃ¡ze opÄt informace odesÃ­lat bleskovou rychlostÃ­ do prohlÃ­Å¾eÄe, kde je mohu javascriptem nÄjak dÃ¡le zpracovat.\n\n# K Äemu to celÃ© je?\n\nNevÃ­m. (-: Tento ÄlÃ¡nek jsem napsal proto, abych si utÅÃ­dil myÅ¡lenky a zÃ­skal zpÄtnou vazbu. CelÃ½ projekt mÄl vÅ¡ak pÅ¯vodnÄ bÃ½t pro tzv. inteligentnÃ­ domy, kdy by staÄilo dÅ¯m pouze zasÃ­Å¥ovat a vÅ¡e ostatnÃ­ by jiÅ¾ bylo vlastnÄ hotovo (pÅes ethernet lze i napÃ¡jet). VÃ½hodnÃ© je to v tom, Å¾e mÅ¯Å¾ete kdykoliv jakÃ½koliv prvek domÃ¡cnosti odpojit, dÃ¡t ho na jinÃ© mÃ­sto (v rÃ¡mci IP rozsahu) a vÅ¡e by stÃ¡le fungovalo. JenÅ¾e jak Äasto pÅesouvÃ¡te vypÃ­naÄe (termostaty, svÄtla, senzory)? Proto se chci spÃ­Å¡e zamÄÅit na objekty kde se tyto vÄci Äasto ÅeÅ¡Ã­, proto vidÃ­m sprÃ¡vnÃ½ smÄr spÃ­Å¡e v (relativnÄ) Äasto se mÄnÃ­cÃ­ch kancelÃ¡ÅskÃ½ch budovÃ¡ch, nebo tam kde je potÅeba napÅÃ­klad rychle pÅipojit nÄjakÃ© senzory a sledovat je online. KaÅ¾dopÃ¡dnÄ vÄÅÃ­m, Å¾e dÃ­ky svÃ½m moÅ¾nostem tento systÃ©m natrhne zadek i souÄasnÃ½m systÃ©mÅ¯m pro ovlÃ¡dÃ¡nÃ­ \"inteligentnÃ­ch\" domÅ¯ vyuÅ¾Ã­vajÃ­cÃ­ch PLC-like systÃ©my.\n\nBudoucnost je zatÃ­m celkem jasnÃ¡. TeÄ chci nauÄit systÃ©m komunikovat i v opaÄnÃ©m smÄru a nÃ¡slednÄ jej budu pilovat, ÄÃ­mÅ¾ zavrÅ¡Ã­m prvnÃ­ etapu prÃ¡ce. Cest pro rozÅ¡iÅovÃ¡nÃ­ je vÅ¡ak jeÅ¡tÄ spoustu. Jednak chci systÃ©m nauÄit komunikovat bezdrÃ¡tovÄ, pak takÃ© IPv6, Å¡ifrovanou komunikaci a v neposlednÃ­ ÅadÄ chci vyrobit nÄjakÃ© senzory a akÄnÃ­ Äleny pro reÃ¡lnÃ© pouÅ¾itÃ­ a zprovoznit funkÄnÃ­ ukÃ¡zku pro prezentovÃ¡nÃ­ celÃ© tÃ©to srandy.\n\nTak co, mÃ¡te dostatek odvahy Å¡oupnout si takovÃ½ systÃ©m do barÃ¡ku? UpozorÅuji, Å¾e to nenÃ­ Å¾Ã¡dnÃ¡ Arduino-like stavebnice, takÅ¾e to je spolehlivÃ©... (-:","frontmatter":"id: 3979a0f0-f8ed-45c3-8311-d48e563a49b1\ntimestamp: 1416264254000\ntitle: NadvlÃ¡da inteligentnÃ­ch procesorÅ¯\nslug: nadvlada-inteligentnich-procesoru"},{"attributes":{"id":"420ed8a1-f8bb-42eb-9f8d-356783765357","timestamp":1414868997000,"title":"Dependent select box","slug":"dependent-select-box"},"body":"ObÄas je v Nette zapotÅebÃ­ vyÅeÅ¡it dependent select box. Je to relativnÄ mÃ¡lo ÄastÃ½ poÅ¾adavek a o to mÃ©nÄ se o nÄm dÃ¡ najÃ­t, kdyÅ¾ je to zrovna potÅeba. V zÃ¡sadÄ existujÃ­ dvÄ ÅeÅ¡enÃ­. NudnÃ© - poctivÃ© a pak zÃ¡bavnÃ© - Å¡pinavÃ©. PodÃ­vejme se na to, jak se dÃ¡ takovÃ½ dependent select box jednoduÅ¡e vyÅeÅ¡it.\n\n# ÄistÃ© ÅeÅ¡enÃ­\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/51d212f2-5aa9-44b9-9085-f6267e1974e9/vystrizek.png)\nToto ÅeÅ¡enÃ­ ukazuje jak by se takovÃ½ problÃ©m mÄl zhruba ÅeÅ¡it. MyÅ¡lenka je velmi jednoduchÃ¡. PrvnÄ potÅebujeme data do zÃ¡vislÃ©ho select boxu. Ty se normÃ¡lnÄ vyÅeÅ¡Ã­ prostÅednistvÃ­m databÃ¡ze, v naÅ¡em pÅÃ­padÄ postaÄÃ­ jednoduchÃ© pole.\n\n```php\nprivate $database = [\n    [1 => '2', '4', '9'],\n    [4 => '.', 'â´', 'â¦'],\n    [5 => 'Ï', 'â¬', 'Â©'],\n];\n```\n\nNÃ¡slednÄ je potÅeba vytvoÅit samotnÃ½ formulÃ¡Å:\n\n```php\nprotected function createComponentForm($name) {\n    $form = new UI\\Form;\n    $this[$name] = $form; // <- Zde je celÃ½ fÃ­gl\n    \n    $form->addSelect('one', 'One', ['ÄÃ­sla', 'TeÄky', 'Symboly'])->setDefaultValue(1);\n    //dump($form['one']->value);\n    \n    $form->addSelect('two', 'Two', $this->database[$form['one']->value]);\n    \n    $form->addSubmit('send', 'Odeslat');\n    $form->onSuccess[] = $this->success;\n    return $form;\n}\n```\n\nA k formulÃ¡Åi takÃ© Å¡ablonu:\n\n```html\n{form form}\n    {input one, size => 3}\n    {snippet two}\n    \t{input two, size => 3}\n    {/snippet}\n    {input send}\n{/form}\n```\n\nAby Å¡lo pouÅ¾Ã­t snippet uvnitÅ formulÃ¡ÅovÃ©ho makra, budeme muset udÄlat malÃ½ workaround:\n\n```php\npublic function beforeRender() {\n\tparent::beforeRender();\n\t$this->template->_form = $this['form']; // form {snippet} workaround\n}\n```\n\nSnippet je vÅ¡ak moÅ¾nÃ© zatÃ­m ÃºplnÄ vynechat, protoÅ¾e bude potÅeba aÅ¾ pÅi ajaxifikaci.\n\nCelÃ½ fÃ­gl je v tom, Å¾e musÃ­me zajistit, aby se hodnota druhÃ©ho select boxu nastavovala podle hodnoty prvnÃ­ho. V tomto stavu je jiÅ¾ moÅ¾nÃ© formulÃ¡Å spustit. Po vybrÃ¡nÃ­ v prvnÃ­m select boxu a odeslÃ¡nÃ­ formulÃ¡Åe se vybranÃ¡ hodnota nÃ¡slednÄ projevÃ­ v druhÃ©m select boxu. CelÃ© kouzlo je pouze v tÃ© druhÃ© ÅÃ¡dce formulÃ¡ÅovÃ© tovÃ¡rniÄky, kterÃ½ mi umoÅ¾nÃ­ pÅistoupit k hodnotÃ¡m prvkÅ¯. Je samozÅejmÄ nesmysl odesÃ­lat celÃ½ formulÃ¡Å pro zÃ­skÃ¡nÃ­ obsahu druhÃ©ho select boxu, proto si napÃ­Å¡eme krÃ¡tkÃ½ javascriptovÃ½ kÃ³d, kterÃ½ to za nÃ¡s vyÅeÅ¡Ã­ (nette.ajax.js):\n\n```javascript\n$(function(){\n\t$.nette.init();\n    \n\t$('select[name=one]').change(function () {\n\t\t$.nette.ajax({\n\t\t\turl: {link invalidate!},\n\t\t\tdata: {\n\t\t\t\t'value': $('select[name=one]').val(),\n\t\t\t}\n\t\t});\n\t});\n});\n```\n\nJakmile se zmÄnÃ­ hodnota prvnÃ­ho select boxu, zavolÃ¡me si handler a pÅedÃ¡me mu novou hodnotu. Tento handler bude mÃ­t za Ãºkol nastavit hodnoty druhÃ©ho select boxu a pouze tento prvek invalidovat:\n\n```php\npublic function handleInvalidate($value) {\n\t$this['form']['two']->setItems($this->database[$value]);\n\t$this->redrawControl('two');\n}\n```\n\nTÃ­m je vlastnÄ hotovo. Äistotu ÅeÅ¡enÃ­ ovÄÅÃ­me tÃ­m, Å¾e si vyzkouÅ¡Ã­me dump vybranÃ½ch poloÅ¾ek po odeslÃ¡nÃ­ formulÃ¡Åe:\n\n```php\npublic function success(UI\\Form $form, $vals) {\n\tdump($vals);\n}\n```\n\nÄistota spoÄÃ­vÃ¡ v tom, Å¾e poÅ¾adovanÃ© hodnoty skuteÄnÄ zÃ­skÃ¡me. To nenÃ­ ÃºplnÄ samozÅejmÃ©, protoÅ¾e v Nette existuje bezpeÄnostnÃ­ obrannÃ½ mechanismus, kterÃ½ zabraÅuje odeslÃ¡nÃ­ hodnot v select boxu, kterÃ© na zaÄÃ¡tku neobsahoval. Pokud nÄco takovÃ©ho udÄlÃ¡me tÅeba javascriptem, zÃ­kÃ¡me `NULL`. Aby se toto nedÄlo, musÃ­me takto relativnÄ sloÅ¾itÄ vyÅeÅ¡it tovÃ¡rniÄku pro formulÃ¡Å.\n\n# Å pinavÃ© ÅeÅ¡enÃ­\n\nÅ pinavÃ© ÅeÅ¡enÃ­ se od toho ÄistÃ© o moc neliÅ¡Ã­. MyÅ¡lenka je poÅÃ¡d stejnÃ¡, tentokrÃ¡t vÅ¡ak stojÃ­me pÅed jinÃ½m Ãºkolem. VezmÄme si pÅÃ­klad, kdy nÃ¡m zase aÅ¾ tolik nezÃ¡leÅ¾Ã­ na tom, jakÃ© zÃ­skÃ¡me v select boxu hodnoty a chceme ho pouÅ¾Ã­vat spÃ­Å¡e jako text input, kdy nabÃ­dneme uÅ¾ivateli nÄjakÃ½ vstup. TypickÃ½ pÅÃ­klad je text input pro URL adresu API, kdy po zadÃ¡nÃ­ kontaktujeme nÄjakÃ© API a nabÃ­dneme v selectu vrÃ¡cenÃ© hodnoty tak, aby je uÅ¾ivatel nemusel psÃ¡t. NetvrdÃ­m, Å¾e by to neÅ¡lo vyÅeÅ¡it ÄistÄ, ale Å¡pinavÃ© ÅeÅ¡enÃ­ je v tomto pÅÃ­padÄ pohodlnÄjÅ¡Ã­, rychlejÅ¡Ã­ a mohu na nÄm ukÃ¡zat i nÄco jinÃ©ho. TentokrÃ¡t si vytvoÅÃ­me ÃºplnÄ obyÄejnÃ½ formulÃ¡Å, tak jako jiÅ¾ mnohokrÃ¡t. NenÃ­ potÅeba Å¾Ã¡dnÃ©ho fÃ­glu. OpÄt si pÅipravÃ­me Å¡ablonu pro formulÃ¡Å obdobnÄ jako v pÅedchozÃ­m pÅÃ­padÄ. A obdobnÄ doplnÃ­me nÄjakÃ½ ten javascript. Zde bych klidnÄ mohl formulÃ¡Å upravit javascriptovÄ, ale mÄ se hodÃ­ zavolat si (po napsÃ¡nÃ­ URL adresy) handler, v nÄm vyÅeÅ¡it vÅ¡e potÅebnÃ© a invalidovat ÄÃ¡st formulÃ¡Åe.\n\n```javascript\nvar timer = null;\n$('input[name=url]').live('keyup', function () {\n\tif (timer) {\n\t\tclearTimeout(timer);\n\t}\n\ttimer = setTimeout(function () {\n\t\ttimer = null;\n\t\t$.nette.ajax({\n\t\t\turl: {link checkErp!},\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\t\"erpForm-url\": $('input[name=url]').val()\n\t\t\t}\n\t\t});\n\t}, 250);\n});\n```\n\nHandler nemÃ¡ smysl uvÃ¡dÄt. JednoduÅ¡e v nÄm vykonÃ¡m nÄjakou logiku, vrÃ¡tÃ­m data a invaliduji Å¡ablonu. Pozor na to, Å¾e pÅedchozÃ­ javascriptovÃ¡ ukÃ¡zka je tentokrÃ¡t ze separÃ¡tnÃ­ komponenty.\n\nZbÃ½vÃ¡ nÃ¡m vyÅeÅ¡it pouze odeslÃ¡nÃ­ a zpracovÃ¡nÃ­ formulÃ¡Åe. JelikoÅ¾ jsem byl teÄ lÃ­nÃ½ programÃ¡tor a select v tomto pÅÃ­padÄ beru spÃ­Å¡e jako text input, nemohu zÃ­skat hodnotu select boxu ve `$form->getValues()`, resp. v druhÃ©m parametru succeeded metody. MusÃ­m proto pouÅ¾Ã­t metodu `getHttpData`, kterÃ¡ mi umoÅ¾nÃ­ zÃ­skat jakÃ¡koliv data a zÃ¡roveÅ mÃ¡m jistotu, Å¾e jsou data oÅ¡etÅena:\n\n```php\npublic function erpFormSucceeded(UI\\Form $form, Nette\\Utils\\ArrayHash $values) {\n\ttry {\n\t\t$this->erpSystems->create([\n\t\t\tErpSystems::COLUMN_URL => $values->url,\n\t\t\tErpSystems::COLUMN_DATABASE => $form->getHttpData(UI\\Form::DATA_LINE, 'database'), // <- nÃ¡Å¡ select\n\t\t\tErpSystems::COLUMN_USER => $values->username,\n\t\t\tErpSystems::COLUMN_TOKEN => $values->password,\n\t\t]);\n\t\t//...\n\t} catch (\\PDOException $exc) {\n\t\t//...\n\t}\n\t//...\n}\n```\n\nV tomto Å¡pinavÃ©m ÅeÅ¡enÃ­ je vÅ¡ak zapotÅebÃ­ myslet na to, Å¾e v selectu mÅ¯Å¾e pÅijÃ­t naprosto cokoliv. To by vÅ¡ak nikoho nemÄlo pÅevapit. OstatnÄ i pÅi vytvÃ¡ÅenÃ­ formulÃ¡Åe staÄÃ­ vytvoÅit select box prÃ¡zdnÃ½, protoÅ¾e Å¾Ã¡dnÃ¡ vstupnÃ­ data ani neexistujÃ­.","frontmatter":"id: 420ed8a1-f8bb-42eb-9f8d-356783765357\ntimestamp: 1414868997000\ntitle: Dependent select box\nslug: dependent-select-box"},{"attributes":{"id":"fc390f36-af8a-43af-a34c-619f305e288c","timestamp":1414243893000,"title":"Heatmapy ve Wolfram Mathematica","slug":"heatmapy-ve-wolfram-mathematica"},"body":"![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/1bb55605-d567-4fe0-b1d1-69e921940e0d/heatmap1.png)\n\nPrÃ¡vÄ teÄ jsem ÅeÅ¡il jak vizualizovat nÄjakÃ¡ data, kterÃ¡ jsou v maticovÃ©m formÃ¡tu. Pro mÃ© ÃºÄely jsou prakticky dva grafy. PrvnÃ­m grafem je heatmapa (viz obrÃ¡zek) a druhÃ½m klasickÃ½ 3D graf, kterÃ½ data reprezentuje stejnÄ dobÅe (moÅ¾nÃ¡ lÃ©pe), ale v urÄitÃ½ch pÅÃ­padech je Å¡patnÄ ÄitelnÃ½. ZejmÃ©na pak kdyÅ¾ nenÃ­ moÅ¾nost s grafem otÃ¡Äet. V mÃ©m pÅÃ­padÄ bylo zapotÅebÃ­ pomÄrnÄ velkÃ© mnoÅ¾stvÃ­ grafÅ¯, kterÃ© jsem nakonec minimalizoval na poÄet 40, takÅ¾e bylo nemoÅ¾nÃ© je vykreslovat ruÄnÄ. ZvlÃ¡Å¡Å¥ pokud jsem zajistit, Å¾e budou vÅ¡echny grafy stejnÃ©.\n\nK tomu jak jsem postupoval se dostanu v dalÅ¡Ã­ ÄÃ¡sti. TeÄ vÅ¡ak jeÅ¡tÄ pÃ¡r ÃºvodnÃ­ch slov k tomu, co jsem to vlastnÄ mÄÅil. CÃ­lem mÄÅenÃ­ bylo zmÄÅit s vyuÅ¾itÃ­m jasomÄrÅ¯ hodnoty jasÅ¯ *L [cd/m^2]* urÄitÃ½ch objektÅ¯ a jejich okolÃ­ v pravidelnÃ© sÃ­ti kontrolnÃ­ch bodÅ¯ pÅi rÅ¯znÃ©m osvÄtlenÃ­ (dennÃ­, sdruÅ¾enÃ© a umÄlÃ©) a rÅ¯znÃ© vzdÃ¡lenosti a Ãºhlu. Z tÄchto jasÅ¯ je zapotÅebÃ­ spoÄÃ­tat kontrast *C [-]* a tuto kontrastnÃ­ mapu takÃ© vizualizovat. Je tedy zÅejmÃ©, Å¾e staÄÃ­ zmÄÅit pÃ¡r objektÅ¯ a poÄet grafÅ¯ rychle roste.\n\n# Vizualizace dat\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/40a97326-5410-4385-821c-62dc8542387a/3d2.png)\nTato ÄÃ¡st se sice jmenuje vizualizace dat, ale aby bylo co vizualizovat, je zapotÅebÃ­ data pÅipravit. JÃ¡ jsem zvolil JSON formÃ¡t vstupu, protoÅ¾e se velmi jednoduÅ¡e parsuje a matici v nÄm mohu zapsat takÃ© jednoduÅ¡e. Z mÄÅenÃ­ jednoho objektu mi tedy staÄÃ­ data v tomto formÃ¡tu:\n\n```javascript\n{\n\t\"Tabule - umÄlÃ© osvÄtlenÃ­\": {\n\t\t\"up\": \"STROP\",\n\t\t\"down\": \"PODLAHA\",\n\t\t\"left\": \"OKNA\",\n\t\t\"right\": \"DVEÅE\",\n\t\t\"values\": [\n\t\t\t[121.3, 146, 74.2, 39.5, 27.6, 53.9, 66.7],\n\t\t\t[96.5, 86.1, 80.2, 54.8, 47.3, 65.8, 79.5],\n\t\t\t[82.6, 78, 71.8, 65.3, 58.7, 62.3, 79.5],\n\t\t\t[63.8, 71.5, 66.7, 63, 59.4, 63.2, 77.5],\n\t\t\t[62.4, 61, 63.9, 62.4, 62.7, 63.4, 70.5]\n\t\t]\n\t}\n}\n```\n\nTakovÃ½ch dat je jiÅ¾ moÅ¾nÃ© se chytit a vykreslit celou Åadu prÅ¯bÄhÅ¯. SamotnÃ½ parser se vÅ¡ak postupem Äasu pomÄrnÄ zkomplikoval. ProhlÃ©dnout si ho vÅ¡ak mÅ¯Å¾ete [na GitHub Gistu](https://gist.github.com/mrtnzlml/9ec02541555e419a8df9#file-parser7-php) a to vÄetnÄ kompletnÃ­ho vstupu a vÃ½slednÃ©ho vÃ½stupu pro Wolfram Mathematica. Tento vÃ½stup je v zÃ¡sadÄ jednoduchÃ½. NapÅÃ­klad graf, kterÃ½ je v Ãºvodu vykreslÃ­me pomocÃ­ nÃ¡sledujÃ­cÃ­ho vÃ½stÅiÅ¾ku:\n\n```php\nShow[MatrixPlot[{\n\t{-0.063, -0.753, -0.706, -0.788, -0.443, 0.311, 0.327},\n\t{0.619, 0.613, 0.671, -0.013, -0.162, 0.295, 0.344},\n\t{0.297, 0.441, 0.351, 0.178, 0.087, 0.166, 0.339},\n\t{-0.085, 0.27, 0.225, 0.155, 0.118, 0.163, 0.317},\n\t{-0.033, 0.017, -0.015, 0.03, 0.019, 0.077, 0.198}\n}, PlotTheme -> \"Detailed\", Mesh -> Automatic, MeshStyle -> Directive[GrayLevel[0], Opacity[0.5], Dashing[{0, Small}]]],\nFrameLabel -> {{HoldForm[OKNA], HoldForm[DVEÅE]}, {HoldForm[PODLAHA], HoldForm[STROP]}},\nPlotLabel -> RawBoxes[\"Tabule - umÄlÃ© osvÄtlenÃ­, zezadu (kontrast, Lp = 59.7)\"], LabelStyle -> {GrayLevel[0]}]\n```\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/79b1a8e3-1efc-42b0-bb79-3409b9acd49d/3d.png)\n\nKromÄ nastavovÃ¡nÃ­ popisek a zÃ¡hlavÃ­, tak je dÅ¯leÅ¾itÃ½ hlavnÄ blok kde jsou data. V tomto grafu nenÃ­ Å¾Ã¡dnÃ¡ zrada. MalÃ¡ zrada ÄÃ­hÃ¡ aÅ¾ v 3D grafech. Zde je hÃ¡Äek v tom, Å¾e obÄas relativnÄ malÃ¡ plocha grafu ustÅelÃ­ mimo prÅ¯mÄrnou hodnotu vÅ¡ech bodÅ¯ a na grafu dojde k oÅÃ­znutÃ­. Aby se tomuto efektu pÅedeÅ¡lo, je bezpodmÃ­neÄnÄ nutnÃ© nastavit grafu `PlotRange -> All`. TÃ­m se vykreslÃ­ celÃ½ graf nezÃ¡visle na tom, jakÃ© obsahuje extrÃ©mnÃ­ hodnoty. Je vÅ¡ak otÃ¡zka jestli je to Å¾Ã¡doucÃ­. V mÃ©m pÅÃ­padÄ ano, ale umÃ­m si pÅestavit pÅÃ­pady, kdy by velkÃ¡ Å¡piÄka totÃ¡lnÄ zniÄila celÃ½ graf a bylo by vÃ½hodnÄjÅ¡Ã­ spiÄku oÅÃ­znout.\n\n```php\nListPlot3D[{\n\t{62.4, 61, 63.9, 62.4, 62.7, 63.4, 70.5},\n\t{63.8, 71.5, 66.7, 63, 59.4, 63.2, 77.5},\n\t{82.6, 78, 71.8, 65.3, 58.7, 62.3, 79.5},\n\t{96.5, 86.1, 80.2, 54.8, 47.3, 65.8, 79.5},\n\t{121.3, 146, 74.2, 39.5, 27.6, 53.9, 66.7}\n}, ColorFunction -> \"DarkRainbow\", PlotRange -> All, PlotTheme -> \"Business\"]\n```\n\nPro vykreslenÃ­ hornÃ­ho pohledu staÄÃ­ pÅidat dalÅ¡Ã­ atribut `ViewPoint -> Above`, ÄÃ­mÅ¾ zÃ­skÃ¡me teplotnÃ­ mapu v troÅ¡ku jinÃ©m zobrazenÃ­ a dÃ­ky Business tÃ©matu budou na grafu vidÄt i vrstevnice, coÅ¾ ulehÄÃ­ pÅedstavu o tom jak je graf tvarovÄ rozloÅ¾en. <span style=\"color:green\">TakÃ© pozor na to, Å¾e do funkcÃ­ `MatrixPlot` a `ListPlot3D` se zadÃ¡vajÃ­ matice v obrÃ¡cenÃ©m poÅadÃ­ z hlediska ÅÃ¡dek matice! Dojde tak ke vykreslenÃ­ stejnÃ½ch map.</span>","frontmatter":"id: fc390f36-af8a-43af-a34c-619f305e288c\ntimestamp: 1414243893000\ntitle: Heatmapy ve Wolfram Mathematica\nslug: heatmapy-ve-wolfram-mathematica"},{"attributes":{"id":"db4ac671-20f0-4c4b-b551-129b719fd510","timestamp":1413669750000,"title":"NastavenÃ­ TIM3 na STM32F207xx","slug":"nastaveni-tim3-na-stm32f207xx"},"body":"Tento ÄlÃ¡nek uÅ¾ mÃ¡m dlouhou dobu v hlavÄ, ale nikdy jsem se neodvÃ¡Å¾il jej sepsat. MÃ¡ to svÅ¯j smysl. JednÃ¡ se o pomÄrnÄ nÃ¡roÄnou problematiku, kterou si myslÃ­m, Å¾e moc lidÃ­ nechÃ¡pe. RÃ¡d bych tedy tÃ­mto popÃ­chnul ÄtenÃ¡Åe o zpÄtnou vazbu a pokud by se ukÃ¡zalo, Å¾e to smysl mÃ¡, pokraÄoval bych nÄkam dÃ¡l do sloÅ¾itÄjÅ¡Ã­ch vÄcÃ­, protoÅ¾e toto bude ve vÃ½sledku smÄÅ¡nÄ jednoduchÃ©... (-:\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/f34b6d82-9aaf-4089-afe6-81993d596885/stm32.png)\n\nK dispozici mÃ¡m momentÃ¡lnÄ dva procesory, ale budu ÅeÅ¡it konkrÃ©tnÄ `STM32F207xx`. Ten druhÃ½ je ze `4xx` Åady, ale dÃ­ky novÃ½m Cube knihovnÃ¡m nenÃ­ v programech Å¾Ã¡dnÃ½ rozdÃ­l. AlespoÅ ne v tom, co bu ukazovat dnes. [STM32F207](http://www.st.com/web/catalog/mmc/FM141/SC1169/SS1575/LN9/PF245085) je procesor zaloÅ¾enÃ½ na 32-bit ARM(R) Cortex(R)-M3 od STMicroelecronics. JednÃ¡ se o procesor s 120 MHz jÃ¡drem, 1024 kB flash pamÄtÃ­ na program a 128 kB SRAM. CelkovÄ se jednÃ¡ o pomÄrnÄ vÃ½konnou mrÅ¡ku na kterÃ© se toho nechÃ¡ upoÄÃ­tat pomÄrnÄ hodnÄ a hlavnÄ dokÃ¡Å¾e ovlÃ¡dat velkÃ© mnoÅ¾stvÃ­ rozmanitÃ½ch periferiÃ­ viz obrÃ¡zek. Na obrÃ¡zku je pÅesnÄ ta samÃ¡ eval deska s tÃ­m samÃ½m procesorem, na kterou prÃ¡vÄ teÄ koukÃ¡m. NejzajÃ­mavÄjÅ¡Ã­ bude teÄ vÅ¡ak prÃ¡vÄ onen procesor, kterÃ½ je uprostÅed desky a SMD diody, kterÃ© nejsou tÃ©mÄÅ vÅ¯bec vidÄt. Ty jsou umÃ­stÄny nad Wakeup tlaÄÃ­tkem tÃ©mÄÅ pod displejem.\n\nA teÄ koneÄnÄ o Äem budu psÃ¡t. TIM3 je timer ze skupiny TIM2-5. JednÃ¡ se o timer naprosto bÄÅ¾nÃ½ a obyÄejnÃ½. Celkem jich je k dispozici 14 ve 4 skupinÃ¡ch podle spoleÄnÃ½ch vlastnostÃ­. PodÃ­vat se na nÄ mÅ¯Å¾ete do [referenÄnÃ­ pÅÃ­ruÄky](http://www.st.com/web/en/resource/technical/document/reference_manual/DM00031020.pdf), ale pozor aÅ¥ se vÃ¡m z toho nezamotÃ¡ hlava, je toho tam fak hodnÄ... (-: UkÃ¡Å¾eme jak tento timer nastavit tak aby bylo moÅ¾nÃ© blikat diodou jednou za 1000 ms. NavÃ­c k tomu nebudeme vyuÅ¾Ã­vat vÃ½konu procesoru, ale vyuÅ¾ijeme pÅeruÅ¡enÃ­, takÅ¾e nebudeme procesor vÅ¯bec niÄÃ­m zdrÅ¾ovat. O zrovna ÄekÃ¡nÃ­ procesoru 1000 ms, neÅ¾ bude moci bliknout diodou by byl sluÅ¡nÃ½ zabijÃ¡k vÃ½konu.\n\n# NastavenÃ­ TIMx a diod\n\nJe to jednudchÃ©. V souboru `main.c` existuje klasickÃ¡ viod metoda s while smyÄkou, kterÃ¡ bude na zaÄÃ¡tku i na konci tohoto programu prÃ¡zdnÃ¡:\n\n```cpp\n#include \"main.h\"\nint main(void) {\n\tHAL_Init();\n    SystemClock_Config();\n\t# ...\n\twhile (1) {\n\t}\n}\n```\n\nCÃ­lem je neudÄlat Å¾Ã¡dnou blbost a nechat procesor nejlÃ©pe bez toho aby nÄco musel poÄÃ­tat, coÅ¾ je dÃ­ky pÅeruÅ¡enÃ­ moÅ¾nÃ© a doporuÄovanÃ©. HAL (Hardware abstraction layer) vrstu a systÃ©movÃ© hodiny nastavÃ­me co nejdÅÃ­ve. `HAL_Init();` je systÃ©movÃ¡ funkce Cube knihoven, kterÃ¡ provede inicializaci HW abstraktnÃ­ vrstvy. Ve skuteÄnosti HAL_Init spouÅ¡tÃ­ celou Åadu dalÅ¡Ã­ch initÅ¯. `SystemClock_Config();` je jiÅ¾ uÅ¾ivatelskÃ¡ metoda, kterÃ¡ je umÃ­stÄna v kaÅ¾dÃ©m demu v Cube Examples, takÅ¾e ji sem nebudu pÅepisovat. Je tÃ©mÄÅ vÅ¾dy stejnÃ¡. NÃ¡sledovat by vÅ¡ak mÄla inicializace diod. Dalo by se to udÄlat i sloÅ¾itÄ, ale s vyuÅ¾itÃ­m BSP (Board support package) je inicializace triviÃ¡lnÃ­:\n\n```cpp\nBSP_LED_Init(LED1);\n# LED2, LED3, LED4\n```\n\nTeÄ tedy mÃ¡me nastartovanou desku, hodiny a pÅipravenÃ© diody k pouÅ¾itÃ­. NezbÃ½vÃ¡ neÅ¾ se pustit do nastavovÃ¡nÃ­ timeru:\n\n```cpp\n/*##-1- Configure the TIM peripheral #######################################*/\nTimHandle.Instance = TIMx;\nTimHandle.Init.Period = 10000;\nTimHandle.Init.Prescaler = (uint32_t)(((SystemCoreClock / 2) / 10000) - 1); //10kHz\n// T = 1/f = 1/10k = 0,0001 ; time = Period * T = 1s\nTimHandle.Init.ClockDivision = 0;\nTimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;\nif(HAL_TIM_OC_Init(&TimHandle) != HAL_OK) {\n\tError_Handler();\n}\n```\n\n`TIMx` je v `main.h` nastaven na TIM3, period je dÃ©lka intervalu a prescaler je pÅeddÄliÄka frekvence, kterÃ¡ je dÃ­ky tomu vÃ½poÄtu nastavena nezÃ¡visle na rychlosti hodin na jednotnou frekvenci 10 kHz. TeÄ si staÄÃ­ jen oprÃ¡Å¡it stÅedoÅ¡kolskou elektroniku. Pokud vÃ­me, Å¾e `T = 1/f` a frekvence je 10 000 Hz, pak je perioda takovÃ©ho prÅ¯bÄhu 0,1 ms. To je docela prÅ¯ser, protoÅ¾e je to sraÅ¡nÄ rychlÃ©. Proto je zde prÃ¡vÄ ta perioda timeru, kde v podstatÄ ÅÃ­kÃ¡me, Å¾e toto mÃ¡ probÄhnout 10 000x a pak aÅ¾ cvrnknout timerem. A voilÃ , mÃ¡me 1 vteÅinu. `TIM_COUNTERMODE_UP` pÅÃ¡vÄ ÅÃ­kÃ¡, Å¾e bude poÄÃ­tat dokud nenarazÃ­ na strop a pak timer pÅeteÄe. Snad jedinÄ pozor na jednu zradu. TIM3 mÃ¡ prescaler 16 bitovÃ½, tzn. lze nastavit maximÃ¡lnÄ hodnotu 2^16 -1 = 65535! Vzhledem k tomu, Å¾e to z vÃ½poÄtu nenÃ­ pÅÃ­mo vidÄt, tak se na to mÅ¯Å¾ete snadno nachytat a timer pak pobÄÅ¾Ã­ jinak neÅ¾ bylo poÅ¾adovÃ¡no. DÃ¡le si nastavÃ­me kanÃ¡l, kterÃ½ budeme vyuÅ¾Ã­vat k blikÃ¡nÃ­ diodou, protoÅ¾e teÄ timer pouze dojede na 10 000 a vyresetuje se:\n\n```cpp\n/*##-2- Configure the Output Compare channels #########################################*/\nsConfig.OCMode = TIM_OCMODE_TOGGLE;\nsConfig.Pulse = uhCCR1_Val;\nsConfig.OCPolarity = TIM_OCPOLARITY_LOW;\nif(HAL_TIM_OC_ConfigChannel(&TimHandle, &sConfig, TIM_CHANNEL_1) != HAL_OK) {\n\tError_Handler();\n}\nsConfig.Pulse = uhCCR2_Val;\nif(HAL_TIM_OC_ConfigChannel(&TimHandle, &sConfig, TIM_CHANNEL_2) != HAL_OK) {\n\tError_Handler();\n}\n```\n\nPÅed vstupem do main metody je zapotÅebÃ­ nastavit si jeÅ¡tÄ pulse hodnoty:\n\n```cpp\n__IO uint32_t uhCCR1_Val = 100;\n__IO uint32_t uhCCR2_Val = 200;\n```\n\nAbych to krÃ¡tce vysvÄtlil. TÃ­mto jsem si nastavil, Å¾e aÅ¾ timer dosÃ¡hne hodnoty 100 a 200, tak cvrnkne a to pokaÅ¾dÃ© do jinÃ©ho kanÃ¡lu. PÅi dosaÅ¾enÃ­ maxima (10 000) dojde k pÅeteÄenÃ­ timeru a ten zaÄne poÄÃ­tat znovu. Je jedno jak tyto hodnoty nastavÃ­m, ale musÃ­ bÃ½t od sebe 100 ms. Chci totiÅ¾ zapnout diodu a dned ji vypnout. Toto se bude opakovat kaÅ¾dnÃ½ch 1000 ms viz pÅedchozÃ­ nastavenÃ­ timeru. Super, takÅ¾e teÄ mÃ¡me timer co poÄÃ­tÃ¡ a v urÄitÃ©m okamÅ¾iku poÅ¡le dva signÃ¡ly. Tak to nahodÃ­me a jedeme... (-:\n\n```cpp\n/*##-3- Start signals generation #######################################*/\n/* Start channel 1 in Output compare mode */\nif(HAL_TIM_OC_Start_IT(&TimHandle, TIM_CHANNEL_1) != HAL_OK) {\n\tError_Handler();\n}\nif(HAL_TIM_OC_Start_IT(&TimHandle, TIM_CHANNEL_2) != HAL_OK) {\n\tError_Handler();\n}\n```\n\nSkvÄlÃ© na tom je to, Å¾e teÄ uÅ¾ to fakt cvakÃ¡ a staÄÃ­ se na to jen povÄsit pÅepÃ­nÃ¡nÃ­ stavu diod.\n\n# KoneÄnÄ blikÃ¡me!\n\nK tomu, aby bylo moÅ¾nÃ© blikat, musÃ­me se chytit callbacku, kterÃ½ je v HAL pÅipraven. Zde se podÃ­vÃ¡me, jestli je danÃ½ kanÃ¡l aktivnÃ­ a pokud ano, znamenÃ¡ to, Å¾e mÅ¯Å¾eme nÄco udÄlat. V tomto pÅÃ­padÄ tedy nejdÅÃ­ve zapnu diodu a za 100 ms pÅijde signÃ¡l druhÃ½m kanÃ¡lem a jÃ¡ ji mohu opÄt vypnout. Za 1s se celÃ½ proces opakuje. ParÃ¡da!\n\n```cpp\n/**\n  * @brief  Output Compare callback in non blocking mode \n  * @param  htim : TIM OC handle\n  * @retval None\n  */\nvoid HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim) {\n\tif(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1) {\n\t\tBSP_LED_On(LED1);\n  \t}\n\tif(htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2) {\n\t\tBSP_LED_Off(LED1);\n  \t}\n}\n```\n\nJeÅ¡tÄ bych mÄl zmÃ­nit metodu `Error_Handler();`, kterÃ¡ se zde Äasto opakuje. Je to metoda, kterÃ¡ se zavolÃ¡, kdyÅ¾ se nÄco nepovede a jejÃ­ obsah mÅ¯Å¾e bÃ½t opÄt prÃ¡zdnÃ¡ smyÄka, aby procesor nezaÄal dÄlat nÄjakÃ© nesmysly:\n\n```cpp\n/**\n  * @brief  This function is executed in case of error occurrence.\n  * @param  None\n  * @retval None\n  */\nstatic void Error_Handler(void) {\n\tBSP_LED_On(LED4);\n\twhile(1) {}\n}\n```\n\nAsi nenÃ­ ÃºplnÄ hloupÃ© zapnout i nÄjakou (Äervenou) diodu, kterÃ¡ bude signalizovat error. RÃ¡d bych zmÃ­nil to, Å¾e by bylo moÅ¾nÃ© v main metodÄ v cyklu spustit `BSP_LED_Toggle(LED4);` a poÄkat 1 vteÅinu. To by bylo funkÄnÃ­, ale jak by se ukÃ¡zalo Äasem, tak by tento program mohl slouÅ¾it pouze pro blikÃ¡nÃ­ diodou, coÅ¾ nenÃ­ moc uÅ¾iteÄnÃ©. Pokud bych se k tomu dostal, tak si mÅ¯Å¾eme ukÃ¡zat jak pracovat s ethernetem a zde se ukÃ¡Å¾e, Å¾e je prÃ¡zdnÃ½ while potÅeba. TÃ­mto zpÅ¯sobem mi vÅ¡ak nic nebrÃ¡nÃ­ blikat si diodou a vedle toho jeÅ¡tÄ tlaÄit data ethernetem pryÄ...\n\nTak co, dalo se to vydrÅ¾et? :-)","frontmatter":"id: db4ac671-20f0-4c4b-b551-129b719fd510\ntimestamp: 1413669750000\ntitle: NastavenÃ­ TIM3 na STM32F207xx\nslug: nastaveni-tim3-na-stm32f207xx"},{"attributes":{"id":"e469395b-c4f9-42db-bcf2-b2f1bc49f2e7","timestamp":1413406213000,"title":"FÃ­gloidnÃ­ odstranÄnÃ­ zÃ¡hlavÃ­ modulu","slug":"figloidni-odstraneni-zahlavi-modulu"},"body":"DneÅ¡nÃ­ ÄlÃ¡nek bude spÃ­Å¡e zÃ¡pisek, protoÅ¾e jsem ÅeÅ¡enÃ­ tohoto problÃ©mu hledal neskuteÄnÄ dlouho a jak se pozdÄji ukÃ¡zalo, tak ÅeÅ¡enÃ­ je sice jednoduchÃ©, ale je zakoÅenÄnÃ© hluboko v jÃ¡dru Odoo ERP systÃ©mu. O co jde. ObÄas je potÅeba schovat zÃ¡hlavÃ­ (viz obrÃ¡zek) u nÄkterÃ½ch modulÅ¯.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/ddfc321c-2190-4cf6-98a9-89852713e626/vystrizek.png)\n\nTento panel mÃ¡ sice dobrÃ½ dÅ¯vod, ale existujÃ­ pÅÃ­pady, kde je prostÄ nadbyteÄnÃ½. TypickÃ½ pÅÃ­pad takovÃ© nadbyteÄnosti je modul Dashboards (technickÃ½ nÃ¡zev `board`) kdy je tento prostor nijak nevyuÅ¾Ã­vanÃ½. ZÅejmÄ by tento problÃ©m Å¡el ÅeÅ¡it nÄjakÃ½ hackem, ale to prostÄ nenÃ­ dobÅe. ProblÃ©m je [zde](https://github.com/odoo/odoo/blob/8.0/addons/web/static/src/js/views.js#L905). \"Special case for Dashboards\"...\n\n# Jak na to\n\nAsi ÃºplnÄ nejjasnÄjÅ¡Ã­ bude, kdyÅ¾ popÃ­Å¡u posloupnost krokÅ¯, kterÃ© vedou ke sprÃ¡vnÃ©mu ÅeÅ¡enÃ­. NejednÃ¡ se o nic kompikovanÃ©ho. VÅ¡echny nÃ­Å¾e uvÃ¡dÄnÃ© postupy jsou klasickÃ© postupy pÅi vÃ½voji modulu. Jen je (do teÄ) pravdÄpodobnÄ nikde nenajdete, nebo nad tÃ­m zbyteÄnÄ vytuhnete na zoufale dlouhou dobu. OstatnÄ [podÃ­vejte se](https://searchcode.com/?q=views_switcher%20lang:Javascript), jak je vÃ½skyt tohoto kousku uÅ¾iteÄnÃ©ho kÃ³du [pouÅ¾Ã­vanÃ½](https://github.com/odoo/odoo/search?l=javascript&q=views_switcher&type=Code&utf8=%E2%9C%93) v public repozitÃ¡ÅÃ­ch... :-)\n\n<span style=\"font-size:2em\">1.</span> Registrace XML definice v `__openerp__.conf`\n\nTato zÃ¡leÅ¾itost je asi celkem jasnÃ¡. JednoduÅ¡e musÃ­me definovat, Å¾e se mÃ¡ pÅi compile-time brÃ¡t ohled na XML soubor, ve kterÃ©m zaregistrujeme JS soubor viz dalÅ¡Ã­ bod.\n\n```python\n{\n    #...\n    \n    'data': [\n        'views/header.xml',\n    ],\n    \n    #...\n}\n```\n\n<span style=\"font-size:2em\">2.</span> Registrace JS souboru\n\nTo jsem to ale nazval blbÄ... (-: V pÅedchozÃ­m bodÄ je tedy definovanÃ¡m soubor v podadresÃ¡Åi `views`, jehoÅ¾ obsah je napÅ. takovÃ½to:\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openerp>\n    <data>\n        <template id=\"assets_backend\" name=\"queue assets\" inherit_id=\"web.assets_backend\">\n            <xpath expr=\".\" position=\"inside\">\n                <script type=\"text/javascript\" src=\"/module_name/static/src/js/header.js\"/>\n            </xpath>\n        </template>\n    </data>\n</openerp>\n```\n\nTato registrace je naprosto bÄÅ¾nÃ¡. ERP se k tomu pak stavÃ­ pomÄrnÄ chytÅe, takÅ¾e kdyÅ¾ je ERP v `?debug=` mÃ³du, tak souboru vracÃ­ tak jak jsou, jinak je vÅ¡echny sklÃ¡dÃ¡ do jednoho a provÃ¡dÃ­ minimalizaci. V tomto pÅÃ­padÄ je rozdÃ­l signifikantnÃ­.\n\n<span style=\"font-size:2em\">3.</span> Javascript definice\n\nJe znÃ¡mÃ¡ vÄc, Å¾e si toto ERP bez JS ani neuprdne. Na jednu stranu mÄ to troÅ¡ku Å¡tve, na druhou stranu to nemÃ¡ vÅ¯bec smysl ÅeÅ¡it. DalÅ¡Ã­m krokem proto bude definice na stranÄ JS, kterÃ¡ zakÃ¡Å¾e tomuto konkrÃ©tnÃ­mu view vykreslenÃ­ headeru:\n\n```javascript\nopenerp.module_name = function (instance) {\n    //var QWeb = instance.web.qweb;\n    if (!instance.module_name) {\n        instance.module_name = {};\n    }\n\n    //zde navÃ­c napÅ. definice pro instance.web.qweb\n\n    instance.web.ViewManagerAction.include({\n        init: function(parent, action) {\n            var flags = action.flags || {};\n            if (action.res_model == 'module_model' && action.view_mode === 'form') {\n                _.extend(flags, {\n                    views_switcher : false,\n                    display_title : false,\n                    search_view : false,\n                    pager : false,\n                    sidebar : false,\n                    action_buttons : false\n                });\n            }\n            action.flags = flags\n            this._super(parent, action);\n        },\n    });\n}\n```\n\nToto nastavenÃ­ je vlastnÄ ÃºplnÄ to stejnÃ©, jako je v jÃ¡dru. JednÃ¡ se o naprosto korektnÃ­ a ÄistÃ© ÅeÅ¡enÃ­. BohuÅ¾el je nutnÃ© jej ÅeÅ¡it touto myÅ¡kou, protoÅ¾e toto nenÃ­ funkce, kterÃ¡ je (nebo by do budoucna mÄla bÃ½t) pÅÃ­mo podporovÃ¡na. DÃ¡vÃ¡ to smysl, protoÅ¾e se jednÃ¡ o skuteÄnÄ krajnÃ­ pÅÃ­pad.\n\nA na zÃ¡vÄr mÃ¡m pro vÅ¡echny ÄtenÃ¡Åe tÅeÅ¡niÄku v podobÄ easter eggu. VyzkouÅ¡ejte si doplnit do URL parametr `?kitten=`, stejnÄ jako se doplÅuje napÅÃ­klad ten parametr pro zapnutÃ­ debug reÅ¾imu... (-: *#yourewelcome*","frontmatter":"id: e469395b-c4f9-42db-bcf2-b2f1bc49f2e7\ntimestamp: 1413406213000\ntitle: FÃ­gloidnÃ­ odstranÄnÃ­ zÃ¡hlavÃ­ modulu\nslug: figloidni-odstraneni-zahlavi-modulu"},{"attributes":{"id":"62e5abe0-44b9-407d-9582-39b8ff2bd176","timestamp":1411922332000,"title":"HledÃ¡ se obchodnÃ­k","slug":"hleda-se-obchodnik"},"body":"TentokrÃ¡t nebudu psÃ¡t o niÄem technickÃ©m, ale vezmu to hned od druhÃ© vÄty vÃ¡Å¾nÄ. Do [Orgis IT](http://www.orgis.cz/) schÃ¡nÃ­me obchodnÃ­ka primÃ¡rnÄ pro Prahu / PlzeÅ pro rozÅ¡Ã­ÅenÃ­ obchodnÃ­ho teamu. Po dlouhÃ©m rozmÃ½Å¡lenÃ­ mÃ¡me jasno co poÅ¾adujeme. NejednÃ¡ se o nic zvlÃ¡Å¡tnÃ­ho. Klasicky vyÅ¾adujeme samostatnost, pruÅ¾nost a spolehlivost. To jsou celkem bÄÅ¾nÃ© poÅ¾adavky, takÅ¾e nemÃ¡ smysl je zde ÅeÅ¡it. MÃ¡ vÅ¡ak smysl ÅeÅ¡it obchodnÃ­ nÃ¡plÅ. JelikoÅ¾ se jednÃ¡ o IT firmu, byl by vhodnÃ½ alespoÅ zÃ¡kladnÃ­ pÅehled o tom co Orgis IT nabÃ­zÃ­. PrimÃ¡rnÄ se teÄ zamÄÅujeme na serverovÃ¡ ÅeÅ¡enÃ­ (opravdu velkÃ¡) a vnitropodnikovÃ© ERP systÃ©my o kterÃ© je nejvÄtÅ¡Ã­ zÃ¡jem. JelikoÅ¾ se jednÃ¡ o mÃ­sty dost kompikovanou zÃ¡leÅ¾itost na pochopenÃ­, obchodnÃ­k projde odbornÃ½m zaÅ¡kolenÃ­m a i po zaÅ¡kolenÃ­ bude obchodnÃ­k Ãºzce spolupracovat se silnou technickou podporou a s lidmi z technickÃ© specifikace.\n\nÅ½ivotopisy zasÃ­lejte na <span style=\"font-size:25px\"><a href=\"mailto:hr@orgis.cz\">hr@orgis.cz</a></span>\n\nUvÃ­tÃ¡me dlouhodobou spoluprÃ¡ci, protoÅ¾e se jednÃ¡ o velice dynamickÃ½ obor, kde je potÅeba nemalÃ¡ ÄasovÃ¡ investice jak z naÅ¡Ã­ strany, tak ze strany obchodnÃ­ka. V pÅÃ­padÄ oboustrannÃ© spokojenosti rÃ¡di navÃ¡Å¾eme spoluprÃ¡ci i pro rozvoj na zahraniÄnÃ­m trhu. Preferujeme prÃ¡ci pÅedevÅ¡Ã­m na Å½L, kdy bude vÃ½Å¡e odmÄn zÃ¡vislÃ¡ na obratu. Tato vÃ½Å¡e nenÃ­ omezena pÃ¡smovÄ, ani Å¾Ã¡dnou hornÃ­ hranicÃ­.\n\nBtw, stav se pro vÃ­ce informacÃ­ a zajdeme nÄkam na pivko... (-:\n<br>\n(PlzeÅ)","frontmatter":"id: 62e5abe0-44b9-407d-9582-39b8ff2bd176\ntimestamp: 1411922332000\ntitle: HledÃ¡ se obchodnÃ­k\nslug: hleda-se-obchodnik"},{"attributes":{"id":"827f7559-3d1a-4888-a6fb-4b421a6d7bd5","timestamp":1409409052000,"title":"Kdyby\\\\Console","slug":"kdyby-console"},"body":"ExistujÃ­ knihovny, bez kterÃ½ch bych si vÃ½voj webovÃ½ch aplikacÃ­ jiÅ¾ tÃ©mÄÅ nedokÃ¡zal pÅedstavit. JednÃ­m z nich je [Kdyby\\Console](https://github.com/kdyby/console). JiÅ¾ dÅÃ­ve jsem sice napsal ÄlÃ¡nek o [Nette CliRouteru](nette-2-1-dev-clirouter), ale postupem Äasu a hlavnÄ takÃ© dÃ­ky Doctrine jsem velmi rychle a rÃ¡d pÅeÅ¡el na jinÃ© a dokonalejÅ¡Ã­ ÅeÅ¡enÃ­. Vzhledem k tomu, Å¾e na jednom projektu pouÅ¾Ã­vÃ¡m tuto knihovnu velmi hodnÄ a vlastnÄ na nÃ­ celÃ½ projekt stojÃ­, rÃ¡d bych alespoÅ prostÅednictvÃ­m tohoto ÄlÃ¡nku autorovi podÄkoval ([Filip ProchÃ¡zka](https://github.com/fprochazka)). ZÃ¡roveÅ bych tÃ­mto poÄÃ­nÃ¡nÃ­m rÃ¡d postupnÄ smazÃ¡val vÄÄnÃ½ problÃ©m tÄchto knihoven, protoÅ¾e vÄtÅ¡inou z hlediska nÃ¡vÅ¡tÄvnÃ­ka ani nenÃ­ jasnÃ©, na co ta knihovna je...\n\n# ProÄ uvaÅ¾ovat o konzoli?\n\nPro mÄ je tato otÃ¡zka celkem jednoduchÃ¡, protoÅ¾e mÃ¡m projekty, kterÃ© nejedou jen na sdÃ­lenÃ©m hostingu, ale jsou to samostatnÄ stojÃ­cÃ­ aplikace. Z toho plyne, Å¾e je Äasto zapotÅebÃ­ vykonÃ¡vat pomocÃ­ CRONu velkÃ© mnoÅ¾stvÃ­ ÃºkolÅ¯. Toto je hlavnÃ­ ÄÃ¡st, proÄ vÅ¯bec o konzolovÃ©m nÃ¡stroji uvaÅ¾uju. PouÅ¾itÃ­ je totiÅ¾ velmi jednoduchÃ© a prÃ¡vÄ samotnÃ¡ Doctrine nabÃ­zÃ­ prostÅednictvÃ­m Kdyby\\Console celou Åadu klasickÃ½ch pÅÃ­kazÅ¯ a je Å¡koda je nevyuÅ¾Ã­vat. StaÄÃ­ spustit z pÅÃ­kazovÃ© ÅÃ¡dky `php index.php` u aplikace a pokud jsou pÅÃ­kazy zaregistrovÃ¡ny v konfigu, vypÃ­Å¡e se jejich seznam vÄetnÄ nÃ¡povÄd:\n\n```\nC:\\xampp\\htdocs\\zeminem.cz\\www>php index.php\nNette Framework version 2.2.3-RC2\n\nUsage:\n  [options] command [arguments]\n\nOptions:\n  --help           -h Display this help message.\n  --quiet          -q Do not output any message.\n  --verbose        -v|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\n  --version        -V Display this application version.\n  --ansi              Force ANSI output.\n  --no-ansi           Disable ANSI output.\n  --no-interaction -n Do not ask any interactive question.\n\nAvailable commands:\n  help                       Displays help for a command\n  list                       Lists commands\nblog\n  blog:install               Install database schema (set-up DB credentials in config.local.neon).\n  blog:update                Update database schema (set-up DB credentials in config.local.neon).\ndbal\n  dbal:import                Import SQL file(s) directly to Database.\norm\n  orm:clear-cache:metadata   Clear all metadata cache of the various cache drivers.\n  orm:clear-cache:query      Clear all query cache of the various cache drivers.\n  orm:clear-cache:result     Clear all result cache of the various cache drivers.\n  orm:convert-mapping        Convert mapping information between supported formats.\n  orm:convert:mapping        Convert mapping information between supported formats.\n  orm:generate-entities      Generate entity classes and method stubs from your mapping information.\n  orm:generate-proxies       Generates proxy classes for entity classes.\n  orm:generate:entities      Generate entity classes and method stubs from your mapping information.\n  orm:generate:proxies       Generates proxy classes for entity classes.\n  orm:info                   Show basic information about all mapped entities\n  orm:schema-tool:create     Processes the schema and either create it directly on EntityManager Storage Connection or generate the SQL output.\n  orm:schema-tool:drop       Drop the complete database schema of EntityManager Storage Connection or generate the corresponding SQL output.\n  orm:schema-tool:update     Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.\n  orm:validate-schema        Validate the mapping files.\n```\nDÃ­ky tÃ©to moÅ¾nosti je moÅ¾nÃ© rychle validovat Doctrine entity, nebo generovat SQL schÃ©ma pÅÃ­mo do databÃ¡ze. PouÅ¾itÃ­ je opÄt jednoduchÃ©, napÅ.: `php index.php orm:info`.\n\n# Tvorba vlastnÃ­ho pÅÃ­kazu\n\nPrvnÄ je tÅeba si uvÄdomit, Å¾e tato knihovna je vlastnÄ to samÃ© jako je v [Symfony Console Component](http://symfony.com/doc/current/components/console/introduction.html), tzn. Å¾e potÅebnÃ© informace se dajÃ­ Äerpat prÃ¡vÄ z tÃ©to dokumentace a navÃ­c existuje celÃ¡ sada helperÅ¯, jako je napÅÃ­klad [Progress Bar](http://symfony.com/doc/current/components/console/helpers/progressbar.html), nebo tÅeba Å¡ikovnÃ½ [Table](http://symfony.com/doc/current/components/console/helpers/table.html). SamotnÃ© napsÃ¡nÃ­ tÅÃ­dy (Commandu) je pak triviÃ¡lnÃ­ zÃ¡leÅ¾itostÃ­:\n\n```php\n<?php\n\nnamespace App\\Console;\n\nuse Doctrine;\nuse Entity;\nuse Symfony\\Component\\Console\\Command\\Command;\nuse Symfony\\Component\\Console\\Input\\InputInterface;\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\n\nclass BlogInstall extends Command {\n\n\t/** @var \\Kdyby\\Doctrine\\EntityManager @inject */\n\tpublic $em;\n\n\tprotected function configure() {\n\t\t$this->setName('blog:install')->setDescription('Install database schema (set-up DB credentials in config.local.neon).');\n\t}\n\n\tprotected function execute(InputInterface $input, OutputInterface $output) {\n\t\ttry {\n        \t// Zde vykonÃ¡me vÅ¡e co je potÅeba\n\t\t\t// Zde vykonÃ¡me vÅ¡e co je potÅeba\n            // Zde vykonÃ¡me vÅ¡e co je potÅeba\n            //...\n\t\t\t$output->writeLn('<info>[OK] - BLOG:INSTALL</info>');\n\t\t\treturn 0; // zero return code means everything is ok\n\t\t} catch (\\Exception $exc) {\n\t\t\t$output->writeLn('<error>BLOG:INSTALL - ' . $exc->getMessage() . '</error>');\n\t\t\treturn 1; // non-zero return code means error\n\t\t}\n\t}\n\n}\n```\n\nZa povÅ¡imnutÃ­ stojÃ­ fakt, Å¾e tyto tÅÃ­dy jsou vedle presenterÅ¯ dalÅ¡Ã­m kandidÃ¡tem na pouÅ¾itÃ­ `@inject` anotace. V tomto pÅÃ­badÄ bude tedy k dispozici pÅÃ­kaz `blog:install`, kterÃ½ je vÅ¡ak nutnÃ© jeÅ¡tÄ zaregistrovat v konfiguraÄnÃ­m souboru:\n\n```neon\nservices:\n\t-\n\t\tclass: App\\Console\\BlogInstall\n\t\ttags: [kdyby.console.command]\n```\n\nTento zpÅ¯sob registrace je jedna z vÄcÃ­, kterÃ¡ mÄ Å¡tve a rÃ¡d bych, kdyby se toto Console nauÄila hackovat sama a jÃ¡ nemusel tagovat, Å¾e se jednÃ¡ o command. KdyÅ¾ je totiÅ¾ tÄchto pÅÃ­kazÅ¯ hodnÄ, konfiguraÄnÃ­ soubor tÃ­mto zpÅ¯sobem pomÄrnÄ rychle roste na svÃ© dÃ©lce a stÃ¡vÃ¡ se nepÅehlednÃ½m... (-:\n\n# A co je na tom?\n\nVÅ¾dyÅ¥ toto umÃ­ Symfony. To Kdyby nic jinÃ©ho neumÃ­? No, tak krom toho, Å¾e vÅ¯bec ÅeÅ¡Ã­ integraci do Nette, coÅ¾ je asi hlavnÃ­ Ãºkol, tak jsou logicky souÄÃ¡sti integrace i dalÅ¡Ã­ ÄÃ¡sti jako jsou napÅÃ­klad vlastnÃ­ helpery. NenÃ­ totiÅ¾ nic horÅ¡Ã­ho, neÅ¾ kdyÅ¾ v takovÃ©m commandu potÅebujete presenter. Ale ono je to vlastnÄ jednoduchÃ©:\n\n```php\n$presenter = $this->getHelper('presenter')->getPresenter();\n```\n\nA stejnÃ½ problÃ©m je pak s odkazy. Jak totiÅ¾ v CLI pracovat s URL, kdyÅ¾ Å¾Ã¡dnÃ¡ nenÃ­? I to Console ÅeÅ¡Ã­. StaÄÃ­ v configu uvÃ©st:\n\n```neon\nconsole:\n\turl: http://zlml.cz/\n```\n\nPak je tvorba odkazÅ¯ v CLI ÃºplnÃ¡ pohodiÄka:\n\n```php\n$link = $presenter->link('//:Front:Homepage:default');\n```\n\nPodÃ­vejte se na [reÃ¡lnÃ© ukÃ¡zky](https://github.com/mrtnzlml/zlml.cz/tree/6d1ad3de5b1f98067a38d2085e4939cd17cf5db5/app/commands) pÅÃ­kazÅ¯ pro Kdyby\\Console. Za sebe mohu tento nÃ¡stroj jedinÄ doporuÄit. Pokud potÅebujete se svojÃ­ aplikacÃ­ pracovat z pÅÃ­kazovÃ© ÅÃ¡dky. Toto je jinÃ¡ sprÃ¡vnÃ¡ cesta. DÃ­ky! (-:","frontmatter":"id: 827f7559-3d1a-4888-a6fb-4b421a6d7bd5\ntimestamp: 1409409052000\ntitle: Kdyby\\\\Console\nslug: kdyby-console"},{"attributes":{"id":"ec59389a-b2a2-4033-bbc6-f778efe7095a","timestamp":1409163060000,"title":"Komunikace s ERP pomocÃ­ XML-RPC","slug":"komunikace-s-erp-pomoci-xml-rpc"},"body":"Spousta lidÃ­ by se rÃ¡da pÅipojovala na API ERP systÃ©mu [Odoo](https://www.odoo.com/), ne vÅ¾dy je to vÅ¡ak prochÃ¡zka rÅ¯Å¾ovÃ½m sadem, protoÅ¾e se oÄekÃ¡vÃ¡ mÃ­sty aÅ¾ pÅehnanÃ¡ internÃ­ znalost tohoto systÃ©mu. PÅitom je to zbyteÄnÃ©. V dneÅ¡nÃ­m ÄlÃ¡nku se pokusÃ­m zdokumentovat prÃ¡vÄ tuto Å¾alostnÄ zdokumentovanou strÃ¡nku vÄci tak, aby to zvlÃ¡dl kaÅ¾dÃ½ alespoÅ trochu zdatnÃ½ programÃ¡tor.\n\nPrvnÄ vÅ¡ak nÄkolik mÃ¡lo slov o co vlastnÄ jde. Odoo je ERP ([Enterprise Resource Planning](http://www.orgis.cz/sluzby/in-house)) systÃ©m pomÄrnÄ bohatÃ½ na funkce a mÃ¡ za Ãºkol ÅeÅ¡it zejmÃ©na vnitrofiremnÃ­ procesy a obecnÄ vÅ¡echny zÃ¡leÅ¾itosti, kterÃ© se okolo jakÃ©koliv firmy motajÃ­. Lze tedy ÅeÅ¡it plÃ¡novÃ¡nÃ­ projektÅ¯, jejich workflow, rozvrhovÃ¡nÃ­ Äasu, ÅÃ­zenÃ­ zakÃ¡zek, ale takÃ© napÅÃ­klad sprÃ¡vu dokumentÅ¯, skladovÃ© zÃ¡soby, mass mailing, nebo tzv. [Point of Sale](https://www.odoo.com/page/point-of-sale) coÅ¾ je jedna z tÄch nejvÃ­ce zajÃ­mavÃ½ch vÄcÃ­, alespoÅ z mÃ©ho pohledu. ZjednoduÅ¡enÄ ÅeÄeno lze udÄlat naprosto cokoliv. A co nejde, tak se jednoduÅ¡e doprogramuje. Aby vÅ¡ak Å¡lo udÄlat cokoliv, je potÅeba pÅipojovat se na tento systÃ©m vzdÃ¡lenÄ, protoÅ¾e obÄas se hodÃ­ propojit stÃ¡vajÃ­cÃ­ webovou aplikaci prÃ¡vÄ s takovÃ½mto systÃ©mem. To mÅ¯Å¾e mÃ­t nÄkolik dÅ¯vodÅ¯. NapÅÃ­klad chcete mÃ­t ve webovÃ© aplikaci data sjednocenÃ¡ s ERP systÃ©mem, nebo si chcete vzdÃ¡lenÄ stahovat faktury, popÅ. tlaÄit data do ÃºÄtovacÃ­ho systÃ©mu. Jak jiÅ¾ bylo ÅeÄeno - moÅ¾nÃ© je naprosto cokoliv.\n\n# Hello API!\n\nOdoo poskytuje klasickÃ© XML-RPC API. Toto API je velmi jednoduchÃ© na obsluhu, nicmÃ©nÄ ani tento druh API [nenÃ­ mÅ¯j favorit](srackoapi). S vÃ½hodou tedy mÅ¯Å¾eme pouÅ¾Ã­t lehce modifikovanou funkci [Jakuba VrÃ¡ny](http://php.vrana.cz/webove-sluzby-v-php-xml-rpc-a-soap.php) pro obsluhu tohoto API (PHP):\n\n```php\n<?php\n\nfunction xmlrpc($url, $method, $params = array(), $types = array(), $encoding = 'utf-8') {\n    foreach ($types as $key => $val) {\n        xmlrpc_set_type($params[$key], $val);\n    }\n    $context = stream_context_create(array('http' => array(\n        'method' => \"POST\",\n        'header' => \"Content-Type: text/xml\",\n        'content' => xmlrpc_encode_request($method, $params, array('encoding' => $encoding))\n    )));\n    return xmlrpc_decode(file_get_contents($url, false, $context), $encoding);\n}\n```\n\nNÃ¡sleduje krÃ¡tkÃ¡ odboÄka k tomu, co vÅ¡e je moÅ¾nÃ© pÅes API udÄlat. OpÄt bych mohl napsat, Å¾e cokoliv, ale zde uÅ¾ si nejsem jist a proto nÃ¡sleduje vÃ½pis funkcÃ­, kterÃ© je moÅ¾nÃ© pÅes api volat a hlavnÄ kterÃ© povaÅ¾uji za dÅ¯leÅ¾itÃ©. ExistujÃ­ totiÅ¾ 4 sluÅ¾by a kaÅ¾dÃ¡ obsahuje jinÃ© metody. NejhlavnÄjÅ¡Ã­ sluÅ¾ba je `common`. Zde jsou k dispozici mimo jinÃ© funkce `login(db, login, password)`, `about(extended=False)`, `timezone_get(db, login, password)` a `version()`. VÄtÅ¡ina funkcÃ­ se dostateÄnÄ popisuje sama, pozor vÅ¡ak na funkci \"about\", protoÅ¾e ta v dobÄ psanÃ­ tohoto ÄlÃ¡nku [obsahovala chybu](https://github.com/odoo/odoo/pull/2028). Je tedy zÅejmÃ©, Å¾e tato skupina funkcÃ­ se hodÃ­ pro zalogovÃ¡nÃ­ do systÃ©mu, nebo pro zjiÅ¡tÄnÃ­ ÄasovÃ©ho pÃ¡sma, popÅ. verze systÃ©mu. PojÄme se tedy pÅihlÃ¡sit:\n\n```php\n<?php\n//...\n$data = array('database', 'username', 'password');\n$uid = xmlrpc(\"http://.../xmlrpc/common\", \"login\", $data);\n```\n\nVÃ½sledkem volÃ¡nÃ­ je unikÃ¡tnÃ­ identifikÃ¡tor uÅ¾ivatele, kterÃ½ si mÅ¯Å¾eme doÄasnÄ nÄkam uloÅ¾it, aby ho nebylo potÅeba zjiÅ¡Å¥ovat poÅÃ¡d znovu. To nenÃ­ potÅeba. NutnÃ© ja vÅ¡ak upozornit na to, Å¾e pÅes API zÃ­skÃ¡te takovÃ¡ pÅÃ­stupovÃ¡ prÃ¡va, jakÃ© by mÄl uÅ¾ivatel, kdyby se pÅihlaÅ¡oval normÃ¡lnÄ pomocÃ­ loginu.\n\n# Jedeme dÃ¡l\n\nNÃ¡sleduje sluÅ¾ba `object`. Ta mÃ¡ na starost prÃ¡ci s databÃ¡zÃ­ z hlediska ORM. AÄkoliv mÃ¡ tato sluÅ¾ba pouze dvÄ pro mÄ zajÃ­mavÃ© funkce, uÅ¾ije se s nÃ­ nejvÃ­ce srandy a patÅÃ­ asi k tÃ© nejdÅ¯leÅ¾itÄjÅ¡Ã­. ZmiÅovanÃ© funkce jsou `execute(db, uid, obj, method, *args, **kw)` a `exec_workflow(db, uid, obj, signal, *args)`. PrÃ¡vÄ pomocÃ­ `execute` lze napÅÃ­klad vyhledÃ¡vat v databÃ¡zi a to tak, Å¾e si nejdÅÃ­ve zÃ­skÃ¡me ID hodnoty pro danÃ½ vÃ½raz a nÃ¡slednÄ si vytÃ¡hneme veÅ¡kerÃ© informace, kterÃ© jsou potÅeba (pokud jsou potÅeba). PÅÃ­klad pro vyhledÃ¡vÃ¡nÃ­ v zÃ¡kaznÃ­cÃ­ch:\n\n```php\n<?php\n//...\n$data = array($database, $uid, $password, 'res.partner', 'search', [['name', 'ilike', 'hledanyvyraz']]);\n$ids = xmlrpc(\"http://.../xmlrpc/object\", \"execute\", $data); //zÃ­skÃ¡me IDÄka\n\n$data = array($database, $uid, $password, 'res.partner', 'read', $ids, ['image', 'display_name', 'function', 'email']);\n$users = xmlrpc(\"http://.../xmlrpc/object\", \"execute\", $data); //zÃ­skÃ¡me zÃ¡kaznÃ­ky\n\n//ukÃ¡zka vytvÃ¡ÅenÃ­ klienta:\n$data = array($database, $uid, $password, 'res.partner', 'create', ['name' => 'John Doe']);\nxmlrpc(\"http://.../xmlrpc/object\", \"execute\", $data);\n```\n\nJe tedy zÅejmÃ©, Å¾e pomocÃ­ execute mÅ¯Å¾eme vyhledÃ¡vat, ÄÃ­st, ale i vytvÃ¡Ået, nebo mazat zÃ¡znamy (`create`, `search`, `read`, `write`, `unlink`). ZajÃ­mavÃ½ je zpÅ¯sob zÃ¡pisu pÅi hledÃ¡nÃ­ (<em>ilike</em>). K dispozici jsou nÃ¡sledujÃ­cÃ­ operÃ¡tory: `=`, `!=`, `>`, `>=`, `<`, `<=`, `like`, `ilike`, `in`, `not in`, `child_of`, `parent_left`, `parent_right`. OpÄt se jednÃ¡ o \"samosepopisujÃ­cÃ­\" nÃ¡zvy. NejzajÃ­mavÄjÅ¡Ã­ je vÅ¡ak prÃ¡vÄ <em>ilike</em>, kterÃ½ nenÃ­ case sensitive a obaluje dotaz procenty jako je tomu napÅÃ­klad klasicky v MySQL (`%hledanyvyraz%`). U pouÅ¾Ã­tÃ© funkce <em>read</em> lze vyjmenovat jakÃ© sloupce se majÃ­ vrÃ¡tit, nebo se vrÃ¡tÃ­ veÅ¡kerÃ¡ data (vÄetnÄ obrÃ¡zkÅ¯ v base64).\n\n# PokroÄilÃ© dotazovÃ¡nÃ­\n\nPodmÃ­nky dotazovÃ¡nÃ­ lze jeÅ¡tÄ zpÅesnit pomocÃ­ logickÃ½ch operÃ¡torÅ¯ (`&` - and, default, `|` - or, `!` - not). PodmÃ­nky se zapisujÃ­ klasicky prefixovÄ, takÅ¾e pokud chceme napÅÃ­klad vyhledat zÃ¡kaznÃ­ka s nenastavenou ÄeÅ¡tinou z Äech a nÄmecka, poloÅ¾Ã­me napÅÃ­klad nÃ¡sledujÃ­cÃ­ prefixovÃ½ dotaz:\n\n```python\n[('name','=','Adam'),'!',('language.code','=','cs_CZ'),'](',('country_id.code','=','CZ'),('country_id.code','=','DE'))\n# ekvivalentnÃ­ k:\n[('name','=','Adam'),('language.code','!=','cs_CZ'),'](',('country_id.code','=','CZ'),('country_id.code','=','DE'))\n```\n\nTo v jakÃ½ch modulech (<em>res.partner</em>) se bude vyhledÃ¡vat prÃ¡vÄ zÃ¡leÅ¾Ã­ na tom, co je naintalovÃ¡no za moduly a je tÅeba vÄdÄt jak jsou internÄ oznaÄeny, coÅ¾ je podle mÃ©ho neÅ¡Å¥astnÃ©, ale zde je pÅehled tÄch nejÄastÄjÅ¡Ã­ch\n\n- ZÃ¡kaznÃ­ci: `res.partner`\n- TelefonÃ¡ty: `crm.phonecall`, obch. pÅÃ­leÅ¾itosti - `crm.lead`\n- Produkty: `product.template`, kategorie produktÅ¯ - `product.category`\n- Projekty: `project.project`, Ãºkoly - `project.task`, tagy - `project.category`\n- Faktury: `account.invoice`, smlouvy - `account.analytic.account`\n- ZamÄstnanci: `hr.employee`, vÃ½daje - `hr.expense.expense`\n- ZnalostnÃ­ bÃ¡ze: `document.directory`\n- KalendÃ¡Å: `calendar.event`\n\nJe svÄlÃ©, Å¾e staÄilo pÃ¡r ukÃ¡zek a s celÃ½m ERP lze dÄlat tÃ©mÄÅ cokoliv. TÃ­m to vÅ¡ak nekonÄÃ­, protoÅ¾e existujÃ­ jeÅ¡tÄ dvÄ skupiny pÅÃ­kazÅ¯. TÅetÃ­ skupinou je skupina pro obsluhu a generovÃ¡nÃ­ reportÅ¯ `report`. Tato skupina mi v souÄasnÃ© chvÃ­li nepÅijde natolik zajÃ­mavÃ¡, ale jmenovitÄ se jednÃ¡ o funkce `report`, `report_get` a `render_report`. Mnohem zajÃ­mavÄjÅ¡Ã­, aÄkoliv moÅ¾nÃ¡ troÅ¡ku vyÅ¡Å¡Ã­ dÃ­vÄÃ­, je skupina pro pÅÃ­mou prÃ¡ci s databÃ¡zÃ­ ERP. JednÃ¡ se o skupinu `db` a ta ovlÃ¡dÃ¡ prÃ¡vÄ instance celÃ©ho ERP. Tyto funkce nejsou pÅÃ­mo pro zÃ¡kaznÃ­ky, ani obsluhu ERP, ale spÃ­Å¡e pro administrÃ¡tory serverÅ¯, tzn. je nutnÃ© autorizovat se master helem. DatabÃ¡ze lze mazat, vytvÃ¡Ået, pÅesouvat, zÃ¡lohovat, migrovat, duplikovat atd. viz nÃ¡sledujÃ­cÃ­ vÃ½Äet funkcÃ­: `create`, `drop`, `dump`, `restore`, `rename`, `change_admin_password`, `migrate_databases`, `create_database` a `duplicate_database`. ZejmÃ©na pak tÅeba <em>rename</em> se hodÃ­, protoÅ¾e tato operace nejde jinak vykonat. U vÅ¡ech zmÃ­nÄnÃ½ch funkcÃ­ je nutnÃ© se ovÄÅit. U nÃ¡sledujÃ­cÃ­ch informativnÃ­ch to nutÃ© nenÃ­: `db_exist`, `list`, `list_lang`, `server_version`. VelkÃ½ pozor na funkci <em>db_exist</em>. Ve skuteÄnosti totiÅ¾ kontroluje, jestli se lze k databÃ¡zi pÅipojit, nikoliv jestli existuje, coÅ¾ nutnÄ nemusÃ­ bÃ½t jedno a to samÃ©...\n\nPokud si chcete o danÃ© problematice pÅeÄÃ­st vÃ­ce, doporuÄuji tuto zastaralou [dokumentaci](https://doc.odoo.com/6.1/developer/12_api/). Je dobrÃ¡, nikoliv vÅ¡ak postaÄujÃ­cÃ­. Obsahuje vÅ¡ak ukÃ¡zky i pro jinÃ© programovacÃ­ jazyky, neÅ¾ je PHP. DoufÃ¡m, Å¾e tento ÄlÃ¡nek vyjasnil vÅ¡echny zÃ¡koutÃ­ komunikace s API ERP systÃ©mu Odoo... (-:","frontmatter":"id: ec59389a-b2a2-4033-bbc6-f778efe7095a\ntimestamp: 1409163060000\ntitle: Komunikace s ERP pomocÃ­ XML-RPC\nslug: komunikace-s-erp-pomoci-xml-rpc"},{"attributes":{"id":"773516e7-b186-4441-9de4-0ce12bdc37b3","timestamp":1406926545000,"title":"Za hranicÃ­ ORM","slug":"za-hranici-orm"},"body":"JiÅ¾ mnohokrÃ¡t jsem slyÅ¡el, Å¾e je ORM [antipattern](http://www.zdrojak.cz/clanky/orm-je-antipattern/). JÃ¡ si to nemyslÃ­m. Je to hloupÃ½ a uspÄchanÃ½ nÃ¡zor. V dneÅ¡nÃ­m ÄlÃ¡nku vÅ¡ak nechci rozebÃ­rat co je a co nenÃ­ antipattern. To je jen zbyteÄnou ztrÃ¡tou Äasu. RÃ¡d bych ukÃ¡zal pouÅ¾itÃ­ jednoho ORM systÃ©mu, kterÃ½ mÄ naprosto uchvÃ¡til.\n\n# KdyÅ¾ jsou potÅeba firemnÃ­ procesy\n\nZejmÃ©na zaÄÃ­najÃ­cÃ­ firmy majÃ­ na svÃ©m startu nÃ¡roÄnÃ½ Ãºkol. Je zapotÅebÃ­ vytvoÅit vnitrofiremnÃ­ procesy, kterÃ© striktnÄ ÅÃ­dÃ­ bÄh rÅ¯znÃ½ch akcÃ­ jako je napÅÃ­klad vÃ½roba, reklamace, nebo tÅeba kolobÄh dokumentÅ¯. Ve firmÄ [takovÃ¡ ÅeÅ¡enÃ­ nabÃ­zÃ­me](http://www.orgis.cz/sluzby/in-house) a je o nÄ velkÃ½ zÃ¡jem. MÃ¡ to svÅ¯j smysl. NenÃ­ Å¾Ã¡dnÃ½m tajemstvÃ­m, Å¾e pouÅ¾Ã­vÃ¡me ERP systÃ©m [Odoo](https://www.odoo.com/), protoÅ¾e je to velmi silnÃ½ nÃ¡stroj. I pÅes neuvÄÅitelnou modifikovatelnost tÃ©to aplikace je obÄas zapotÅebÃ­ sÃ¡hnout k daleko vÃ­ce sofistikovanÃ©mu ÅeÅ¡enÃ­. ProÄ? ObÄas jsou totiÅ¾ vnitropodnikovÃ© procesy velmi sloÅ¾itÃ© a navÃ­c jich je velkÃ© mnoÅ¾stvÃ­. V takovÃ©m pÅÃ­padÄ, je tÃ©mÄÅ jedinou moÅ¾nostÃ­ napsat si pro tento ERP systÃ©m rozÅ¡Ã­ÅenÃ­, kterÃ© tento tÄÅ¾kÃ½ Ãºkol zvlÃ¡dne.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/393212dc-381f-4b3a-a06c-fb5d33d6dc29/workflow.png) *UkÃ¡zka struktury klasickÃ©ho firemnÃ­ho workflow*\n\nNechci vÅ¡ak psÃ¡t nÃ¡vod na to, jak si takovÃ½ modul naprogramovat. O tom tÅeba nÄkdy pÅÃ­Å¡tÄ. PojÄme se radÄji podÃ­vat na to, jak tÃ©mÄÅ celÃ© Odoo funguje, protoÅ¾e je to skuteÄnÄ pozoruhodnÃ©. Bez kÃ³dÅ¯ to vÅ¡ak nepÅ¯jde.\n\n# ZÃ¡plava tabulek\n\nAbych byl upÅÃ­mnÃ½, tak jsem se jeÅ¡tÄ nikdy nesetkal s tÃ­m, aby byl **kaÅ¾dÃ½** objekt v projektu skuteÄnÄ realizovÃ¡n tabulkou v databÃ¡zi. Nebo o tom alespoÅ nevÃ­m. Je to v podstatÄ jako kdyÅ¾ mÃ¡te entity a ty jsou pak skuteÄnÄ v databÃ¡zi. RozdÃ­l je vÅ¡ak v tom, Å¾e zde je v \"entitÄ\" i celÃ¡ potÅebnÃ¡ logika (kterÃ© vÄtÅ¡inou moc nenÃ­) a hlavnÄ Å¾Ã¡dnÃ© jinÃ© objekty nejsou potÅeba.\n\nV nejprostÅ¡Ã­m tvaru mÅ¯Å¾e tedy tÅÃ­da modulu vypadat skuteÄnÄ pouze jako entita:\n\n```python\nclass project_wkf_activity(osv.osv):\n    _name = 'project.wkf.activity'\n    _columns = {\n        'sequence': fields.integer('Sequence'),\n        'name': fields.char('Workflow Activity Name', required=True, size=64, translate=True),\n        'type': fields.many2one('project.wkf.type', 'Workflow Type'),\n        'fold': fields.boolean('Folded in Kanban View'),\n    }\n    # ...\n    def jumptoseq(self, cr, uid, ids, sequence, context=None):\n    \t#...\n```\n\nPÅi programovÃ¡nÃ­ modulÅ¯ toto vede k extrÃ©mnÃ­ explozi tabulek v databÃ¡zi. 500 tabulek udÄlÃ¡te v databÃ¡zi jako nic. StaÄÃ­ nainstalovat pÃ¡r modulÅ¯. A to uÅ¾ mi pÅijde dost netradiÄnÃ­. KromÄ modulovÃ½ch tabulek je v zÃ¡kladnÃ­ instalaci asi 100 tabulek, kterÃ© v sobÄ drÅ¾Ã­ vÅ¡e moÅ¾nÃ©, mimo jinÃ© takÃ© informace o workflow. A prÃ¡vÄ definice workflow je to nejzajÃ­mavÄjÅ¡Ã­. VeÅ¡kerÃ¡ sranda se totiÅ¾ odehrÃ¡vÃ¡ v XML souborech. Ve vÃ½sledku staÄÃ­ pro napsÃ¡nÃ­ sloÅ¾itÃ©ho workflow vÄetnÄ veÅ¡kerÃ© logiky pouze XML...\n\n# XML programovÃ¡nÃ­ (-:\n\nKdyÅ¾ jsem toto poprvÃ© vidÄl, pÃ¡rkrÃ¡t jsem se zastavil a pÅemÃ½Å¡lel jsem, jak to vlastnÄ mÅ¯Å¾e fungovat. Je to vÅ¡ak velmi jednoduchÃ©. V inicializaÄnÃ­m souboru modulu si staÄÃ­ nadefinovat jakÃ© XML soubory se majÃ­ naÄÃ­tat. NÃ¡sleduje definice workflow. Å½Ã¡dnÃ© psanÃ­ okolo. ProstÄ to hned funguje. ZaÄÃ¡tek takovÃ©ho workflow mÅ¯Å¾e vypadat napÅÃ­klad takto:\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openerp>\n    <data noupdate=\"0\">\n    \t<record id=\"wkf1\" model=\"workflow\">\n            <field name=\"name\">project.wkf1</field>\n            <field name=\"osv\">project.project</field>\n            <field name=\"on_create\">True</field>\n        </record>\n\t</data>\n</openerp>\n```\n\nTÃ­m je workflow zaloÅ¾eno a pÅi spuÅ¡tÄnÃ­ pÅevedeno do databÃ¡ze. JÃ¡dro mÃ¡ pak za Ãºkol se tÄchto tabulek chytit a pracovat s nimi. Jsou jasnÄ danÃ¡ pravidla, takÅ¾e s tÃ­m nenÃ­ Å¾Ã¡dnÃ½ problÃ©m. NÃ¡sleduje definice akcÃ­ (to jsou ty bubliny na obrÃ¡zku):\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openerp>\n    <data noupdate=\"0\">\n    \t<!-- viz definice workflow -->\n        \n        <record id=\"a_1_0\" model=\"workflow.activity\">\n            <field name=\"wkf_id\" ref=\"wkf1\"/>\n            <field name=\"flow_start\">True</field>\n            <field name=\"name\">start-wkf1</field>\n            <field name=\"kind\">dummy</field>\n        </record>\n\n        <record id=\"a_1_10\" model=\"workflow.activity\">\n            <field name=\"wkf_id\" ref=\"wkf1\"/>\n            <field name=\"name\">nazev-activity</field>\n            <field name=\"kind\">function</field>\n            <field name=\"action\">jumptoseq(10)</field>\n        </record>\n        \n        <record id=\"a_1_500\" model=\"workflow.activity\">\n            <field name=\"wkf_id\" ref=\"wkf1\"/>\n            <field name=\"flow_stop\">True</field>\n            <field name=\"name\">end</field>\n            <field name=\"kind\">function</field>\n            <field name=\"action\">orgis_close()</field>\n        </record>\n\t</data>\n</openerp>\n```\n\nA nÃ¡sleduje definice transitions (spojenÃ­ na obrÃ¡zku):\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openerp>\n    <data noupdate=\"0\">\n    \t<!-- viz definice workflow -->\n        <!-- viz definice aktivit -->\n        \n        <record id=\"t_1_9\" model=\"workflow.transition\">\n            <field name=\"act_from\" ref=\"a_1_40\"/>\n            <field name=\"act_to\" ref=\"a_1_50\"/>\n            <field name=\"signal\">a_1_40toa_1_50</field>\n        </record>\n        <record id=\"c_1_7\" model=\"workflow.transition\">\n            <field name=\"act_from\" ref=\"a_1_36\"/>\n            <field name=\"act_to\" ref=\"a_1_500\"/>\n            <field name=\"signal\">close_wkf</field>\n        </record>\n\t</data>\n</openerp>\n```\n\nUkÃ¡zky jsou nekompletnÃ­, protoÅ¾e by se to sem vÅ¡echno ani nÃ¡hodou neveÅ¡lo. VÃ½slednÃ½ XML soubor vlastnÄ staÄÃ­ k tomu, aby celÃ© workflow fungovalo. StaÄÃ­ nadefinovat funkce v pÅÃ­sluÅ¡nÃ½ch tÅÃ­dÃ¡ch viz napÅÃ­klad volÃ¡nÃ­ `jumptoseq`.\n\nDost Äasto je takÃ© zapotÅebÃ­ definovat tlaÄÃ­tka pro view, coÅ¾ se dÄlÃ¡ takÃ© pomocÃ­ XML kde je opÄt originÃ¡lnÄ vyÅeÅ¡eno pÅepisovÃ¡nÃ­ defaultnÃ­ Å¡ablony. TlaÄÃ­tka majÃ­ vÅ¾dy nÄjakou akci, kterÃ¡ zajistÃ­, Å¾e se posuneme ve workflow dÃ¡le. Na takovÃ© workflow lze povÄsit ÃºplnÄ vÅ¡echno. PoslÃ¡nÃ­ emailÅ¯, vygenerovÃ¡nÃ­ faktur, zaloÅ¾enÃ­ akce v kalendÃ¡Åi atd. Pokud se jednÃ¡ o vyloÅ¾enÄ automatickÃ© kroky, akce se na tlaÄÃ­tku nemusÃ­ definovat a pak systÃ©m celÃ© workflow proskÃ¡Äe a spustÃ­ vÅ¡echny akce popoÅadÄ sÃ¡m. ZajÃ­mavÃ© je vÅ¡ak to, Å¾e se po spuÅ¡tÄnÃ­ vÅ¡echno nahrne do databÃ¡ze a jÃ¡dro Odoo se strarÃ¡ pouze o to, aby tento internÄ sloÅ¾itÃ½ systÃ©m fungoval sprÃ¡vnÄ. VÅ¡em lidem, kteÅÃ­ nadÃ¡vajÃ­ na ORM bych tedy poloÅ¾il nÃ¡sledujÃ­cÃ­ otÃ¡zku. Jak udÄlÃ¡te takto sofistikovanÃ½ systÃ©m bez ORM? Nebo Å¾e toto snad nenÃ­ ORM? A uvÄdomte si, jak jsem se straÅ¡nÄ rychle dokÃ¡zal dostat z ORM aÅ¾ na celÃ½ komplexnÃ­ systÃ©m workflow. Je to proto, Å¾e jsem vÅ¯bec neuvaÅ¾oval nÄco jako je ActiveRow... (-: I kdyÅ¾ z velkÃ© ÄÃ¡sti je to spÃ­Å¡e plnÄnÃ­ tabulek.\n\nV tomto reÃ¡lnÄ fungujÃ­cÃ­m ÅeÅ¡enÃ­ je velmi hlubokÃ¡ myÅ¡lenka. A udivuje mÄ, Å¾e v jinÃ½ch systÃ©mech toto funguje ÃºplnÄ obrÃ¡cenÄ. VÅ¡ichni se snaÅ¾Ã­ programovat spÃ­Å¡e to jÃ¡dro. Ukazuje se vÅ¡ak, Å¾e vyuÅ¾Ã­t kvalitnÃ­ jÃ¡dro, kterÃ© se starÃ¡ o vÅ¡echno je daleko pÅÃ­nosnÄjÅ¡Ã­. VzpomeÅte si na tento ÄlÃ¡nek, aÅ¾ budete Å¥ukat do klÃ¡vesnice entity, mappery, repository, DAO objekty a dalÅ¡Ã­ a to pouze kvÅ¯li tomu, aby bylo moÅ¾nÃ© udÄlat nÄjakÃ© takovÃ© workflow, jako jsem zde teÄ popsal. UÅ¾ zase...\n\nPouÅ¾Ã­vÃ¡te takÃ© nÄjakou netradiÄnÃ­ implementaci ORM?","frontmatter":"id: 773516e7-b186-4441-9de4-0ce12bdc37b3\ntimestamp: 1406926545000\ntitle: Za hranicÃ­ ORM\nslug: za-hranici-orm"},{"attributes":{"id":"54e244cd-2b74-4532-b36c-74a7827aa231","timestamp":1405627130000,"title":"SraÄkoAPI","slug":"srackoapi"},"body":"NÃ¡sledujÃ­cÃ­ ÅÃ¡dky budou ÄistÃ½ hate na nÄkolik tvÅ¯rcÅ¯ API, kterÃ½ mÃ¡ poslouÅ¾it budoucÃ­m tvÅ¯rcÅ¯m API. SÃ¡m totiÅ¾ musÃ­m obsluhovat nÄkolik sluÅ¾eb a zÃ­skÃ¡vat z nich data. A aÄkoliv se nebrÃ¡nÃ­m sloÅ¾itostem, nÄkterÃ© vÄci jsou tak absurdnÃ­, Å¾e aÅ¾ rozum zÅ¯stÃ¡vÃ¡ stÃ¡t...\n\nNo to si ze mÄ dÄlÃ¡te...\n------------------------\nPrvnÃ­ mÃ­sto na Å¾ebÅÃ­Äku debility zÃ­skÃ¡vÃ¡ API pro obsluhu a registraci domÃ©n od Web4U. JednÃ¡ se o klasickÃ© SOAP API, kterÃ© mÄ vÅ¡ak mÃ­sty pÅivÃ¡dÃ­ k Å¡Ã­lenstvÃ­. ZaÄnu pÄknÄ od zaÄÃ¡tku. Aby bylo vÅ¯bec moÅ¾nÃ© API volat, musÃ­te nejdÅÃ­ve zÃ­skat identifikÃ¡tor sluÅ¾by. Kde jej sehnat? NapadÃ¡ vÃ¡s nÄkde v aministraci? Kde jinde takÃ©, Å¾e? Omyl! IdentifikÃ¡tor sluÅ¾by se zÃ­skÃ¡vÃ¡ tak, Å¾e zavolÃ¡te jakoukoliv funkci z jejich API Å¡patnÄ a identifikÃ¡tor najdete ve vrÃ¡cenÃ© exception. A to si nedÄlÃ¡m prdel. To fakt majÃ­ napsanÃ© v dokumentaci. A aby toho nebylo mÃ¡lo, tak vrÃ¡cenÃ© ID je ve formÃ¡tu `IDxxxxxxx, ...`. Koho by vÅ¡ak napadlo, Å¾e ID je tich prvnÃ­ch 9 znakÅ¯, tak je na omylu. ID je totiÅ¾ to ID bez ÃºvodnÃ­ho ID, tedy `xxxxxxx`. Takto je to moÅ¾nÃ¡ jasnÃ©, ale kdyÅ¾ k tomu poprvÃ© sednete, tak nad tÃ­m sedÃ­te pÅ¯l dne. NÃ¡slednÄ lze funkci opÄt volat s vrÃ¡cenÃ½m ID. A prÃ¡vÄ volÃ¡nÃ­ je dalÅ¡Ã­ sranda.\n\nV dokumentaci je totiÅ¾ jasnÄ napsÃ¡no co jsou povinnÃ© vstupnÃ­ hodnoty, volitelnÃ© hodnoty a obÄas i co to vracÃ­. TakÅ¾e je to jasnÃ©, prostÄ tam poÅ¡lu pole hodnot key-value a je to. Hahaha. Ne. Do tohoto API se totiÅ¾ posÃ­lÃ¡ pole polÃ­ s tÃ­m, Å¾e je zapotÅebÃ­ dodrÅ¾ovat pÅesnÄ stanovenÃ½ formÃ¡t a to takovÃ½to:\n\n```php\narray(\n\tarray('name' => 'key', 'data' => 'value'),\n\t//...\n)\n```\n\nJe to jedna z vÄcÃ­, kterÃ¡ je prostÄ hloupÃ¡. PokaÅ¾dÃ© se musÃ­m sÃ¡m sebe ptÃ¡t, proÄ to tak je? NerozumÃ­m tomu, nemÃ¡ to Å¾Ã¡dnou pÅidanou hodnotu. Jdeme dÃ¡l. ÅeknÄme, Å¾e potÅebujete pomocÃ­ API zjistit nÄjakou informaci o domÃ©nÄ, napÅÃ­klad kdy skuteÄnÄ expiruje. Na to se staÄÃ­ jednou tÃ½dnÄ zeptat a aktualizovat si informace v databÃ¡zi. To pro pÅÃ­pad, Å¾e byla domÃ©na prodlouÅ¾ena u tÅetÃ­ strany. No, nebudeme to rozebÃ­rat dÃ¡le. PÅes API nelze tuto funkci zavolat. ProÄ? VyÅ¾aduje totiÅ¾ captchu. Jo, ta funkce v API se fakt volÃ¡ pÅes obrÃ¡zkovou captchu. Jako jedinÃ¡. ChÃ¡pu jak to pouÅ¾Ã­t, ale prakticky vÅ¡echny svÃ© projekty dÄlÃ¡m plnÄ automatizovanÃ©, takÅ¾e jedinÃ© ÅeÅ¡enÃ­ je zde najmout [armÃ¡du IndÅ¯](http://www.root.cz/clanky/potrebujete-obejit-captcha-zaplatte-si-armadu-indu/) a captchy louskat ruÄnÄ.\n\nA takovÃ½ch perel je tam nespoÄet. PotÅebujete vÄdÄt, jestli probÄhla funkce v poÅÃ¡dku? Nope. VÃ½stupem z funkce je totiÅ¾ ÄÃ­slo poÅ¾adavku. Chybu si totiÅ¾ musÃ­te pomÄrnÄ nepÄknÄ vydlabat z exception. DalÅ¡Ã­ vÄc je ÄistÄ logickÃ¡. ÄeskÃ© domÃ©ny lze registrovat pouze s NSSETem. Jinak to nejde. U jinÃ½ch domÃ©n se zadÃ¡vajÃ­ jednotlivÃ© NS servery. U CZ domÃ©ny se musÃ­ nejdÅÃ­ve vytvoÅit identifikÃ¡tor drÅ¾itele kontaktu. U jinÃ½ch domÃ©n se vytvÃ¡ÅÃ­ pÅi registraci domÃ©ny. To se vÅ¡echno mÅ¯Å¾e zdÃ¡t jako maliÄkosti, ale takovÃ© vÄci vÅ¡e zbyteÄnÄ komplikujÃ­ a pouÅ¾itÃ­ takovÃ©ho API je spÃ­Å¡ otrava. PÅitom si myslÃ­m, Å¾e nejvÄtÅ¡Ã­ pÅÃ­liv napÅ. domÃ©n musÃ­ bÃ½t prÃ¡vÄ strojovÄ pÅes API.\n\n...ale uÅ¾ fakt prdel!\n---------------------\nRychlÃ¡ otÃ¡zka k zamyÅ¡lenÃ­. Jak udÄlÃ¡te API, aby bylo moÅ¾nÃ© jej snadno testovat? ZmÄnÃ­te napÅÃ­klad pÅÃ­stupovÃ© Ãºdaje na testovacÃ­, nebo budete posÃ­lat nÄjakÃ½ testovacÃ­ token? OK. MyÅ¡lenka je jasnÃ¡. Kdykoliv se to dÃ¡ snadno pÅehodit napÅ. zmÄnou jednoho hesla do ostrÃ©ho reÅ¾imu. Jenom v debilnÃ­m API se metody pro testovÃ¡nÃ­ jmenujÃ­ jinak, neÅ¾ metody pro ostrÃ© pouÅ¾itÃ­. Kurva! To je dalÅ¡Ã­ vÄc, kterÃ¡ to celÃ© nepÅÃ­jemnÄ zkomplikuje.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/d10561e0-aeec-4dae-a21e-17eb7c4ca36d/gif.gif)\nDobÅe, poslednÃ­ pÅÃ­klad. NedÃ¡vno jsem zase nÄco nevyÄetl z dokumentace. Napsal jsem tedy na technickou podporu aÅ¥ mi poradÃ­, Å¾e to tam nemajÃ­ napsanÃ©. KonkrÃ©tnÄ se jednalo o povolenÃ© vstupnÃ­ hodnoty do jednÃ© funkce. Na odpovÄÄ jsem Äekal dva dny, coÅ¾ by ani tak nevadilo, ale hodnÄ jsem se nasmÃ¡l u odpovÄdi, kterÃ¡ pÅiÅ¡la v tomto formÃ¡tu (pÅ¯vodnÄ zapsÃ¡no pod sebou):\n\n```\n'cs', 'sk', 'bg', 'hr', 'da', 'nl', 'en', 'et', 'fi', 'fr', 'de', 'el', 'hu', 'ga', 'it', 'lv', 'lt', 'mt', 'pl', 'pt', 'ro', 'sl', 'es', 'sv'\n```\n\nWhat? TakÅ¾e podpora takÃ© nevÄdÄla a tak mi poslala kus vykopÃ­rovanÃ©ho zdrojovÃ©ho PHP kÃ³du z aplikace? V tuto chvÃ­li uÅ¾ mi zaÄÃ­nÃ¡ bÃ½t vÅ¡echno jedno... \n\nJde to i jinak?\n---------------\nVÃ­m, Å¾e ano, ale stÃ¡le ÄastÄji mÄ nÄkdo pÅesvÄdÄuje o opaku. DruhÃ© ukÃ¡zkovÃ© API jsem zvolil pro porovnÃ¡nÃ­ takÃ© typu SOAP. V tomto API je jiÅ¾ vÄtÅ¡ina vÄcÃ­ na kterÃ© jsem do tÃ©to chvÃ­le nadÃ¡val vyÅeÅ¡ena. Dokonce jsem potÄÅ¡en z toho, Å¾e se jednÃ¡ o API pomÄrnÄ inteligentnÃ­ a tak se mohu dotazovat hodnÄ podobnÄ jako v Doctrine 2. ParÃ¡da.\n\nJenÅ¾e pak pÅijde, jak ÅÃ­kÃ¡ kolega, dalÅ¡Ã­ jobovka. API je totiÅ¾ totÃ¡lnÄ bez dokumentace, takÅ¾e tÃ©mÄÅ jedinÃ© mÃ­sto, kde lze zÃ­skat informace o vstupnÃ­ch a vÃ½stupnÃ­ch hodnotÃ¡ch je prohlÃ©dnout si celÃ½ dump danÃ© funkce. DobÅe, to nenÃ­ problÃ©m. VidÃ­m datum ve znÃ¡mÃ©m formÃ¡tu jako string. PosÃ­lÃ¡m tedy takÃ© datum ve stejnÃ©m formÃ¡tu jako string. Nic. DobÅe, poslÃ­m ho jako DateTime. Nic. AÅ¾ po hodnÄ dlouhÃ© dobÄ a nahlÃ¡Å¡enÃ©m bugu jsem dostat fuck off odpovÄÄ, Å¾e to datum zadÃ¡vÃ¡m Å¡patnÄ a musÃ­ to bÃ½t v nÃ¡sledujÃ­cÃ­m formÃ¡tu:\n\n```php\n//...\narray(\n\t'year' => ...->format('Y'),\n\t'month' => ...->format('m'),\n\t'day' => ...->format('d'),\n\t'hour' => ...->format('H'),\n\t'minute' => ...->format('i'),\n)\n//...\n```\n\nA dost vole, seru na to. Na to nemÃ¡m nervy. Zase ta samÃ¡ otÃ¡zka. ProÄ? VÅ¾dyÅ¥... Ale nic. UÅ¾ radÄji nic.\n\nProsÃ­m vÅ¡echny programÃ¡tory, **snaÅ¾te se vÃ­c**. CÃ­lem by mÄlo bÃ½t **usnadnit pouÅ¾Ã­vÃ¡nÃ­**, nikoliv vÅ¡ak sobÄ, ale **uÅ¾ivatelÅ¯m**. ProsÃ­m...\n\nHowgh.","frontmatter":"id: 54e244cd-2b74-4532-b36c-74a7827aa231\ntimestamp: 1405627130000\ntitle: SraÄkoAPI\nslug: srackoapi"},{"attributes":{"id":"d0b9d1c4-61c7-49d1-9f10-e645525a5726","timestamp":1405252851000,"title":"Novinky na blogu a extension RFC","slug":"novinky-na-blogu-a-extension-rfc"},"body":"Kdo pravidelnÄ sleduje [mÅ¯j twitter](https://twitter.com/mrtnzlml), tak uÅ¾ to vÃ­. A je to skvÄlÃ©! VÄera jsem totiÅ¾ [mergnul](https://github.com/mrtnzlml/zlml.cz/commit/b21775df522271e81302d2987ff44d5285b245eb) dÅ¯leÅ¾itou ÄÃ¡st tohoto blogu a tÃ­m vydal verzi 1.1 snad stable... (-: JednÃ¡ se o celkem vÃ½znamnÃ½ krok, ale stÃ¡le je to nic oproti tomu co mÃ¡m v plÃ¡nu. V dneÅ¡nÃ­m ÄlÃ¡nku bych se rÃ¡d podÄlil o vÄtÅ¡inu zajÃ­mavÃ½ch novinek a v druhÃ© ÄÃ¡sti bych rÃ¡d poÅ¾Ã¡dat o pomoc s rozvinutÃ­m jednoho zajÃ­mavÃ©ho nÃ¡padu.\n\n# Novinky v release 1.1\n\nA hned prvnÃ­ novinka je ta nejzajÃ­mavÄjÅ¡Ã­. ZastÃ¡vÃ¡m nÃ¡zor, Å¾e by si mÄl programÃ¡tor za svÃ½m kÃ³dem stÃ¡t a to v kaÅ¾dÃ© situaci. Proto jsem se rozhodl, Å¾e pustÃ­m kohokoliv do svÃ© administrace. OstatnÄ proÄ ne. Je to vÃ½zva. RÃ¡d bych vÅ¡ak napÅed poÅ¾Ã¡dal kohokoliv kdo najde nÄjakou chybu, aby mi to dal vÄdÄt na zÃ¡kladÄ nepsanÃ© programÃ¡torskÃ© etikety a nesnaÅ¾il se celÃ½ blog hned zniÄit. ZÃ¡lohu mÃ¡m... :-) Administraci najdete na adrese zlml.cz/admin a pÅÃ­stupovÃ© Ãºdaje jsou `demo / demo`. Enjoy.\n\nAÄkoliv je prvnÃ­ pÅedstavenÃ¡ novinka asi nejzajÃ­mavÄjÅ¡Ã­ pro kohokoliv jinÃ©ho, pro mÄ osobnÄ je nejzajÃ­mavÄjÅ¡Ã­ novÃ½ systÃ©m vklÃ¡dÃ¡nÃ­ obrÃ¡zkÅ¯. To je nÄco co mi na blogu dlouho chybÄlo. PÅedstavoval jsem si to tak, Å¾e bych obrÃ¡zky jednoduÅ¡e a rychle nahrÃ¡l a stejnÄ jednoduÅ¡e bych je vloÅ¾il do aktuÃ¡lnÄ psanÃ©ho ÄlÃ¡nku. A pÅesnÄ to teÄ mÅ¯Å¾u udÄlat. PouÅ¾il jsem [fineuploader](http://fineuploader.com/), protoÅ¾e je to skvÄlÃ½ program. MÅ¯Å¾u AJAXovÄ nahrÃ¡vat soubÄÅ¾nÄ nÄkolik obrÃ¡zkÅ¯ s velikostÃ­ klidnÄ aÅ¾ za PHP limitem `upload_max_filesize` a nebo navÃ¡zat na pÅeruÅ¡enÃ© nahrÃ¡vÃ¡nÃ­. To vÅ¡e vlastnÄ dÃ­ky chunk uploadu. UmÃ­ toto vÃ¡Å¡ blog? Zkuste si na sdÃ­lenÃ©m hostingu nahrÃ¡t soubor o velikosti tÅeba 50MB...\n\nToto jsou dvÄ nejdÅ¯leÅ¾itÄjÅ¡Ã­ zmÄny, na kterÃ½ch jsem v desetinkovÃ© verzi pracoval. SprÃ¡va uÅ¾ivatelÅ¯ a cool image uploader. DÃ¡le jsem udÄlal opÄt nÄkolik designovÃ½ch zmÄn a fixÅ¯, ale uÅ¾ se nejednÃ¡ o nic tak dÅ¯leÅ¾itÃ©ho aby to stÃ¡lo za ÅeÄ.\n\n# DalÅ¡Ã­ kroky a Å¾Ã¡dost o pomoc\n\nSvÅ¯j blog mÃ¡m rÃ¡d. A mÃ¡m ho rÃ¡d aÅ¾ tak, Å¾e bych byl rÃ¡d, aby ho Äasem pouÅ¾Ã­val i nÄkdo jinÃ½. To jeÅ¡tÄ nÄjakou chvÃ­li potrvÃ¡, ale uÅ¾ nÄjakÃ½ Äas mi leÅ¾Ã­ v hlavÄ nÃ¡pad, jak se k tomuto poÅ¾adavku pÅiblÃ­Å¾it. RÃ¡d bych totiÅ¾ blog pÅepsal do Nette extensions. VÄera jsem poprÃ© [nakousl](https://github.com/mrtnzlml/zlml.cz/commit/1ffc33bc5dddbadfc1b6ce7d30dccb09938800cb) svojÃ­ myÅ¡lenku. Princip je jednoduchÃ½. PÅepÃ­Å¡u napÅÃ­klad funkcionalitu obrÃ¡zkÅ¯ (nebo Äehokoliv jinÃ©ho) do extension a kdyÅ¾ bude nÄkdo budovat novÃ½ blog, tak si jen v konfigu zvolÃ­ jakÃ© moduly chce (to se dÃ¡ snadno generovat):\n\n```neon\nextensions:\n\t- ImageExtension\n    - SearchExtension\n    - ...\n```\n\nSamotnÃ© extension mÃ¡ potom za Ãºkol se samo spustit (`afterCompile`) a pÅidat nÄjakÃ© funkcionality do stacku (v metodÄ `initialize`). V prvnÃ­m nakousnutÃ­ napÅÃ­klad pÅidÃ¡vÃ¡m poloÅ¾ku do menu a skuteÄnÄ to funguje tak jak pÃ­Å¡u. Jakmile nÄjakou funkci nechci, prostÄ ji z konfigu zruÅ¡Ã­m. VÃ½hodnÃ© na tom je to, Å¾e mÅ¯Å¾u proÅ¡pikovat blog mÃ­sty, kam lze novÃ© feature zaregistrovat a dajÃ­ se velmi jednoduÅ¡e provÃ¡zat pÅes composer. **Ale.** MÃ¡ to hÃ¡Äek.\n\nKdyÅ¾ jsem si s touto myÅ¡lenkou hrÃ¡l jen v hlavÄ, tak to bylo super, protoÅ¾e vÅ¡e fungovalo perfektnÄ. BohuÅ¾el jsem narazil na to, Å¾e nevÃ­m jak pÄknÄ vyÅeÅ¡it Å¡ablony a routovÃ¡nÃ­ na nÄ. Å ablony jsou totiÅ¾ jedna z dalÅ¡Ã­ch vÄcÃ­ kterÃ© bych zde chtÄl vyÅeÅ¡it. Bylo by fajn, kdyby mohl mÃ­t kaÅ¾dÃ½ moÅ¾nost si tÅeba Å¡ablony podÄdit a zmÄnit si kompletnÄ celÃ½ design. To zase takovÃ½ problÃ©m nenÃ­. Ale jak vyÅeÅ¡it to, kdyÅ¾ chci v extension napÅ. pÅidat novou strÃ¡nku? Kam umÃ­stit Å¡ablonu a jak ji naroutovat? NÄjak jsem to dneska v noci uÅ¾ nedokÃ¡zal vymyslet. MÃ¡te nÄkdo prosÃ­m nÄjakÃ½ zajÃ­mavÃ½ nÃ¡pad? DÃ­ky...\n\nNo a naposledy uÅ¾ snad jenom: [Give me a star, please](https://github.com/mrtnzlml/zlml.cz)...","frontmatter":"id: d0b9d1c4-61c7-49d1-9f10-e645525a5726\ntimestamp: 1405252851000\ntitle: Novinky na blogu a extension RFC\nslug: novinky-na-blogu-a-extension-rfc"},{"attributes":{"id":"f9727676-c2eb-4ee0-b86d-8126663f007d","timestamp":1402842853000,"title":"Äteme Data Matrix bez ÄteÄky","slug":"cteme-data-matrix-bez-ctecky"},"body":"![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/1fc11f25-abc2-453e-abb4-adb31d0ccf17/datamatrix.png)\n\nDneÅ¡nÃ­m ÄlÃ¡nkem navazuji na dÅÃ­vÄjÅ¡Ã­ ÄlÃ¡nek [Äteme QR kÃ³dy bez ÄteÄky](cteme-qr-kody-bez-ctecky), ve kterÃ©m jsem ÅeÅ¡il ÄtenÃ­ QR kÃ³du bez pouÅ¾itÃ­ jakÃ©hokoliv ÄtecÃ­ho zaÅÃ­zenÃ­. A dnes budu ÅeÅ¡it tÃ©mÄÅ to samÃ©, ale s jinÃ½m kÃ³dem. Data Matrix nenÃ­ tolik znÃ¡mÃ½, ale myslÃ­m si, Å¾e patÅÃ­, hned po QR kÃ³dech, mezi nejpouÅ¾Ã­vanÄjÅ¡Ã­ kÃ³dy vÅ¯bec. Po tomto ÄlÃ¡nku si jich zajistÃ© zaÄnete vÅ¡Ã­mat vÃ­ce. Naposledy jsem jej vidÄl na balÃ­Äku od jahod... (-: OpÄt platÃ­, Å¾e hlavnÃ­m cÃ­lem je kÃ³d pÅeÄÃ­st, nikoliv mu ÃºplnÄ porozumÄt, takÅ¾e nebudu rozebÃ­rat velkÃ© detaily.\n\nLevÃ½ obrÃ¡zek je kÃ³d o kterÃ©m bude celou dobu ÅeÄ.\n\n# Trocha nezbytnÃ© teorie\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/0dd271b6-21ea-4c3c-a447-723b76257b50/datamatrix-key.png)\n\nTento kÃ³d je oproti QR kÃ³du velmi jednoduchÃ½, takÅ¾e i teorie bude struÄnÃ¡. VeÅ¡kerÃ¡ data a korekce chyb je ukryta uvnitÅ rÃ¡mu, kterÃ½ je z ÄÃ¡sti plnÃ½. To umoÅ¾Åuje ÄteÄkÃ¡m poznat kde vÅ¡ude je jeÅ¡tÄ kÃ³d a jak je natoÄen. Z pohledu \"ruÄnÃ­ho\" ÄtenÃ­ je tato ÄÃ¡st nezajÃ­mavÃ¡. ModÅe jsou zvÃ½raznÄny 4 bity, kterÃ© k niÄemu neslouÅ¾Ã­ a zaplÅujÃ­ jen prÃ¡zdnÃ© mÃ­sto. Ne vÅ¾dy je tento Ãºkaz vidÄt. BohuÅ¾el tentokrÃ¡t nemÃ¡m k dispozici originÃ¡lnÃ­ specifikaci, takÅ¾e nevÃ­m jakÃ½m pÅesnÃ½m pravidlÅ¯m to podlÃ©hÃ¡.\n\nNejpodstatnÄjÅ¡Ã­ jsou vÅ¡ak ÄervenÄ zarÃ¡movanÃ© oblasti. VÅ¡echny majÃ­ takovÃ½to tvar a vÅ¾dy majÃ­ pÅesnÄ danÃ© umÃ­stÄnÃ­. Toto umÃ­stÄnÃ­ je vlastnÄ dÃ¡no prvnÃ­ oblastÃ­ s ÄÃ­slem 2. NicmÃ©nÄ z hlediska umÃ­stÄnÃ­ dat je nejdÅ¯leÅ¾itÄjÅ¡Ã­ pÃ¡tÃ½ bit v prvnÃ­m sloupci od kterÃ©ho vÅ¡e startuje. Pokud obrazec pÅesahuje to timing zÃ³n, tedy do naÅ¾loutlÃ©ho rÃ¡mu, tak pokraÄuje na druhÃ© stranÄ, tedy dole, nebo na pravÃ© stranÄ.\n\nData se v kÃ³du Ätou podle ÄÃ­sel, tedy podÃ©l takovÃ© diagonÃ¡lnÃ­ vlnovky a to aÅ¾ do obrazce s ÄÃ­slem 5. Tento obrazec urÄuje konec zprÃ¡vy. V naÅ¡em pÅÃ­padÄ se tedy jednÃ¡ o zprÃ¡vu, kterÃ¡ mÃ¡ 4 znaky. A jak uÅ¾ to tak bÃ½vÃ¡, tak jsou vÅ¡echny znaky pÅenÃ¡Å¡eny v binÃ¡rnÃ­m formÃ¡tu. Zbytek kÃ³du, kterÃ½ nenÃ­ nijak zvÃ½raznÄn je klasicky ReedâSolomon korekce chyb. MoÅ¾nÃ¡ bych o tomto mechanismu takÃ© mohl nÄkdy napsat ÄlÃ¡nek. NicmÃ©nÄ napovaÅ¾uji to za ÃºplnÄ jednoduchÃ¡ zÃ¡leÅ¾itost, takÅ¾e si to zatÃ­m nechÃ¡m v zÃ¡sobÄ.\n\n# Hrajeme si na ÄteÄku\n\n\nPÅeÄÃ­st zprÃ¡vu v takto teoreticky rozebranÃ©m kÃ³du uÅ¾ je otÃ¡zka chvilky. NajdÅÃ­ve si vytÃ¡hneme vÅ¡echny potÅebnÃ© ÄÃ¡sti. V tomto pÅÃ­padÄ je zbyteÄnÃ© ÅeÅ¡it pÃ¡tÃ½ Älen, jelikoÅ¾ se jednÃ¡ o poslednÃ­ ukonÄovacÃ­. Jeho hodnota je 129 v desÃ­tkovÃ© soustavÄ. ZÃ­skanÃ© Ãºtvary jsou vidÄt na obrÃ¡zku nÃ­Å¾e.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/76028c59-4e5f-42f4-a411-3452844a30d2/last.png)\n\nÄÃ­sla urÄujÃ­ pozici bitÅ¯ v binÃ¡rnÃ­m ÄÃ­sle. Po pÅepsÃ¡nÃ­ do binÃ¡rnÃ­ podoby majÃ­ znaky nÃ¡sledujÃ­cÃ­ hodnoty:\n\n```\n01100010 01101001 01110000 01101011\n```\n\nV desÃ­tkovÃ© podobÄ jsou to tedy ÄÃ­sla:\n\n```\n98 105 112 107\n```\n\nNÃ¡slednÄ je zapotÅebÃ­ od tÄchto ÄÃ­sel odeÄÃ­st jednotku. Abych Åekl pravdu, tak jsem po dlouhÃ©m uvaÅ¾ovÃ¡nÃ­ nedokÃ¡zal pÅijÃ­t s rozumnÃ½m vysvÄtlenÃ­m proÄ se to tak dÄlÃ¡. PÅ¯vodnÄ mÄ napadadlo, Å¾e je to kvÅ¯li lepÅ¡Ã­mu rozloÅ¾enÃ­ bitÅ¯ ve vÃ½slednÃ©m obrazci. StejnÄ tak jako se u QR kÃ³dÅ¯ bity jeÅ¡tÄ maskujÃ­. To ale nedÃ¡vÃ¡ smysl. Je to jen posunutÃ­ o jedna. Nic vÃ­c... NicmÃ©nÄ je zÅejmÃ©, Å¾e spousta vÄcÃ­ je v takovÃ½chto kÃ³dech minimÃ¡lnÄ na zamyÅ¡lenÃ­. Ale zpÄt k poslednÃ­mu kroku. Z pÅedchozÃ­ho ÄlÃ¡nku jiÅ¾ vÅ¡ichni vÄdÃ­, Å¾e ÄÃ­slo 97 je v ASCII tabulce hodnota znaku **a**, takÅ¾e po odeÄtenÃ­ jednotky a pÅepsÃ¡nÃ­ do ÄitelnÃ© podoby zÃ­skÃ¡vÃ¡me ÅeÅ¡enÃ­:\n\n```\n97 104 111 106\na  h   o   j\n```\n\nTento kÃ³d je pro ÄtenÃ­ bez ÄteÄky daleko snadnÄjÅ¡Ã­, komplikuje to jen nezvyklÃ© uspoÅÃ¡dÃ¡nÃ­ bitÅ¯. JakÃ½ dalÅ¡Ã­ kÃ³d bych mÄl dostat pod drobnohled? Snad to pÅ¯jde. MÃ¡m zde totiÅ¾ rozpracovanÃ½ jeÅ¡tÄ jinÃ½ a nemohu k nÄmu sehnat normu pro nahlÃ©dnutÃ­, takÅ¾e jsem se zatÃ­m zasekl... (-:","frontmatter":"id: f9727676-c2eb-4ee0-b86d-8126663f007d\ntimestamp: 1402842853000\ntitle: Äteme Data Matrix bez ÄteÄky\nslug: cteme-data-matrix-bez-ctecky"},{"attributes":{"id":"76a53072-7779-478d-9557-c9f855ebce4d","timestamp":1402601786000,"title":"Disqus lazy loading","slug":"disqus-lazy-loading"},"body":"Tento ÄlÃ¡nek ve skuteÄnosti odstartovalo zdÃ¡nlivÄ nesouvisejÃ­cÃ­ vlÃ¡kno na [Nette fÃ³ru .{target:_blank}](http://forum.nette.org/cs/19397-ako-sa-zbavit-fid-v-url-ak-sa-nemylim). V tomto vlÃ¡knu se ÅeÅ¡Ã­ parametr *_fid* v URL adrese, kterÃ½ tam Nette framework pÅiklÃ¡dÃ¡ kvÅ¯li flash messages. Tato vlastnost nÄkoho skuteÄnÄ hodnÄ Å¡tve, mÄ zase aÅ¾ tak moc ne. JenÅ¾e kdyÅ¾ jsem nad tÃ­m vlÃ¡knem chvÃ­li sedÄl, tak jsem si uvÄdomil, Å¾e mÃ¡m komentÃ¡ÅovÃ½ systÃ©m Disqus implementovanÃ½ Å¡patnÄ. ÄtÄte dÃ¡l a vyhnÄte se stejnÃ© chybÄ... (-:\n\n# UniverzÃ¡lnÃ­ kÃ³d\n\nDisqus poskytuje \"by default\" univerzÃ¡lnÃ­ kÃ³d, kterÃ½ prakticky pouze zkopÃ­rujete na svÅ¯j web na poÅ¾adovanÃ© mÃ­sto a je hotovo. Tento kÃ³d vypadÃ¡ zhruba takto:\n\n```html\n<div id=\"disqus_thread\"></div>\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */\n    var disqus_shortname = ''; // required: replace it with your forum shortname\n\n    /* * * DON'T EDIT BELOW THIS LINE * * */\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n<a href=\"http://disqus.com\" class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">Disqus</span></a>\n```\n\nJe to pohodlnÃ©, ale je to ÃºplnÄ blbÄ. Nejenom pro Nette aplikace, ale myslÃ­m si, Å¾e tak nÄjak celkovÄ pro vÅ¡echny aplikace. Fungovat to sice bude, to ano. Ale jen tak zdÃ¡nlivÄ. ProblÃ©m je totiÅ¾ v tom, Å¾e toto nastavenÃ­ bere jako identifikÃ¡tor diskuse URL adresu a pokud se jen drobnÄ zmÄnÃ­, tak se zaloÅ¾Ã­ novÃ¡ diskuse. PÅehled tÄchto diskusÃ­ je pak vidÄt v Disqus administraci. To s sebou nese celou Åadu problÃ©mÅ¯. Diskuse nejde poÅÃ¡dnÄ zamknout a uÅ¾ to, Å¾e k jednÃ© strÃ¡nce mÅ¯Å¾e bÃ½t vÃ­ce diskusÃ­ je problÃ©m. KaÅ¾dÃ¡ diskuse totiÅ¾ musÃ­ mÃ­t unikÃ¡tnÃ­ identifikÃ¡tor [disqus_identifier .{target:_blank}](https://help.disqus.com/customer/portal/articles/472098-javascript-configuration-variables) nezÃ¡visle na parametrech (pokud ovÅ¡em tyto parametry nejsou Å¾Ã¡doucÃ­).\n\n# Lazy loading\n\nJÃ¡ jsem sice nepouÅ¾il defaultnÃ­ konfiguraci, ale udÄlal jsem prakticky tu samou chybu. TeÄ ale koneÄnÄ k lazy loadingu. Na svÃ©m blogu to jiÅ¾ pouÅ¾Ã­vÃ¡m dlouhou dobu a myslÃ­m si, Å¾e se to jiÅ¾ osvÄdÄilo. InspiracÃ­ k mÃ© implementaci je [tento gist .{target:_blank}](https://gist.github.com/omgmog/2310982).\n\nStaÄÃ­ umÃ­stit nÃ¡sledujÃ­cÃ­ kÃ³d do nÄjakÃ©ho souboru *main.js*, kterÃ½ se spouÅ¡tÃ­ po naÄtenÃ­ strÃ¡nky:\n\n```javascript\nvar disqus_div = $(\"#disqus_thread\");\nif (disqus_div.size() > 0) {\n    var ds_loaded = false,\n    top = $('.load_disqus').offset().top, //upravit podle potÅeby\n    disqus_data = disqus_div.data(),\n    check = function () {\n        if (!ds_loaded && $(window).scrollTop() + $(window).height() > top) {\n            ds_loaded = true;\n            for (var key in disqus_data) {\n                if (key.substr(0, 6) == 'disqus') {\n                    window['disqus_' + key.replace('disqus', '').toLowerCase()] = disqus_data[key];\n                }\n            }\n            var dsq = document.createElement('script');\n            dsq.type = 'text/javascript';\n            dsq.async = true;\n            dsq.src = 'http://' + window.disqus_shortname + '.disqus.com/embed.js';\n            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n        }\n    };\n    $(window).scroll(check);\n    check();\n}\n```\n\nTÃ­m to vÅ¡ak nekonÄÃ­. Je samozÅejmÄ nutnÃ© urÄit kde se Disqus bude zobrazovat:\n\n```html\n<div class=\"hidden-print\">\n\t<div id=\"disqus_thread\" data-disqus-shortname=\"mrtnzlml\" data-disqus-url=\"{link //this}\"></div>\n\t<noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n\t<a href=\"http://disqus.com\" class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">Disqus</span></a>\n</div>\n```\n\nKlÃ­ÄovÃ½ je zde prÃ¡vÄ data atribut *disqus-url*. No a aby byl kod kompletnÃ­, tak je zapotÅebÃ­ nÄkam umÃ­stit CSS trÃ­du *.load_disqus*. Tu doporuÄuji umÃ­stit nÄkam nad diskusi a tÃ­m myslÃ­m tÅeba o celou viditelnou strÃ¡nku. Disqus se tak zaÄne naÄÃ­tat o nÄco dÅÃ­ve, neÅ¾ k nÄmu ÄtenÃ¡Å doscrolluje, takÅ¾e se stihne naÄÃ­st a nebude to ruÅ¡it. Ve vÃ½sledku se tedy Disqus nenaÄÃ­tÃ¡ po otevÅenÃ­ strÃ¡nky, takÅ¾e je naÄtenÃ­ sviÅ¾nÃ©, ale po napÅ. pÅeÄtenÃ­ ÄlÃ¡nku je jiÅ¾ naÄtenÃ½...\n\nA co vy? MÃ¡te Disqus na svÃ©m webu implementovanÃ½ sprÃ¡vnÄ? (-:","frontmatter":"id: 76a53072-7779-478d-9557-c9f855ebce4d\ntimestamp: 1402601786000\ntitle: Disqus lazy loading\nslug: disqus-lazy-loading"},{"attributes":{"id":"167331c6-491d-45bd-8c29-02877a349cb3","timestamp":1400490051000,"title":"StÃ¡hnÄte si lepÅ¡Ã­ blog","slug":"stahnete-si-lepsi-blog"},"body":"Äas od Äasu se na Nette fÃ³ru najde nÄkdo, kdo hledÃ¡ vzorovÃ½ projekt do kterÃ©ho by se mohl podÃ­vat. VlastnÄ se vÄtÅ¡inou hledÃ¡ cokoliv, jakÃ¡koliv inspirace. BohuÅ¾el se zÅejmÄ vÅ¡ichni bojÃ­ toho, Å¾e o svÅ¯j projekt pÅijdou, protoÅ¾e v nÄm nÄkdo najde bezpeÄnostnÃ­ chybu. JÃ¡ se toho takÃ© bojÃ­m, ale lepÅ¡Ã­ neÅ¾ pÅed tÃ­m utÃ­kat je se tomu postavit Äelem. A tak je to tady.\n\n# Kdokoliv cokoliv\n\nK dispozici je pro nahlÃ©dnutÃ­ tento blog. A nejen k nahlÃ©dnutÃ­, ale takÃ© k [volnÃ©mu pouÅ¾Ã­vÃ¡nÃ­](develop).\nNa pozadÃ­ bÄÅ¾Ã­ hned nÄkolik technologiÃ­, kterÃ© si mÅ¯Å¾ete prakticky osahat:\n\n+ Nette Framework ([nette.org .{target:_blank}](http://nette.org/))\n+ Nette Tester ([tester.nette.org .{target:_blank}](http://tester.nette.org/))\n+ Texy *(je sexy)* ([texy.info .{target:_blank}](http://texy.info/))\n+ FSHL ([fshl.kukulich.cz .{target:_blank}](http://fshl.kukulich.cz/))\n+ Webloader ([addons.nette.org .{target:_blank}](http://addons.nette.org/janmarek/webloader))\n+ Kdyby\\Doctrine 2 ([GitHub](https://github.com/Kdyby/Doctrine))\n\nK dispozici je i databÃ¡ze, protoÅ¾e si myslÃ­m, Å¾e bych se i s Ãºnikem databÃ¡ze nemÄl nijak ohrozit... :-) ÃÄelem tohoto nÃ¡padu a nÃ¡slednÄ rozhodnutÃ­ je poskytnout pokud moÅ¾no funkÄnÃ­ a aktivnÃ­ projekt, kterÃ½ stavÃ­ prÃ¡vÄ na tÄchto technologiÃ­ch. DÅ¯vodem je pak moje zkuÅ¡enost s tvrdÃ½m zaÄÃ¡tkem. MÃ¡m pÅÃ­leÅ¾itost obÄas pracovat s nÄkÃ½m kdo se pÅesnÄ toto chce nauÄit, bohuÅ¾el pÃ¡r lidÃ­ uÅ¾ to prostÄ vzdalo, protoÅ¾e je toho *moc* a nenÃ­ mnoho lidÃ­ kteÅÃ­ skuteÄnÄ pomohou (rozhodnÄ ne na fÃ³ru). SnaÅ¾Ã­m se tedy zaplnit toto prÃ¡zdnÃ© mÃ­sto a nabÃ­dnout tento blog jako jeden z moÅ¾nÃ½ch zaÄÃ¡tkÅ¯. Mimochodem neÅÃ­kÃ¡m, Å¾e moje ÅeÅ¡enÃ­ je nejlepÅ¡Ã­, nebo sprÃ¡vnÃ©. Je jedno z moÅ¾nÃ½ch a funkÄnÃ­ch. StÃ¡hnout si jej mÅ¯Å¾ete ze svÃ© oblÃ­benÃ© verzovacÃ­ sluÅ¾by:\n\n```html\n<div class=\"row\" style=\"margin-top:50px;margin-bottom:50px\">\n\t<div class=\"col-lg-6 col-md-6 col-sm-6 text-right\">\n\t\t<a class=\"btn btn-default\" href=\"https://bitbucket.org/mrtnzlml/zlml.cz\" target=\"_blank\">\n\t\t\t<img src=\"/img/loga/bitbucket.png\">\n\t\t</a>\n\t</div>\n\t<div class=\"col-lg-6 col-md-6 col-sm-6\">\n\t\t<a class=\"btn btn-default\" href=\"https://github.com/mrtnzlml/zlml.cz\" target=\"_blank\">\n\t\t\t<img src=\"/img/loga/github.png\">\n\t\t</a>\n\t</div>\n</div>\n```\n\nPodrobnÄjÅ¡Ã­ popis najdete na [samostatnÃ© strÃ¡nce](develop) vÄnovanÃ© tomuto projektu. Byl bych moc rÃ¡d, kdybych touto cestou pouze nenabÃ­dl nÄco chybÄjÃ­cÃ­ho, ale takÃ© zÃ­skal zpÄtnou vazbu. NestojÃ­m o pochvaly. Ty samozÅejmÄ potÄÅ¡Ã­, ale mnohem pÅÃ­nosnÄjÅ¡Ã­ jsou praktickÃ© poznÃ¡mky k implementaci, nebo funkcÃ­m. Nad takovou vÄcÃ­ se vÅ¾dy rÃ¡d zamyslÃ­m...","frontmatter":"id: 167331c6-491d-45bd-8c29-02877a349cb3\ntimestamp: 1400490051000\ntitle: StÃ¡hnÄte si lepÅ¡Ã­ blog\nslug: stahnete-si-lepsi-blog"},{"attributes":{"id":"34ecd347-57b2-4e4f-9a99-b77edbec7df1","timestamp":1399974862000,"title":"ZnovupouÅ¾itelnÃ½ formulÃ¡Å","slug":"znovupouzitelny-formular"},"body":"KaÅ¾dÃ½ kdo nÄjakou chvÃ­li pracuje s Nette Frameworkem jiÅ¾ jistÄ narazil na prvky, kterÃ© lze pouÅ¾Ã­t v aplikaci opakovanÄ. ÅÃ­kejme jim znovupouÅ¾itelnÃ© komponenty, nebo prostÄ jen komponenty. NÃ¡sledujÃ­cÃ­ text mÃ¡ za Ãºkol ukÃ¡zat opÄt maximÃ¡lnÄ prakticky a ucelenÄ jedno z moÅ¾nÃ½ch ÅeÅ¡enÃ­ jak k tomuto problÃ©mu pÅistupovat a co se mi na tomto ÅeÅ¡enÃ­ lÃ­bÃ­, nebo naopak nelÃ­bÃ­.\n\n# Motivace\n\nProÄ vÅ¯bec pÅemÃ½Å¡let o komponentÃ¡ch? Na tuto vÄc mÃ¡ pravdÄpodobnÄ dost lidÃ­ zcela jinÃ½ nÃ¡zor. Pro mÄ je havnÃ­ motivacÃ­ to, Å¾e si vyÄistÃ­m presentery. Chci toho mÃ­t v presenterech skuteÄnÄ tak akorÃ¡t. VÅ¾dyÅ¥ podle MVP struktury bych v presenterech nemÄl mÃ­t nic sloÅ¾itÃ©ho. A pak je zde ta znovupouÅ¾itelnost. Co kdyÅ¾ se rozhodnu, Å¾e potÅebuji pouÅ¾Ã­t stejnÃ½ formulÃ¡Å na vÃ­ce mÃ­stech? PÅece ho nebudu kopÃ­rovat. A Å¾e takovÃ½ poÅ¾adavek je sice Äasto nÄkdo zmÃ­nÃ­, ale prakticky nenÃ­ moc reÃ¡lnÃ½? Ale kdepak. Zrovna nedÃ¡vno jsem vytvÃ¡Åel mnoho strÃ¡nek a na kaÅ¾dÃ© jsem chtÄl mÃ­t prÃ¡vÄ kontaktnÃ­ formulÃ¡Å. To je poÅ¾adavek na komponentu jako dÄlanÃ½...\n\n# Presenter\n\nVÅ¾dy kdyÅ¾ programuji nÄco takovÃ©ho, tak se nedÃ­vÃ¡m na to, jak je to sprÃ¡vnÄ z hlediska OOP a bÅ¯h vÃ­ Äeho vÅ¡eho jeÅ¡tÄ. Pro mÄ je v souÄasnÃ© chvÃ­li klÃ­ÄovÃ© to, jak se danÃ© ÅeÅ¡enÃ­ bude pouÅ¾Ã­vat. PÅesenter by tedy mohl vypadat tÅeba takto:\n\n```php\n<?php\n\nclass AdminPresenter extends BasePresenter {\n\n\t/** @var \\ActualityFactory @inject */\n\tpublic $actualityFactory;\n\n\tprivate $id;\n\n\tpublic function actionAktualita($id = NULL) {\n\t\t$this->id = $id;\n\t}\n\n\tprotected function createComponentForm() {\n\t\t$control = $this->actualityFactory->create($this->id);\n\t\t$control['form']->onSuccess[] = function () {\n\t\t\t$this->redirect('default');\n\t\t};\n\t\treturn $control;\n\t}\n\n}\n```\n\nMÃ¡m tedy presenter, kterÃ½ je napÅÃ­klad pro administraci a jednu podstrÃ¡nku, kterÃ¡ bude slouÅ¾it jak pro editaci aktuality, tak i pro pÅidÃ¡nÃ­ novÃ© aktuality. Proto je parametrem *action* prÃ¡vÄ `id = NULL`. Tim totiÅ¾ ÅÃ­kÃ¡m, Å¾e mÅ¯Å¾e pÅijÃ­t jako parametr *ID* aktuality (v tom pÅÃ­padÄ ji budu chtÃ­t upravovat), nebo toto *ID* nebude pÅedÃ¡no a v tom pÅÃ­padÄ bude hodnota *NULL* a budu s tÃ­m pozdÄji patÅiÄnÄ naklÃ¡dat.\n\nV poslednÃ­ metodÄ si danÃ½ formulÃ¡Å vytvoÅÃ­m. Teoreticky by staÄila pouze prvnÃ­ ÅÃ¡dka. PÅidÃ¡vÃ¡m vÅ¡ak jeÅ¡tÄ dalÅ¡Ã­ chovÃ¡nÃ­ do pole `onSuccess[]`, protoÅ¾e chci komponentu pouÅ¾Ã­vat na vÃ­ce mÃ­stech, ale pokaÅ¾dÃ© po ÃºspÄchu pÅesmÄrovat na jinou strÃ¡nku. Zde je jedna z vÄcÃ­ kterÃ© se mi nelÃ­bÃ­. A to je prÃ¡vÄ to volÃ¡nÃ­ `$control['form']->onSuccess[] = ...`. MusÃ­m totiÅ¾ vÄdÄt jak je pojmenovanÃ½ formulÃ¡Å uvnitÅ komponenty, coÅ¾ mÄ ale je skuteÄnosti vÅ¯bec nezajÃ­mÃ¡. Mnohem radÄji bych byl tÅeba za zÃ¡pis `$control->onSuccess[] = ...`. ChÃ¡pu, Å¾e se nemusÃ­ pouÅ¾Ã­t komponenta pouze na fomulÃ¡Å, ale pÅesto. **NeznÃ¡te nÄkdo lepÅ¡Ã­ ÅeÅ¡enÃ­?**\n\nA teÄ pÅijde zÃ¡ludnÃ¡ otÃ¡zka. Co je to ta factory a proÄ jÃ­ vlastnÄ pouÅ¾Ã­vÃ¡m?\n\n# Factory\n\nProtoÅ¾e v komponentÃ¡ch velmi Äasto potÅebuji nÄjakÃ© zÃ¡vislosti, musÃ­m je tam nÄjak dostat. K tomu slouÅ¾Ã­ napÅÃ­klad generovanÃ© tovÃ¡rniÄky. JednÃ¡ se vlastnÄ pouze o interface:\n\n```php\n<?php\n\ninterface IActualityFactory {\n\n\t/** @return \\Cntrl\\Actuality */\n\tpublic function create();\n\n}\n```\n\nNette se tÃ©to tovÃ¡rniÄky chytÃ­ a vytvoÅÃ­ zhruba tento kÃ³d:\n\n```php\n<?php\n\nfinal class SystemContainer_IActualityFactoryImpl_58_IActualityFactory implements IActualityFactory {\n\n\tprivate $container;\n\n\tpublic function __construct(Nette\\DI\\Container $container) {\n\t\t$this->container = $container;\n\t}\n\n\tpublic function create() {\n\t\t$service = new Cntrl\\Actuality;\n\t\treturn $service;\n\t}\n\n}\n```\n\nZde je tedy (kdyÅ¾ bude potÅeba) moÅ¾nÃ© vytvoÅit nÄjakÃ© zÃ¡vislosti a v metodÄ `create()` je komponentÄ pÅedat. To vÅ¡e lze udÄlat automaticky a Nette se o to postarÃ¡. Dokonce lze pÅedÃ¡vat i parametry z konfiguraÄnÃ­ho souboru. Je to nesmÃ­rnÄ elegantnÃ­ ÅeÅ¡enÃ­. Kdybych tovÃ¡rniÄky nepouÅ¾il, musel bych vytvÃ¡Ået ruÄnÄ komponentu, to by ale znamenalo, Å¾e bych takÃ© musel pÅedÃ¡vat vÅ¡echny zÃ¡vislosti ruÄnÄ a jen bych si tÃ­m pÅidÄlal prÃ¡ci. Zkuste si vytvoÅit komponentu bez pouÅ¾itÃ­ factory. Je nesmysl tahat si v presenteru nepotÅebnÃ© zÃ¡vislosti pÅes presenter... Jak vÅ¡ak pÅedat parametry z presenteru? NetuÅ¡Ã­m, jestli to lze nÄjak generovanou tovÃ¡rniÄku nauÄit, nic nÃ¡m vÅ¡ak nebrÃ¡nÃ­ napsat si vlastnÃ­ factory:\n\n```php\n<?php\n\nclass ActualityFactory extends Nette\\Object {\n\n\tprivate $actualities;\n\n\tpublic function __construct(App\\Actualities $actualities) {\n\t\t$this->actualities = $actualities;\n\t}\n\n\tpublic function create($id) {\n\t\treturn new \\Cntrl\\Actuality($this->actualities, $id);\n\t}\n\n}\n```\n\nJe jasnÄ vidÄt, Å¾e tato ruÄnÄ napsanÃ¡ factory vypadÃ¡ velmi podobnÄ jako automaticky vygenerovanÃ¡, ale navÃ­c teÄ mÅ¯Å¾u pÅedat metodÄ `create($id)` parametr, coÅ¾ je pÅesnÄ to co potÅebuji viz presenter. Chci si pÅedat ÄÃ­slo aktuality a nevidÃ­m dÅ¯vod proÄ bych to mÄl dÄlat aÅ¾ v komponentÄ. Komponenta potÅebuje *ID* aktuality, ale kde ho vezme nemusÃ­ ÅeÅ¡it. Je otÃ¡zka, jestli bych si uÅ¾ rovnou nemÄl vytÃ¡hnout data z databÃ¡ze v presenteru. Takto se mi to ale zatÃ­m lÃ­bÃ­ vÃ­c...\n\nRuÄnÄ vytvoÅenou factory musÃ­me jeÅ¡tÄ zaregistrovat v konfiguraÄnÃ­m souboru:\n\n```neon\nservices:\n\t- ActualityFactory\n```\n\nTo je vÅ¡e. UÅ¾ jsme pouze krÅ¯Äek od funkÄnÃ­ho formulÃ¡Åe.\n\n# SamotnÃ¡ komponenta\n\nSamotnÃ½ kÃ³d komponenty uÅ¾ nenÃ­ tÃ©mÄÅ niÄÃ­m zvlÃ¡Å¡tnÃ­, nebo nÄjak nepochopitelnÃ½:\n\n```php\n<?php\n\nnamespace Cntrl;\n\nuse App;\nuse Entity;\nuse Nette\\Application\\UI;\nuse Nette;\n\nclass Actuality extends UI\\Control {\n\n\tprivate $actualities;\n\tprivate $actuality;\n\n\tpublic function __construct(App\\Actualities $actualities, $id) {\n\t\tparent::__construct();\n\t\t$this->actualities = $actualities;\n\t\t$this->actuality = $this->actualities->findOneBy(['id' => $id]);\n\t}\n\n\tpublic function render() {\n\t\t$this->template->setFile(__DIR__ . '/Actuality.latte');\n\t\t$this->template->render();\n\t}\n\n\tprotected function createComponentForm() {\n\t\t$form = new UI\\Form;\n\t\t$form->addText('headline', 'Titulek:');\n\t\t$form->addTextArea('text', 'Text:');\n\t\t$form->addSubmit('send', 'UloÅ¾it');\n\t\tif($this->actuality) { //vÃ½chozÃ­ hodnoty jen pokud aktualita jiÅ¾ existuje\n\t\t\t$form->setDefaults(array(\n\t\t\t\t'headline' => $this->actuality->headline,\n\t\t\t\t'text' => $this->actuality->text,\n\t\t\t));\n\t\t}\n\t\t$form->onSuccess[] = $this->actualityFormSucceeded;\n\t\treturn $form;\n\t}\n\n\tpublic function actualityFormSucceeded(UI\\Form $form) {\n\t\t$values = $form->getValues();\n\t\ttry {\n\t\t\tif(!$this->actuality) { //pokud jeÅ¡tÄ neexistuje vytvoÅÃ­m novou entitu\n\t\t\t\t$this->actuality = new Entity\\Actuality();\n\t\t\t}\n\t\t\t$this->actuality->headline = $values->headline;\n\t\t\t$this->actuality->text = $values->text;\n\t\t\t$this->actuality->date = new \\DateTime();\n\t\t\t$this->actualities->save($this->actuality);\n\t\t\t$this->presenter->flashMessage('Aktualita byla ÃºspÄÅ¡nÄ uloÅ¾ena.', 'success');\n\t\t} catch (\\Exception $exc) {\n\t\t\t$this->presenter->flashMessage($exc->getMessage(), 'danger');\n\t\t}\n\t\t//Å¾Ã¡dnÃ½ redirect, aÅ¾ v presenteru!\n\t}\n\n}\n```\n\nV konstruktoru jednak zÃ­skÃ¡m nÄjakou modelovou tÅÃ­du pro prÃ¡ci s databÃ¡zÃ­ (o to se krom factory  vÅ¯bec nestarÃ¡m) a takÃ© *ID*, kterÃ© pÅiÅ¡lo z presenteru. A rovnou toto *ID* pouÅ¾iju k vytÃ¡hnutÃ­ si dat z databÃ¡ze, protoÅ¾e konstruktor se spustÃ­ vÅ¾dy a jÃ¡ takÃ© vÃ­m, Å¾e tyto data budu vÅ¾dy potÅebovat. V `render()` metodÄ pouze pÅedÃ¡m Å¡ablonu komponenty, kterÃ¡ ve svÃ© nejprimitivnÄjÅ¡Ã­ podobÄ mÅ¯Å¾e vypada pouze takto:\n\n```\n{control form}\n```\n\nOstatnÄ stejnÃ½ kÃ³d mohu pouÅ¾Ã­t pro Å¡ablonu do kterÃ© pÅedÃ¡vÃ¡m komponentu z presenteru. VÃ½sledkem celÃ©ho snaÅ¾enÃ­ je tedy pomÄrnÄ jednoduchÃ½ pÅesenter a jedna strÃ¡nka na kterÃ© je formulÃ¡Å, kterÃ½ zvlÃ¡dne jak editaci, tak vytvÃ¡ÅenÃ­ novÃ©ho zÃ¡znamu v databÃ¡zi.\n\nPouÅ¾Ã­vÃ¡te nÄjakÃ© lepÅ¡Ã­ (jinÃ©) ÅeÅ¡enÃ­? PodÄlte se o nÄj... :-)","frontmatter":"id: 34ecd347-57b2-4e4f-9a99-b77edbec7df1\ntimestamp: 1399974862000\ntitle: ZnovupouÅ¾itelnÃ½ formulÃ¡Å\nslug: znovupouzitelny-formular"},{"attributes":{"id":"b4aa1f09-6047-4f30-a609-5ffbf61fc6c0","timestamp":1397388682000,"title":"PlzeÅskÃ½ Barcamp - lÃ¡ska na prvnÃ­ pohled","slug":"plzensky-barcamp-laska-na-prvni-pohled"},"body":"AÄkoliv jsem z dÅÃ­vÄjÅ¡Ã­ch barcampÅ¯ sledoval zÃ¡znamy, tak jsem byl fakticky na barcampu ÃºplnÄ poprvÃ© a rovnou jsem mÄl tu Äest pÅednÃ¡Å¡et. NeÅ¾ se vÅ¡ak dostanu k samotnÃ© pÅednÃ¡Å¡ce, rÃ¡d bych zde napsal nÄjakÃ½ feedback. CelkovÄ jsem z PlzeÅskÃ©ho Barcampu skuteÄnÄ nadÅ¡en. SkvÄlÃ¡ atmosfÃ©ra, fajn lidi, spoustu jÃ­dla, alkoholu moÅ¾nÃ¡ aÅ¾ moc... :-))\n\nNa druhou stranu doÅ¡lo i k pÃ¡r pÅeÅ¡lapÅ¯m. NÄkterÃ© mÄ mrzÃ­ vÃ­ce, jinÃ© ani tak ne, kaÅ¾dopÃ¡dnÄ... SkuteÄnÄ mÄ mrzÃ­ to, Å¾e nebyla nahrÃ¡vÃ¡na na video kaÅ¾dÃ¡ pÅednÃ¡Å¡ka.\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/eshopkonzultant\">@eshopkonzultant</a> Honzo, mÃ¡me to v plÃ¡nu. Pokud nÃ¡m ho nic nenaruÅ¡Ã­, chtÄli bychom urÄitÄ zÃ¡znamy dodat nejdÃ©le do mÄsÃ­ce po skonÄenÃ­ akce.</p>&mdash; PlzeÅskÃ½ Barcamp (@PlzenskyBarcamp) <a href=\"https://twitter.com/PlzenskyBarcamp/statuses/454275681665687552\">April 10, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nTo se moc nepovedlo. MrzÃ­ mÄ to ze dvou dÅ¯vodÅ¯. Jednak jsem tak nÄjak slÃ­bil, Å¾e mÃ¡ pÅednÃ¡Å¡ka bude potom na netu, to vÅ¡ak nenÃ­ ten zÃ¡vaÅ¾nÄjÅ¡Ã­ problÃ©m. Daleko vÃ­ce mÄ mrzÃ­ fakt, Å¾e se teÄ nemohu podÃ­vat na pÅednÃ¡Å¡ky ostatnÃ­ch protoÅ¾e jsem byl jinde. Na barcampu bylo totiÅ¾ spoustu zajÃ­mavÃ½ch tÃ©mat.\n\nDalÅ¡Ã­ uÅ¾ jen krÃ¡tce abych neznÄl moc negativnÄ, protoÅ¾e se mi na barcampu opravdu lÃ­bilo a zase tak moc mÄ tyto vÄci neÅ¡tvou. PÅÃ­stup k netu jen pro pÅednÃ¡Å¡ejÃ­cÃ­. MÄl jsem moÅ¾nost toho vyuÅ¾Ã­t, nevyuÅ¾il jsem, takÅ¾e o nic nejde, jen bych veÅejnou wifi na takovÃ½ch akcÃ­ch Äekal. DalÅ¡Ã­ jsou samolepky se jmÃ©nem pÅi registraci. No jÃ¡ nevÃ­m jak ostatnÃ­m, mÄ prostÄ vÅ¯bec nedrÅ¾ela a neÅ¾ jsem doÅ¡el do prvnÃ­ho patra, tak jsem mÄl na zÃ¡dech jmenovku se jmÃ©nem Martina. BohuÅ¾el bez ÄÃ­sla. ZdravÃ­m Martinu! :-) PoslednÃ­ vÄc, kterÃ¡ mÄ mohla dost uzemnit byla ztracenÃ¡ prezentace. SvojÃ­ prezentaci jsem na barcamp odeslal pÅedem jak stÃ¡lo v emailu, ale kdyÅ¾ jsem se po nÃ­ ptal, tak nebyla k nalezenÃ­. NaÅ¡tÄstÃ­ jsem mÄl plÃ¡n B. Uff...\n\n# PÅednÃ¡Å¡ky\n\nPostupnÄ jsem se snaÅ¾il projÃ­t ty nejzajÃ­mavÄjÅ¡Ã­ pÅednÃ¡Å¡ky. Zde je jejich pÅehled:\n\n*Machine learning, aneb od naÅ¡eptÃ¡vaÄe k porozumÄnÃ­ ÅeÄi ([Jan Å vec .{target:_blank}](https://twitter.com/honza_svec)*) - pÅednÃ¡Å¡ka o strojovÃ©m uÄenÃ­, porozumÄnÃ­ ÅeÄi a chÃ¡pÃ¡nÃ­ vÃ½znamu psanÃ©ho i mluvenÃ©ho textu. NÄkterÃ½m lidem tato pÅednÃ¡Å¡ka pÅiÅ¡la obsahovÄ zajÃ­mavÃ¡ a skuteÄnÄ byla, kaÅ¾dopÃ¡dnÄ tyto informace jsem z velkÃ© vÄtÅ¡iny jiÅ¾ znal, protoÅ¾e jsem je slyÅ¡el jiÅ¾ dÅÃ­ve a zase tolik se toho v tomto oboru nemÄnÃ­.\n\n*Procesory letajici, tikajici, hrajici a komunikujici ([Radek Voltr .{target:_blank}](https://twitter.com/crawlerdev)*) - to je zase opak toho prvnÃ­ho. NÄkterÃ½m lidem to nepÅiÅ¡lo moc zajÃ­mavÃ©, protoÅ¾e tyto vÄci znajÃ­. JÃ¡ je tolik neznÃ¡m a i z dÅ¯vodu svÃ½ch budoucÃ­ch pracÃ­ do Å¡koly pro mÄ byla tato pÅednÃ¡Å¡ka pÅÃ­nosnÃ½m pÅehledem toho jak lze nacpat sluÅ¡nÃ½ vÃ½poÄetnÃ­ vÃ½kon na malou mrÅ¡ku.\n\n*Virtualizace a cloudy v dneÅ¡nÃ­m IT ([Milan Brych .{target:_blank}](http://www.orgis.cz/cs/)*) - nejvÃ­ce debatovanÃ© a kontroverznÃ­ tÃ©ma. KaÅ¾dopÃ¡dnÄ Milan se toho ujal dobÅe a aÄkoliv tam bylo spoustu lidÃ­ z oboru, tak i v publiku doÅ¡lo k debatÃ¡m lidÃ­ s naprosto odliÅ¡nÃ½m nÃ¡zorem. A zpÄtnÄ musÃ­m dodat, Å¾e jednoznaÄnÄ souhlasÃ­m s tÃ­m, Å¾e cloud jako takovÃ½ je cloudem teprve tehdy, pokud je geograficky rozloÅ¾en a mÃ¡ dostateÄnou redundanci strojÅ¯. NÄkdo na pÅednÃ¡Å¡ce zmiÅoval cloud funkci u NAS serverÅ¯. V tu chvÃ­li jsem se musel pousmÃ¡t...\n\n*VÄrnostnÃ­ program a jeho odvrÃ¡cenÃ¡ tvÃ¡Å ([Marek Mencl .{target:_blank}](https://twitter.com/mmencl)*) - asi nejlepÅ¡Ã­ pÅenÃ¡Å¡ka. ZpÄtnÃ½ pohled za projektem, kterÃ½ sice nÄjak dopadl, ale jeho prÅ¯bÄh nebyl ÃºplnÄ hladkÃ½. PÅednÃ¡Å¡ka byla plnÃ¡ reÃ¡lnÃ½ch problÃ©mÅ¯ z praxe. Super. ProstÄ super. Jestli bude zÃ¡znam, tak doporuÄuji!\n\n*Pracujte v trenÃ½rkÃ¡ch z kavÃ¡rny. Nebo ne? ([David Å mehlÃ­k .{target:_blank}](https://twitter.com/davidsmehlik)*) - abych byl upÅÃ­mnÃ½, tak na tuto pÅednÃ¡Å¡ku jsem Å¡el jen proto, Å¾e jsem nemÄl kam jinam a vybral jsem tak nejmenÅ¡Ã­ zlo. KaÅ¾dopÃ¡dnÄ rychle jsem zjistil, Å¾e jsem udÄlal dobÅe, protoÅ¾e celÃ© povÃ­dÃ¡nÃ­ bylo velmi zajÃ­mavÃ© a motivujÃ­cÃ­. I pÅes pÅ¯vodnÃ­ nedÅ¯vÄru povaÅ¾uji tuto pÅednÃ¡Å¡ku za druhou nejlepÅ¡Ã­. Sorry, Marek byl lepÅ¡Ã­... :-))\n\n*O e-shopech, o automatickÃ©m vÃ½poÄtu nabÃ­dek za prokliky na Heurece a o tom, kde je problÃ©m doopravdy ([Michal JanÃ­k .{target:_blank}](https://twitter.com/michaljanik)*) - zde to bylo celkem jednoduchÃ©. JÃ­t na populÃ¡rnÃ­ blbost (dle zpÄtnÃ½ch nÃ¡zorÅ¯ ostatnÃ­ch), nebo na SEO (jak slyÅ¡Ã­m SEO, tak utÃ­kÃ¡m), nebo na prezentaci neÃºspÄÅ¡nÃ©ho portÃ¡lu? Vybral jsem si tedy pÅednÃ¡Å¡ku o e-shopech. Nejsem eshopista, takÅ¾e to pro mÄ nemÄlo takovou pÅidanou hodnotu a myslÃ­m si, Å¾e kdokoliv nad problÃ©my obchodu pÅemÃ½Å¡lÃ­, tak dokonverguje ke stejnÃ½m zÃ¡vÄrÅ¯m jako jsou v prezentaci. KaÅ¾dopÃ¡dnÄ ÅÃ­ct, Å¾e to bylo nezajÃ­mavÃ© by bylo nejen nefÃ©r, ale ani by to nebyla pravda.\n\nOpÄt musÃ­m zopakovat, Å¾e mÄ mrzÃ­ absence kamer u ostatnÃ­ch pÅednÃ¡Å¡ek.\n\n# Od Caesara ke QR kÃ³dÅ¯m\n\nA koneÄnÄ k mÃ© pÅednÃ¡Å¡ce. :-))\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>PÅednÃ¡Å¡ka o kÃ³dovÃ¡nÃ­ a Thomasu Youngovi na <a href=\"https://twitter.com/search?q=%23barcampcz&amp;src=hash\">#barcampcz</a> je kulervoucÃ­.</p>&mdash; Pavel Pajkrt (@PavelAbbePajkrt) <a href=\"https://twitter.com/PavelAbbePajkrt/statuses/455008230444638208\">April 12, 2014</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nA zde je:\n\n<iframe src=\"http://www.slideshare.net/slideshow/embed_code/33460846\" width=\"752\" height=\"460\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;\" allowfullscreen> </iframe>\n\nDÄkuji vÅ¡em posluchaÄÅ¯m. Byl jsem skuteÄnÄ nadÅ¡en, kdyÅ¾ za mnou pak nÄkdo v prÅ¯bÄhu dne pÅiÅ¡el a dÄkoval. To bylo kouzelnÃ©. NesmÃ­rnÄ si toho vÃ¡Å¾Ã­m. KaÅ¾dopÃ¡dnÄ abych se jen nevychvaloval, tak cÃ­tÃ­m urÄitÃ½ dluh vÅ¯Äi posluchaÄÅ¯m, protoÅ¾e aÄkoliv se mi s tÃ­m LuboÅ¡ Majner i Milan Brych snaÅ¾ili pomoct (dÃ­ky!), tak jsem nedokÃ¡zal zÃ¡vÄreÄnou problematiku ÃºplnÄ objasnit. A vzhledem k tomu, Å¾e jsem se pak jeÅ¡tÄ o tÄchto vÄcech nÄkolikrÃ¡t bavil, tak pÅibliÅ¾nÄ tuÅ¡Ã­m v Äem byly problÃ©my.\n\nTak prvnÄ padl dotaz z kterÃ©ho bylo jasnÃ©, Å¾e jsem nÄco Åekl fakt Å¡patnÄ. ProÄ to Å¡ifrovat tak sloÅ¾itÄ? ProÄ neposlat rovnou surovou zprÃ¡vu, kdyÅ¾ to nejde odposlechnout? To je velice jednoduchÃ©. Je sice pravda, Å¾e (alespoÅ v souÄasnÃ© dobÄ) kvantovÃ½ signÃ¡l nelze odposlechnout, nic vÅ¡ak nebrÃ¡nÃ­ EvÄ zastÅelit Boba a zprÃ¡vu si jednoduÅ¡e pÅeÄÃ­st. To se u Å¡ifrovanÃ©ho signÃ¡lu nemÅ¯Å¾e stÃ¡t.\n\nA jak je tedy moÅ¾nÃ© Å¾e ten signÃ¡l nelze odposlechnout? Jde o to, Å¾e pÅenÃ¡Å¡enÃ¡ zprÃ¡va nenÃ­ ve formÄ informace, ale pÅenÃ¡Å¡Ã­ se pomocÃ­ nÄjakÃ©ho fyzikÃ¡lnÃ­ho principu. TakÅ¾e se nelze pÅipojit na optickÃ½ kabel aniÅ¾ by to nebylo zjistitelnÃ©. KaÅ¾dopÃ¡dnÄ jsem rÃ¡d za zÃ¡vÄreÄnou diskusi, jelikoÅ¾ byla velmi pÅÃ­nosnÃ¡ a uvÄdomil jsem si vÄci, kterÃ© jsem pÅedtÃ­m neÅeÅ¡il. NapÅÃ­klad komunikaci po veÅejnÃ©m kanÃ¡lu a ovÄÅenÃ­, Å¾e Alice skuteÄnÄ mluvÃ­ s Bobem a ne s Evou. PÅeÄtÄte si ÄlÃ¡nek tento [http://aldebaran.cz/bulletin/2005_14_kry.php .{target:_blank}](http://aldebaran.cz/bulletin/2005_14_kry.php). KonkrÃ©tnÄ poslednÃ­ ÄÃ¡st o spolehlivosti metody. JiÅ¾ rozumÃ­m padlÃ½m dotazÅ¯m a dÃ¡vÃ¡m posluchaÄÅ¯m za pravdu. Beru to jako pouÄenÃ­ a pÅÃ­Å¡tÃ­ rok uÅ¾ budu tento problÃ©m schopen podat jeÅ¡tÄ lÃ­p. DoufÃ¡m... :-)\n\nJo a pÅiÅ¡el si to poslechnout i David Grudl. Yaaay! :-D","frontmatter":"id: b4aa1f09-6047-4f30-a609-5ffbf61fc6c0\ntimestamp: 1397388682000\ntitle: PlzeÅskÃ½ Barcamp - lÃ¡ska na prvnÃ­ pohled\nslug: plzensky-barcamp-laska-na-prvni-pohled"},{"attributes":{"id":"73daaba4-4b37-440f-b4e7-375de01a03c8","timestamp":1394985629000,"title":"Orion login stojÃ­ za prd","slug":"orion-login-stoji-za-prd"},"body":"KdyÅ¾ jsem dÅÃ­ve pÅipravoval [prezentaci o Nette Frameworku](prednaska-z-nette-na-zcu), hledal jsem nÄjakÃ½ vhodnÃ½ pÅÃ­klad, na kterÃ©m bych demonstroval zranitelnost webovÃ½ch aplikacÃ­. ÃspeÅ¡nÄ jsem vyzkouÅ¡el pÃ¡r eshopÅ¯ a jednu strÃ¡nku, kterÃ¡ slouÅ¾Ã­ ke Å¡kolnÃ­m ÃºÄelÅ¯m, ale nenÃ­ nijak oficiÃ¡lnÄ vedenÃ¡ pod univerzitou. PrÃ¡vÄ zde mÄ napadlo vyzkouÅ¡et takÃ© univerzitnÃ­ systÃ©my. A nestaÄil jsem se divit.\n\n# PozadÃ­ univerzitnÃ­ho pÅihlaÅ¡ovÃ¡nÃ­\n\nVeÅ¡kerÃ© ovÄÅovÃ¡nÃ­ prÃ¡v a identit putuje pÅes WebKDC server. Tento server komunikuje s Kerberosem a dohromady tvoÅÃ­ systÃ©m, kterÃ½ umoÅ¾nÃ­ pÅihlÃ¡Å¡enÃ­ pomocÃ­ univerzitnÃ­ch loginÅ¯. CelkovÄ proti tomuto systÃ©mu nemÃ¡m vÅ¯bec nic. MÃ¡m vÅ¡ak hodnÄ vÃ½hrad k jeho konkrÃ©tnÃ­ implementaci. KonkrÃ©tnÃ­ web servery (tam kde jsou umÃ­stÄny aplikace vyÅ¾adujÃ­cÃ­ pÅihlÃ¡Å¡enÃ­) komunikujÃ­ se vzdÃ¡lenÃ½m WebKDC serverem. Tento server zajistÃ­ korektnÃ­ ovÄÅenÃ­ uÅ¾ivatele (spoluprÃ¡ce s Kerberos) a vrÃ¡ti informaci o ÃºspÄÅ¡nÃ©m ovÄÅenÃ­. ParÃ¡da. VnitÅnÄ velmi sofistikovanÃ½ systÃ©m funguje a umoÅ¾Åuje SSO (Single Sign-On) napÅÃ­Ä celou infrastrukturou. PlatÃ­ to tedy i pro aplikace mimo univerzitnÃ­ domÃ©nu. ZjednoduÅ¡enÄ popsÃ¡no, ale tÃ©matem tohoto ÄlÃ¡nku nenÃ­ ta ÄÃ¡st, kterÃ¡ [spolehlivÄ funguje](http://webauth.stanford.edu/), ale ta ÄÃ¡st, kterÃ¡ nefunguje.\n\n```\n WEBKDC <----------> KERBEROS\n   |||\n   |||\n WEBAUTH (server s aplikacÃ­ vyÅ¾adujÃ­cÃ­ pÅihlÃ¡Å¡enÃ­)\n    |\n    |\n STUDENT\n```\n\nJako pomÄrnÄ zÃ¡sadnÃ­ fakt vidÃ­m to, Å¾e dokud student neklikne na \"LOGIN\", tak ho tento systÃ©m nepÅihlÃ¡sÃ­ (vÄtÅ¡inou). NachÃ¡zÃ­ se tedy na Ãºrovni \"WEBAUTH\", ale vidÃ­ jen omezenou strÃ¡nku. Jakmile se chce pÅihlÃ¡sit, aplikace jej pÅesmÄruje na WebKDC login-server, kde mÅ¯Å¾e vyplnit svÃ© pÅihlaÅ¡ovacÃ­ informace, nebo je jiÅ¾ pÅihlÃ¡Å¡en nÄkdy z dÅÃ­vÄjÅ¡Ã­ doby a v obou pÅÃ­padech je pÅesmÄrovÃ¡n zpÄt na server s webovou aplikacÃ­. UÅ¾ vidÃ­te ten problÃ©m? :-)\n\n# XSS\" onclick=\"alert(document.cookie); //:-)\n\nPrÃ¡vÄ komunikace mezi WEBAUTH a WEBKDC je pro ovÄÅenÃ­ naprosto zÃ¡sadnÃ­, ale dÃ­ky tomu, Å¾e zÅejmÄ nenÃ­ nastavena Å¾Ã¡dnÃ¡ implementaÄnÃ­ laÅ¥ka, tzn. Å¾e kdokoliv chce pÅihlaÅ¡ovat pomocÃ­ tohoto systÃ©mu tak si to prostÄ nÄjak naprogramuje, vznikajÃ­ bezpeÄnostnÃ­ bublinky. PravdÄpodobnÄ neexistuje Å¾Ã¡dnÃ¡ konvence jak tento systÃ©m implementovat, takÅ¾e neexistujÃ­ ani takovÃ© funkce, jako je tÅeba ovÄÅovÃ¡nÃ­ jiÅ¾ aktivnÃ­ho pÅihlÃ¡Å¡enÃ­ atd. MÅ¯Å¾e se tedy stÃ¡t, Å¾e budu pÅihlÃ¡Å¡en (ovÄÅen) ve webovÃ© aplikaci, ale na WEBKDC jsem odhlÃ¡Å¡en, protoÅ¾e WEBAUTH uÅ¾ se o to v tuto chvÃ­li nestarÃ¡ (ten je pÅihlÃ¡Å¡en).\n\nDÃ­ky tomuto poznatku mohu velmi jednoduÅ¡e vÅ¡e co jsem teÄ napsal zapomenout, protoÅ¾e se dÃ¡ celÃ© sloÅ¾itÃ© schÃ©ma zjednoduÅ¡it na toto:\n\n```\n WEBAUTH                   WEB-APP\n    |          resp.          |\n    |                         |\n STUDENT                   STUDENT\n```\n\nTak moment. NenÃ­ to ÃºplnÄ normÃ¡lnÃ­ pÅihlÃ¡Å¡enÃ­ tak jako je na jakÃ©koliv jinÃ© ÃºplnÄ obyÄejnÃ© strÃ¡nce? UÅ¾ivatel (student, profesor, administrÃ¡tor) je pÅihlÃ¡Å¡en a teÄ uÅ¾ je to pouze nudnÃ¡ otrockÃ¡ prÃ¡ce. MyslÃ­m, Å¾e mohu prozradit, Å¾e je strÃ¡nka (Äti univerzitnÃ­ projekty) nÃ¡chylnÃ¡ na session hijacking, na to pÅijde kaÅ¾dÃ½ blbec, kterÃ½ o tom Äetl na wiki. A asi nemÃ¡ smysl tajit, Å¾e XSS je naprosto reÃ¡lnÃ¡ (a vyzkouÅ¡enÃ¡) hrozba. Nebudu vÅ¡ak ÅÃ­kat kde. A vzhledem k tomu, Å¾e tento systÃ©m webovÃ½ch portÃ¡lÅ¯ (IBM Web-Sphere Portal) nenÃ­ Å¾Ã¡dnÃ¡ domÃ¡cÃ­ vÃ½roba, tak pÅedpoklÃ¡dÃ¡m, Å¾e stejnÃ½ problÃ©m budou mÃ­t i dalÅ¡Ã­ univerzity.\n\n```\n WEB-APP1     WEB-APP2\n    |            |\n    |----------EVA\n STUDENT\n```\n\nOd prvnÃ­ chvÃ­le, kdy jsem na tento problÃ©m upozorÅoval poprvÃ© jsou nÄkterÃ© vÄci v souÄasnÃ© dobÄ na serverech pozmÄnÄny, ale to zÃ¡sadnÃ­ zÅ¯stÃ¡vÃ¡ poÅÃ¡d stejnÃ©. NezÃ¡leÅ¾Ã­ na tom co je v pozadÃ­, kdyÅ¾ je ÅetÄz tak silnÃ½, jak je silnÃ½ jeho nejslabÅ¡Ã­ ÄlÃ¡nek a zvlÃ¡Å¡Å¥, kdyÅ¾ ten silnÃ½ zbytek ÅetÄzu skoro ani nenÃ­ potÅeba...","frontmatter":"id: 73daaba4-4b37-440f-b4e7-375de01a03c8\ntimestamp: 1394985629000\ntitle: Orion login stojÃ­ za prd\nslug: orion-login-stoji-za-prd"},{"attributes":{"id":"6f2ba373-daf2-4569-bbd7-09e437f18975","timestamp":1394562840000,"title":"Sbohem NDBT, vÃ­tej Doctrine","slug":"sbohem-ndbt-vitej-doctrine"},"body":"Byl jsem poÅ¾Ã¡dÃ¡n, abych napsal nejenom dÅ¯vod pÅechodu z Nette Database na Doctrine, ale obecnÄ co mÄ k tomu vedlo a jak takovÃ½ pÅechod vlastnÄ uÄinit. Na Ãºvod bych vÅ¡ak chtÄl zdÅ¯raznit, Å¾e nejsem Å¾Ã¡dnÃ½ extra programÃ¡tor, vlastnÄ to ani nestuduji, takÅ¾e vÅ¡e co budu ukazovat a vysvÄtlovat je tedy z mÃ©ho pohledu a lecjakÃ©ho OOP znalce by tento text mohl pobouÅit... (-:\n\nNÃ¡sledujÃ­cÃ­ text pouÅ¾Ã­vÃ¡ [Kdyby\\Doctrine](https://github.com/Kdyby/Doctrine), nevidÃ­m dÅ¯vod proÄ ve spojenÃ­ s Nette pouÅ¾Ã­vat nÄco jinÃ©ho. Je to dobrÃ¡ knihovna.\n\n# Sbohem NDBT\n\nNette Database Table a obecnÄ celÃ© Nette Database je ÃºÅ¾asnÃ¡ ÄÃ¡st frameworku a spokojenÄ jsem ji pouÅ¾Ã­val po velmi dlouhou dobu. Nikdy jsem neholdoval pokÅikÅ¯m, Å¾e je NDBT zabugovanÃ© (jako nÄkteÅÃ­) a i kdyÅ¾ jsem vyzkouÅ¡el i jinÃ© alternativy, vÅ¾dy jsem se spokojenÄ vracel prÃ¡vÄ k NDBT. PouÅ¾itÃ­ je velice intuitivnÃ­ a dobÅe se s tÃ­m zachÃ¡zÃ­:\n\nModel:\n```php\nclass Posts extends Nette\\Object {\n\n\t/** @var \\Nette\\Database\\Context */\n\tprivate $database;\n\n\tpublic function __construct(Nette\\Database\\Context $context) {\n\t\t$this->database = $context;\n\t}\n\n\tpublic function getAllPosts() {\n\t\treturn $this->database->table('posts')->where('release_date < NOW()');\n\t}\n\n}\n```\n\nPresenter:\n```php\nclass HomepagePresenter extends BasePresenter {\n\n\t/** @var \\Posts @inject */\n\tpublic $posts;\n\n\tpublic function renderDefault() {\n\t\t$this->template->posts = $this->posts->getAllPosts();\n\t}\n\n}\n```\n\nJe to jednoduchÃ© a jasnÃ©. TakovÃ© vÄci mÃ¡m prostÄ rÃ¡d. V modelovÃ© tÅÃ­dÄ mÃ¡m jak select metody, tak insert metody, takÅ¾e bych tomu sprÃ¡vnÄ nemÄl ÅÃ­kat repository, ale abych byl upÅÃ­mnÃ½, tak je mi toto nÃ¡zvoslovÃ­ celkem volnÃ©. Do takovÃ© objektu si prostÄ dÃ¡m to co chci (tak jak mi to dÃ¡vÃ¡ smysl). NepÅijde mi to vÅ¯bec podstatnÃ©. TahÃ¡nÃ­ dat z databÃ¡ze mÃ¡ vÅ¡ak jeÅ¡tÄ jednu vrstvu a tou je vykreslovÃ¡nÃ­.\n\n```html\n{foreach $posts as $post}\n\t<h3><a n:href=\":Single:article $post->slug\">{$post->title|vlna}</a></h3>\n\t<p>\n\t\t{foreach $post->related('posts_tags')->order('tag_id ASC') as $post_tag}\n\t\t\t<a n:href=\"Tag:default, $post_tag->tag->name\">\n\t\t\t\t<span style=\"background: #{$post_tag->tag->color}\">{$post_tag->tag->name}</span>\n\t\t\t</a>\n\t\t{/foreach}\n\t\t{$post->body|truncate:450}\n\t</p>\n{/foreach}\n```\n\nA to je vÄc, kterÃ¡ mÄ dlouhou dobu trÃ¡pila. DÃ¡ se Äekat, Å¾e kdyÅ¾ v databÃ¡zi existuje jakÃ¡si vazba mezi pÅÃ­spÄvkem a tagem, tak Å¾e tuto vazbu budu chtÃ­t nÄjak vyuÅ¾Ã­t. A to pokud moÅ¾no co nejvÃ­ce pohodlnÄ. A co nejvÃ­ce pohodlnÄ znamenÃ¡, Å¾e v okamÅ¾ik, kdy budu pracovat s pÅÃ­spÄvkem a vzpomenu si, Å¾e potÅebuji takÃ© tagy, tak tyto tagy takÃ© dostanu. BohuÅ¾el musÃ­m znÃ¡t takÃ© spojovacÃ­ tabulku, kterÃ¡ nemÃ¡ (minimÃ¡lnÄ v tomto pÅÃ­padÄ) Å¾Ã¡dnÃ½ faktickÃ½ smysl a celkovÄ prÃ¡ce s takto \"dopÅivÃ¡zanou\" tabulkou nenÃ­ vÅ¯bec pohodlnÃ¡ a uÅ¾ vÅ¯bec ne intuitivnÃ­. DÃ¡vÃ¡ to smysl a asi to tak bÃ½t musÃ­, takÅ¾e proti NDBT Å¾Ã¡dnÃ¡, ale tak nÄjak vnitÅnÄ jsem hledal nÄco lepÅ¡Ã­ho (Äti vÃ­ce vyhovujÃ­cÃ­ho mÃ½m poÅ¾adavkÅ¯m).\n\n# VÃ­tej Doctrine\n\nSchvÃ¡lnÄ se snaÅ¾Ã­m vÅ¡e popisovat podle mÃ½ch myÅ¡lenkovÃ½ch pochodÅ¯, proto i nadÃ¡le budu ÅeÅ¡it ÃºplnÄ ten samÃ½ problÃ©m, jen s pouÅ¾itÃ­m Doctrine. Nutno jeÅ¡tÄ dodat, Å¾e Doctrine rozhodnÄ nebyla jasnÃ¡ volba. OpÄt mi dlouho trvalo, neÅ¾ jsem obecnÄ ORM pÅiÅ¡el na chuÅ¥. JeÅ¡tÄ pÅed Doctrine jsem nÄjakou dobu experimentoval s [Lean Mapperem](http://www.leanmapper.com/) od VojtÄcha Kohouta (Tharos). Malou nevÃ½hodou je, Å¾e tÃ©mÄÅ veÅ¡kerÃ¡ dokumentace je v brutÃ¡lnÄ dlouhÃ©m vlÃ¡knu na Nette fÃ³ru, kterÃ© mÃ¡ v tuto chvÃ­li **1023 pÅÃ­spÄvkÅ¯**, takÅ¾e je to obÄas dÅina, ale myslÃ­m si, Å¾e je to skuteÄnÄ povedenÃ¡ knihovna. VojtÄch Kohout mÃ¡ skuteÄnÄ dobrÃ© myÅ¡lenky. NicmÃ©nÄ jsem prostÄ chtÄl pÅijÃ­t Doctrine na chuÅ¥, takÅ¾e jsem i Lean Mapper opustil. ObÄas dÄlÃ¡m radikÃ¡lnÃ­ zmÄny, pokud by vÅ¡ak nÄkdo vyloÅ¾enÄ potÅeboval dÅ¯vod k tomu zaÄÃ­t s Doctrine (alespoÅ doÄasnÄ), pak tedy jeden mohu nabÃ­dnout. A bude velmi krÃ¡tkÃ½. VidÃ­te nÄkdy jako poÅ¾adavek na zamÄstnance znalost Lean Mapperu, nebo ActiveRow? Pokud ne, tak zaÄnÄte s tÃ­m co se tam ukazuje Äasto. Doctrine.\n\nAle zpÄt k tÃ©matu. PojÄme si ukÃ¡zat modelovou ÄÃ¡st podle mÄ:\n```php\nclass Posts extends Nette\\Object {\n\n\t/** @var \\Kdyby\\Doctrine\\EntityDao */\n\tprivate $dao;\n\n\tpublic function __construct(Kdyby\\Doctrine\\EntityDao $dao) {\n\t\t$this->dao = $dao;\n\t}\n\n\tpublic function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null) {\n\t\treturn $this->dao->findBy($criteria, $orderBy, $limit, $offset);\n\t}\n\n}\n```\n\nVelmi podobnÃ© jako u pÅedchozÃ­ho modelu. Asi by Å¡lo si napsat nÄjakou `__call` metodu, protoÅ¾e se dost Äasto volÃ¡ to co uÅ¾ je v DAO objektu (viz nÃ­Å¾e), ale kdo si to jak poslepuje, tak to bude mÃ­t... A co prezentaÄnÃ­ vrstva?\n```php\nclass HomepagePresenter extends BasePresenter {\n\n\t/** @var \\Posts @inject */\n\tpublic $posts;\n\n\tpublic function renderDefault() {\n\t\t$posts = $this->posts->findBy(array());\n\t}\n\n}\n```\n\nTo je takÃ© dost podobnÃ©. Pole kritÃ©riÃ­ potom slouÅ¾Ã­ k dodateÄnÃ©mu filtrovÃ¡nÃ­ ve tvaru napÅ. `['id' => 21]`, tedy pÅedÃ¡vÃ¡ se to, co se mÃ¡ pouÅ¾Ã­t i v SQL WHERE klauzuli. Tento zÃ¡pis je mi pomÄrnÄ blÃ­zkÃ½, protoÅ¾e jsem ho pouÅ¾Ã­val pÅi komunikaci s jednÃ­m SOAP serverem. Ok, co na to Å¡ablona?\n\n```html\n{foreach $posts as $post}\n\t<h3><a n:href=\":Single:article $post->slug\">{$post->title|vlna}</a></h3>\n\t<p>\n\t\t{foreach $post->tags as $tag}\n\t\t\t<a n:href=\"Search:default, $tag->name\">\n\t\t\t\t<span style=\"background: #{$tag->color}\">{$tag->name}</span>\n\t\t\t</a>\n\t\t{/foreach}\n\t\t{$post->body|truncate:450}\n\t</p>\n{/foreach}\n```\n\nTak to je podle mÄ ÃºplnÄ super vÃ½sledek. MaximÃ¡lnÄ intuitivnÃ­ a nic vÃ­c splÅuje to mÃ¡ oÄekÃ¡vÃ¡nÃ­. Je vÅ¡ak asi zÅejmÃ©, Å¾e jsem ÃºplnÄ vypustil jakoukoliv informaci o spojovacÃ­ tabulce. A takÃ© jsem jeÅ¡tÄ neÅekl, co je to `EntityDao`, se kterÃ½m se pracuje v modelu. VlastnÄ je to ÃºplnÄ jednoduchÃ©. V konfiguraÄnÃ­m souboru definuji, Å¾e chci pracovat s jakÃ½msi DAO objektem, tedy objektem, kterÃ½ oproti repository umoÅ¾Åuje data nejen ÄÃ­st, ale takÃ© uklÃ¡dat (opÄt pouze OOP slovÃ­ÄkaÅenÃ­).\n\n```neon\nservices:\n\t- App\\Pictures(@doctrine.dao(Entity\\Picture))\n\t- App\\Posts(@doctrine.dao(Entity\\Post))\n\t- App\\Tags(@doctrine.dao(Entity\\Tag))\n\t- App\\Users(@doctrine.dao(Entity\\User))\n```\n\nFajn, teÄ mÃ¡m tedy v kaÅ¾dÃ© modelovÃ© tÅÃ­dÄ DAO objekt. Ten obsahuje nÄkolik metod, kterÃ© vÃ½raznÄ usnadÅujÃ­ prÃ¡ci s Doctrine ([source](https://github.com/Kdyby/Doctrine/blob/master/src/Kdyby/Doctrine/EntityDao.php)). Do tohoto objektu pÅedÃ¡vÃ¡m jakousi entitu. To je objekt, kterÃ½ reprezentuje strukturu databÃ¡zovÃ© tabulky. To moÅ¾nÃ¡ nenÃ­ napsÃ¡no ÃºplnÄ Å¡Å¥astnÄ, ale prakticky to tak skuteÄnÄ vÄtÅ¡inou je. TakovÃ¡ entita mÅ¯Å¾e vypadat napÅÃ­klad takto:\n\n```php\nnamespace Entity;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"posts\")\n */\nclass Post extends Doctrine\\Entities\\BaseEntity {\n\n\t/**\n\t * @ORM\\ManyToMany(targetEntity=\"Tag\", inversedBy=\"posts\", cascade={\"persist\"})\n\t * @ORM\\JoinTable(name=\"posts_tags\")\n\t * @ORM\\OrderBy({\"name\" = \"ASC\"})\n\t */\n\tprotected $tags;\n\n\t/**\n\t * @ORM\\Id\n\t * @ORM\\Column(type=\"integer\")\n\t * @ORM\\GeneratedValue\n\t */\n\tprotected $id;\n\n\t/** @ORM\\Column(type=\"text\") */\n\tprotected $title;\n\n\t/** @ORM\\Column(type=\"text\") */\n\tprotected $slug;\n\n\t/** @ORM\\Column(type=\"text\") */\n\tprotected $body;\n\n\t/** @ORM\\Column(type=\"datetime\") */\n\tprotected $date;\n\n}\n```\n\nZde je prÃ¡vÄ dÅ¯leÅ¾itÃ© to, Å¾e rovnou ukazuji, kde je entita reprezentujÃ­cÃ­ tagy (kterÃ¡ vypadÃ¡ podobnÄ jako tato), jak se k nÃ­ dostanu a dokonce jak se mÃ¡ Åadit. Tedy vÅ¡echny tyto informace jsem ze Å¡ablony odstranil. Pro mÄ je to tedy ÃºÅ¾asnÃ½ pokrok, protoÅ¾e jsem dosÃ¡hl toho co jsem chtÄl. Aby se mi s databÃ¡zÃ­ pracovalo dobÅe.\n\n# No dobÅe, ale...\n\nA teÄ je prÃ¡vÄ Äas na nÄkterÃ© dotazy, kterÃ© vznikly pÅi pÅÃ­pravÄ tohoto ÄlÃ¡nku. Tak napÅÃ­klad co kdyÅ¾ chceÅ¡ poloÅ¾it vlastnÃ­ dotaz, v Nette Database je to pÅeci snadnÃ©. V Doctrine [takÃ©](https://bitbucket.org/mrtnzlml/www.zeminem.cz/src/05dc03f0781fac574de26e128b6509d870b7b789/app/model/Posts.php?at=master&fileviewer=file-view-default#Posts.php-128). V tom by ORM nemÄlo nijak zÃ¡sadnÄ brÃ¡nit...\n\nDalÅ¡Ã­ vÄc je, Å¾e v presenteru stÃ¡le zÅ¯stÃ¡vÃ¡ jistÃ¡ zÃ¡vislost na struktuÅe tabulek. KonkrÃ©tnÄ opÄt mluvÃ­m o poli kritÃ©riÃ­. Jak se ÃºplnÄ zbavit tÃ©to zÃ¡vislosti a mÃ­t pokud moÅ¾no vÅ¡e tak, aby kdyÅ¾ zmÄnÃ­m strukturu, tak to zmÄnÃ­m jen nÄkde a ne vÅ¡ude? K tomu se dajÃ­ pouÅ¾Ã­t tÅeba query objekty, kterÃ© v sobÄ drÅ¾Ã­ podobu potÅebnÃ©ho SQL dotazu, takÅ¾e mÃ­sto toho, abych stÃ¡le Å¥ukal ten samÃ½ dotaz, jen jinde, tak jej schovÃ¡m do tÅÃ­dy a prÃ¡vÄ tu pak pouÅ¾Ã­vÃ¡m. BudoucÃ­ zmÄna se pak pravdÄpodobnÄ bude tÃ½kat prÃ¡vÄ pouze toho objektu a pÅÃ­padnÄ entit. Ono toto asi nejde ÃºplnÄ odstÃ­nit (nebo spÃ­Å¡ nevÃ­m jak), protoÅ¾e vÅ¾dy je potÅeba data i nahrÃ¡vat a tedy stanovit urÄitou hranici mezi tÃ­m co je zÃ¡vislÃ© na databÃ¡zi a co uÅ¾ nenÃ­. NicmÃ©nÄ uvÃ¡Å¾Ã­m-li, Å¾e budu mÄnit strukturu tabulky tÅeba kvÅ¯li tomu, Å¾e chci pÅidat novÃ¡ data, stejnÄ budu do kÃ³du muset jÃ­t a nÄkde ty data vzÃ­t a nÄkam je dÃ¡t. Proto je toto moÅ¾nÃ¡ ÃºplnÄ zbyteÄnÃ© ÅeÅ¡it, protoÅ¾e tato zÃ¡vislost nikdy nepÅ¯jde ÃºplnÄ odstranit.\n\nDalÅ¡Ã­ vÄc je troÅ¡ku zÃ¡ludnÃ¡. TÃ½kÃ¡ se tÅÃ­d pro vazebnÃ­ tabulky. Pokud tedy uklÃ¡dÃ¡m M:N vazbu jako v pÅedchozÃ­m textu, tÃ­m myslÃ­m, Å¾e mi jde pouze o to, Å¾e chci uloÅ¾it do tÃ©to tabulky cizÃ­ klÃ­Äe, tak se o nic nemusÃ­m starat a staÄÃ­ mi pouze onen dokumentaÄnÃ­ komentÃ¡Å v entitÄ `Post` nad promÄnnou `protected $tags`, kde je definovÃ¡no vÅ¡e potÅebnÃ©. ProblÃ©movÃ© je, kdyÅ¾ chci uloÅ¾it data i do vazebnÃ­ tabulky. Zde bych rÃ¡d citoval jeden pÅÃ­spÄvek ze StackOverflow, protoÅ¾e si myslÃ­m, Å¾e tam je vÅ¡e ÅeÄeno naprosto pÅesnÄ.\n\n> A Many-To-Many association with additional values is not a Many-To-Many, but is indeed a new entity, since it now has an identifier (the two relations to the connected entities) and values.\n\nA pÅesnÄ takto je s tÃ­m tedy potÅeba zachÃ¡zet. UÅ¾ se nebavÃ­me o vazebnÃ­ tabulce. UÅ¾ se bavÃ­me o normÃ¡lnÃ­ tabulce, kterÃ¡ vyÅ¾aduje svoji entitu a pouze obsahuje dva cizÃ­ klÃ­Äe mÃ­sto bÄÅ¾nÃ©ho jednoho.\n\nDoufÃ¡m, Å¾e se mi v tomto ÄlÃ¡nku svojÃ­ dÃ©lkou limitnÄ blÃ­Å¾Ã­cÃ­ se k nekoneÄnu podaÅilo zodpovÄdÄt vÅ¡echny dotazy a objasnit vÅ¡echny pochybnosti. Pokud ne, mÅ¯Å¾ete se na celou problematiku podÃ­vat pod drobnohledem jeÅ¡tÄ [zde](https://bitbucket.org/mrtnzlml/zlml.cz/src/05dc03f0781fac574de26e128b6509d870b7b789/app/model/?at=master). MÃ¡te na celou problematiku jinÃ½ nÃ¡zor, nebo to jak to dÄlÃ¡m jÃ¡ je kompletnÄ Å¡patnÄ? Sem s tÃ­m... (-:","frontmatter":"id: 6f2ba373-daf2-4569-bbd7-09e437f18975\ntimestamp: 1394562840000\ntitle: Sbohem NDBT, vÃ­tej Doctrine\nslug: sbohem-ndbt-vitej-doctrine"},{"attributes":{"id":"372c259c-4339-437d-b5e5-af02fe0d9dae","timestamp":1393877713000,"title":"AJAX upload souborÅ¯ v Nette pomocÃ­ Fine Uploaderu","slug":"ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2"},"body":"[DÅÃ­ve](ajax-upload-souboru-v-nette-pomoci-fine-uploaderu) jsem psal o tom, jak pouÅ¾Ã­t Fine Uploader jakoÅ¾to nÃ¡stroj pro AJAXovÃ© nahrÃ¡vÃ¡nÃ­ souborÅ¯ na server. PÅ¯vodnÃ­ ÄlÃ¡nek vÅ¡ak platÃ­ pouze pro verzi `3.*`, kterÃ¡ je dnes jiÅ¾ zastaralÃ¡. PojÄme si dnes ukÃ¡zat v podstatÄ to samÃ©, ale pro novÄjÅ¡Ã­ verzi `4.3+`, kterÃ¡ se v uÄitÃ½ch smÄrech pomÄrnÄ zÃ¡sadnÄ liÅ¡Ã­ od svÃ©ho pÅedchÅ¯dce. TentokrÃ¡t se to vÅ¡ak pokusÃ­m vyÅeÅ¡it co nejjednoduÅ¡eji.\n\nZaÄÃ¡tek je vlastnÄ ÃºplnÄ stejnÃ½. MusÃ­me nalinkovat javascriptovÃ© soubory:\n\n```html\n<!-- jQuery -->\n<script src=\"{$basePath}/js/jquery.fineuploader-4.3.1.min.js\"></script>\n<script src=\"{$basePath}/js/nette.ajax.js\"></script>\n<script src=\"{$basePath}/js/main.js\"></script>\n```\n\nPouÅ¾itÃ­ je ÃºplnÄ jednoduchÃ©, ve zjednoduÅ¡enÃ© formÄ:\n\n```html\n<div id=\"image-uploader\"></div>\n```\n\nSnaÅ¾Ã­m se ukÃ¡zat opravdu jen kritickÃ© minimum, protoÅ¾e ty zÃ¡kladnÃ­ vÄci jsou stejnÃ©, pÅÃ­padnÄ dohledatelnÃ© v dokumentaci, takÅ¾e se dajÃ­ oba dva nÃ¡vody z velkÃ© ÄÃ¡sti doplnit. Minule jsem vÅ¡ak zatÃ¡hl do ukÃ¡zek i pomÄrnÄ hodnÄ balastu, takÅ¾e ten u starÃ© verze nechÃ¡m, ale bude nÃ¡sledovat opravdu jen to nejnutnÄjÅ¡Ã­.\n\nStejnÄ tedy jako v pÅedchozÃ­ verzi nÃ¡sleduje javascriptovÃ½ spouÅ¡tÄcÃ­ kÃ³d. Zde jiÅ¾ vznikajÃ­ urÄitÃ© odliÅ¡nosti:\n\n```javascript\n$(function () {\n\t$('#image-uploader').fineUploader({\n\t\tdebug: true, //hodÃ­ se pro lazenÃ­\n\t\trequest: {\n\t\t\tendpoint: 'pictures?do=uploadPicture'\n\t\t},\n\t\tretry: {\n\t\t\tenableAuto: true\n\t\t}\n\t});\n});\n```\n\nPouÅ¾itÃ­ je tedy tÃ©mÄÅ stejnÃ©, aÅ¾ na to, Å¾e jsem ÃºplnÄ vypustil pÅeklad textÅ¯. V tÃ©to novÃ© verzi jsou totiÅ¾ novinkou Å¡ablony (ostatnÄ proto takÃ© novÃ© ÄÃ­slo verze). UÅ¾ivatel-programÃ¡tor mÃ¡ tak vÃ­ce pod kontrolou vÃ½slednÃ½ vzhled uploaderu:\n\n```html\n<script type=\"text/template\" id=\"qq-template\">\n\t<div class=\"qq-uploader-selector qq-uploader\">\n\t\t<div class=\"qq-upload-drop-area-selector qq-upload-drop-area\" qq-hide-dropzone>\n\t\t\t<span>PÅetÃ¡hnÄte soubory sem</span>\n\t\t</div>\n\t\t<div class=\"qq-upload-button-selector qq-upload-button\">\n\t\t\t<div>KliknÄte, nebo pÅetÃ¡hnÄte obrÃ¡zky</div>\n\t\t</div>\n        <span class=\"qq-drop-processing-selector qq-drop-processing\">\n           <span>ZpracovÃ¡vÃ¡m pÅetaÅ¾enÃ© soubory...</span>\n           <span class=\"qq-drop-processing-spinner-selector qq-drop-processing-spinner\"></span>\n        </span>\n\t\t<ul class=\"qq-upload-list-selector qq-upload-list\">\n\t\t\t<li>\n\t\t\t\t<div class=\"qq-progress-bar-container-selector\">\n\t\t\t\t\t<div class=\"qq-progress-bar-selector qq-progress-bar\"></div>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"qq-upload-spinner-selector qq-upload-spinner\"></span>\n\t\t\t\t<img class=\"qq-thumbnail-selector\" qq-max-size=\"100\" qq-server-scale>\n\t\t\t\t<span class=\"qq-edit-filename-icon-selector qq-edit-filename-icon\"></span>\n\t\t\t\t<span class=\"qq-upload-file-selector qq-upload-file\"></span>\n\t\t\t\t<input class=\"qq-edit-filename-selector qq-edit-filename\" tabindex=\"0\" type=\"text\">\n\t\t\t\t<span class=\"qq-upload-size-selector qq-upload-size\"></span>\n\t\t\t\t<a class=\"qq-upload-cancel-selector qq-upload-cancel\" href=\"#\">ZruÅ¡it</a>\n\t\t\t\t<a class=\"qq-upload-retry-selector qq-upload-retry\" href=\"#\">Opakovat</a>\n\t\t\t\t<a class=\"qq-upload-delete-selector qq-upload-delete\" href=\"#\">Smazat</a>\n\t\t\t\t<span class=\"qq-upload-status-text-selector qq-upload-status-text\"></span>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</script>\n```\n\nA opÄt nÃ¡sleduje zpracovÃ¡nÃ­ v handleru:\n\n```php\npublic function handleUploadPicture() {\n\t$uploader = new \\UploadHandler();\n\t$uploader->allowedExtensions = array(\"jpeg\", \"jpg\", \"png\", \"gif\");\n\t$result = $uploader->handleUpload(__DIR__ . '/../../www/uploads');\n\t$this->sendResponse(new Nette\\Application\\Responses\\JsonResponse($result));\n}\n```\n\nZde celkem nenÃ­ co pokazit, ale pokud by bylo potÅeba vrÃ¡tit chybu, provede se to opÄt pomocÃ­ `JsonResponse`:\n\n```php\n$this->sendResponse(new Nette\\Application\\Responses\\JsonResponse(array(\n\t\t'error' => $exc->getMessage(),\n)));\n```\n\nSamotnÃ¡ tÅÃ­da `UploadHandler` je pak opÄt k nalezenÃ­ na [GitHubu](https://github.com/Widen/fine-uploader-server/blob/master/php/traditional/handler.php). Tento nÃ¡vod tedy mohu zakonÄit vlastnÃ­ citacÃ­:\n\n> A to je vlastnÄ ÃºplnÄ celÃ©. StaÄÃ­ tedy spustit Fine Uploader na stranÄ klienta napÅÃ­klad podle oficiÃ¡lnÃ­ch nÃ¡vodÅ¯, endpoint nastavit na nÄjakÃ½ handle v aplikaci a ten sprÃ¡vnÄ pouÅ¾it. To konkrÃ©tnÄ obnÃ¡Å¡Ã­ odeslÃ¡nÃ­ JSON odpovÄdi o ÃºspÄÅ¡nÃ©m zpracovÃ¡nÃ­ obrÃ¡zku.","frontmatter":"id: 372c259c-4339-437d-b5e5-af02fe0d9dae\ntimestamp: 1393877713000\ntitle: AJAX upload souborÅ¯ v Nette pomocÃ­ Fine Uploaderu #2\nslug: ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2"},{"attributes":{"id":"ef0027e0-1814-4c1f-9fcd-395b68cfcb85","timestamp":1393588145000,"title":"Äteme QR kÃ³dy bez ÄteÄky","slug":"cteme-qr-kody-bez-ctecky"},"body":"![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/2139a61c-efc4-4e3c-b630-5c3cbf9258df/qrcode-ahoj.png)\n\nPatÅÃ­te mezi lidi, kteÅÃ­ se nespokojÃ­ pouze se ÄteÄkou QR kÃ³dÅ¯, ale chcete vÄdÄt jak fungujÃ­? Nebo co vÃ­c jak je pÅeÄÃ­st bez pouÅ¾itÃ© takovÃ© ÄteÄky? Tak to jste na sprÃ¡vnÃ© adrese. Dnes budu ÅeÅ¡it zejmÃ©na prÃ¡vÄ ÄtenÃ­ QR kÃ³du bez pouÅ¾itÃ­ ÄteÄky. Celou dobu budu ÅeÅ¡it tento QR kÃ³d na levÃ© stranÄ, takÅ¾e doporuÄuji nepouÅ¾Ã­vat telefon a poÄkat aÅ¾ na konec, kde se jeho obsah dozvÃ­te. ZÃ¡roveÅ se nebudu nijak opÃ­rat o korekci chyb a dalÅ¡Ã­ jinak dÅ¯leÅ¾itÃ© vÄci, ale budu se co nejvÃ­ce soustÅedit prÃ¡vÄ na pÅeÄtenÃ­ kÃ³du bez pouÅ¾itÃ­ jakÃ©hokoliv pÅÃ­stroje. PojÄme na to...\n\n# Trocha nezbytnÃ© teorie\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/312d5904-ab94-4877-9743-8ec902fbc50a/qrcode-parts.png)\n\nQR kÃ³d asi vidÄl kaÅ¾dÃ½. StejnÄ tak pÅedpoklÃ¡dÃ¡m, Å¾e spoustu lidÃ­ tuÅ¡Ã­, Å¾e QR kÃ³d dodrÅ¾uji urÄitÃ¡ pravidla, aby jej Å¡lo pÅeÄÃ­st strojovÄ. JednÃ¡ se zejmÃ©na o \"finder pattern\", tedy ty velkÃ© Ätverce, kterÃ© slouÅ¾Ã­ k zamÄÅenÃ­ ÄteÄky a urÄenÃ­ orientace kÃ³du. DÃ­ky tomu, Å¾e jsou tÅi, tak lze QR kÃ³d pÅeÄÃ­st i pokud je vzhÅ¯ru nohama. DalÅ¡Ã­m vÃ½znamnÃ½m prvkem jsou separÃ¡tory, kterÃ© obklopujÃ­ prÃ¡vÄ tyto Ätverce a slouÅ¾Ã­ k oddÄlenÃ­ zamÄÅovaÄÅ¯ od zbytku kÃ³du. Å½lutÄ jsem zvÃ½raznil tzv. \"timing patterns\". Ty se tÃ¡hnout z rohu do rohu zamÄÅovacÃ­ch ÄtvercÅ¯, kdy se celou dobu stÅÃ­dÃ¡ ÄernÃ¡ a bÃ­lÃ¡ barva a slouÅ¾Ã­ opÄt pro ÄteÄky napÅÃ­klad k urÄenÃ­ velikosti celÃ©ho kÃ³du. Na takto malÃ©m kÃ³du nejsou Å¾Ã¡dnÃ­ informace i verzi, ani korekÄnÃ­ body.\n\nNejdÅ¯leÅ¾itÄjÅ¡Ã­ jsou vÅ¡ak ÄervenÃ© a zelenÃ© ÄÃ¡sti. Zde jsou uloÅ¾eny informace i formÃ¡tu, kterÃ© nÃ¡slednÄ takÃ© vyuÅ¾ijeme. Je zajÃ­mavÃ©, Å¾e se jak ÄervenÃ¡ ÄÃ¡st, tak zelenÃ¡ ÄÃ¡st na kÃ³du vÅ¾dy dvakrÃ¡t opakuje. Informace je oÄÃ­slovÃ¡na ÄÃ­sly 1-15 s tÃ­m, Å¾e kolem levÃ©ho hornÃ­ho zamÄÅovaÄe je informace celÃ¡ a ta samÃ¡ informace je jeÅ¡tÄ rozdÄlena a umÃ­stÄna kolem zbylÃ½ch dvou zamÄÅovaÄÅ¯. Je zde jeÅ¡tÄ jedna zajÃ­mavost. V levÃ©m dolnÃ­m rohu nad ÄÃ­slem 9 je ÄernÃ© mÃ­sto, tzv. \"dark module\". Toto mÃ­sto by mÄlo bÃ½t na vÅ¡ech kÃ³dech ÄernÃ©. JednÃ¡ se pÅebyteÄnÃ© mÃ­sto, kterÃ© vznikÃ¡ pÅi zdvojovÃ¡nÃ­ informace o formÃ¡tu. Podle specifikace by to tak mÄlo bÃ½t, ale ne vÅ¾dy to platÃ­. Pro nÃ¡s je vÅ¡ak zajÃ­mavÃ¡ jedinÃ¡ ÄÃ¡st z celÃ© 15 bitÅ¯ dlouhÃ© informace a to konkrÃ©tnÄ bity umÃ­stnÄnÃ© na pozici 11, 12 a 13, tedy v zelenÃ© ÄÃ¡sti. PrÃ¡vÄ ty si nesou tu nejdÅ¯leÅ¾itÄjÅ¡Ã­ informaci o masce. VÅ¡echny ostatnÃ­ ÄÃ¡sti informace slouÅ¾Ã­ ke korekci chyb. CelkovÄ se ve vÃ½sledku ukÃ¡Å¾e, Å¾e kromÄ samotnÃ© informace je v QR kÃ³du sloustu \"zbyteÄnÃ½ch\" vÄcÃ­, kterÃ© informaci nenesou. V maÅ¡em pÅÃ­padÄ je tedy maska `111` (ÄernÃ© mÃ­sto je 1 a bÃ­lÃ© 0). Tuto informaci je vÅ¡ak jeÅ¡tÄ potÅeba dekÃ³dovat pomocÃ­ XOR souÄtu pÅiÄtenÃ­m hodnoty `101`, tedy:\n\n```\n111\n101 /XOR\n---\n010\n```\n\nCelÃ¡ dekÃ³dovacÃ­ maska je `101010000010010`, ale pro naÅ¡Ã­ potÅebu je potÅeba pouze ÄÃ¡st `101`. JeÅ¡tÄ neÅ¾ vysvÄtlÃ­m co to maska je, uvedu zde vÅ¡echny hodnoty jakÃ© mÅ¯Å¾e maska mÃ­t:\n\n<table class=\"table table-bordered\">\n  <thead>\n    <tr><td>Hodnota masky</td><td>PodmÃ­nka masky</td></tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>000</td>\n      <td>(i + j) mod 2 = 0</td>\n    </tr>\n    <tr>\n      <td>001</td>\n      <td>i mod 2 = 0</td>\n    </tr>\n    <tr>\n      <td>**010**</td>\n      <td>**j mod 3 = 0**</td>\n    </tr>\n    <tr>\n      <td>011</td>\n      <td>(i + j) mod 3 = 0</td>\n    </tr>\n    <tr>\n      <td>100</td>\n      <td>((i div 2) + (j div 3)) mod 2 = 0</td>\n    </tr>\n    <tr>\n      <td>101</td>\n      <td>(i j) mod 2 + (i j) mod 3 = 0</td>\n    </tr>\n    <tr>\n      <td>110</td>\n      <td>((i j) mod 2 + (i j) mod 3) mod 2 = 0</td>\n    </tr>\n    <tr>\n      <td>111</td>\n      <td>((i+j) mod 2 + (i j) mod 3) mod 2 = 0</td>\n    </tr>\n  </tbody>\n</table>\n\nTo mÅ¯Å¾e vypadat dÄsivÄ, ale hned vysvÄtlÃ­m. Podle toho jakou mÃ¡ kÃ³d masku vezmeme vzorec a dosadÃ­me za **j** ÄÃ­slo sloupce. V naÅ¡em pÅÃ­padÄ se tedy bavÃ­me o prvnÃ­m a pak kaÅ¾dÃ©m tÅetÃ­m sloupci. Pro tyto sloupce platÃ­, Å¾e na nich musÃ­me provÃ©st negaci, tedy otoÄit barvy. TÃ­m QR kÃ³d odmaskujeme. Toto vÅ¡ak platÃ­ pouze pro ÄÃ¡stÃ­ kde je opravdu nÄjakÃ¡ informace, nikoliv pro zamÄÅovaÄe, nebo napÅÃ­klad ÄÃ¡sti nesoucÃ­ formÃ¡tovacÃ­ informaci. Toto maskovÃ¡nÃ­ slouÅ¾Ã­ k zamÃ­chÃ¡nÃ­ barevnÃ½ch polÃ­. Nestane se tak, Å¾e by byl kÃ³d nejednoznaÄnÃ½. PÅi kÃ³dovÃ¡nÃ­ se totiÅ¾ porovnÃ¡vajÃ­ jednotlivÃ© masky, kaÅ¾dÃ¡ maska mÃ¡ nÄjakÃ© skÃ³rÃ© jednoznaÄnosti a ve vÃ½sledku se vybere ta nejjednoznaÄnÄjÅ¡Ã­. CelÃ© odmaskovÃ¡nÃ­ je znÃ¡zornÄno na obrÃ¡zku nÃ­Å¾e. PravÃ½ ÄernÃ½ QR kÃ³d je jiÅ¾ odmaskovanÃ½ a nic nebrÃ¡nÃ­ jej pÅeÄÃ­st. V tuto chvÃ­li vÅ¡ak jiÅ¾ pouze bez pouÅ¾itÃ­ ÄteÄky.\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/63e85abb-b86a-4877-9640-fb70b4cd2542/qrcode-important.png)\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/3951a3ea-5f53-4af9-9c01-a45fd71dd5b0/qrcode-unmasked.png)\n\n# Hrajeme si na ÄteÄku\n\n![](https://zlmlcz-media.s3-eu-west-1.amazonaws.com/0ed74ba7-ddec-40da-ab12-4e6b8d82103c/qrcode-decode.png)\n\nPÅedchozÃ­ ÄÃ¡st byla moÅ¾nÃ¡ troÅ¡ku sloÅ¾itÄjÅ¡Ã­, ale kdyÅ¾ se na to podÃ­vÃ¡te zpÄtnÄ je to vlastnÄ velice jednoduchÃ©. StaÄÃ­ pÅeÄÃ­st 3 bity z celÃ©ho kÃ³du, provÃ©st jednoduchÃ½ XOR a jak se ukÃ¡Å¾e dÃ¡le, tak staÄÃ­ invertovat pouze jeden sloupec, protoÅ¾e vÃ­ce jich nenÃ­ potÅeba.\n\nPodÃ­vejte se nynÃ­ na levÃ½ obrÃ¡zek. Ten ukazuje, jak budeme ÄÃ­st uloÅ¾enou informaci. BarevnÄ znÃ¡zornÄnÃ¡ ÄÃ¡st je kompletnÃ­ informace. Zbytek kÃ³du je pro nÃ¡s v tuto chvÃ­li jen odpad. BarevnÄ zvÃ½raznÄnÃ¡ ÄÃ¡st se jeÅ¡tÄ dÄlÃ­ na tÅi podÄÃ¡sti. ÄervenÃ¡ oblast obsahuje informaci o mÃ³du. Bity Äteme vÅ¾dy podle ÄÃ­sel a Å¡ipek. Tento QR kÃ³d je tedy v mÃ³du `0100` coÅ¾ je mÃ³d \"BYTE\". Data tedy budeme rozdÄlovat tak, aby mÄla kaÅ¾dÃ½ ÄÃ¡st 1 byte, tedy 8 bitÅ¯. Tyto mÃ³dy a dalÅ¡Ã­ informace jsou velmi podrobnÄ popsÃ¡ny v oficiÃ¡lnÃ­ dokumentaci. ModrÃ¡ ÄÃ¡st nÃ¡m jeÅ¡tÄ prozrazuje informaci o dÃ©lce, binÃ¡rnÄ tedy `00000100` coÅ¾ je v desÃ­tkovÃ© soustavÄ ÄÃ­slo 4. TakÅ¾e informace v tomto QR kÃ³du mÃ¡ dÃ©lku 4 znaky. OpÃ­Å¡eme si tedy Åadu bitÅ¯:\n\n```\n01100001 01101000 01101111 01101010\n```\n\nZde by mohl bÃ½t troÅ¡ku zÃ¡drhel pro lidi, co neumÃ­ ASCII tabulku. ProzradÃ­m tedy malÃ½ fÃ­gl. Pokud binÃ¡rnÃ­ ÄÃ¡sla prevedeme do decimÃ¡lnÃ­ soustavy, coÅ¾ je velmi jednoduchÃ©, zÃ­skÃ¡me nÃ¡sledujÃ­cÃ­ zÃ¡pis:\n\n```\n97 104 111 106\n```\n\nA teÄ uÅ¾ je to jen posunutÃ¡ abeceda, protoÅ¾e ÄÃ­slo 97 je malÃ© **a**. VÃ½sledkem je tedy po chvilce abecedovÃ¡nÃ­:\n\n```\na h o j\n```\n\nTo nebylo tak tÄÅ¾kÃ©, Å¾e? Je to sice absurdnÃ­ a pravdÄpodobnÄ nikdy nikoho neuvidÃ­m s tuÅ¾kou a papÃ­rem pÅed QR kÃ³dem, ale i tak si myslÃ­m, Å¾e je dobrÃ© tyto vÄci vÄdÄt, kdyÅ¾ uÅ¾ se QR kÃ³d pouÅ¾Ã­vÃ¡ tak Äasto. DoporuÄuji vÅ¡em pÅeÄÃ­st si dokument *ISO/IEC 18004:2006*, kterÃ½ ÅeÅ¡Ã­ prÃ¡vÄ QR kÃ³dy. Je to nesmÃ­rnÄ zajÃ­mavÃ½ dokument plnÃ½ obrÃ¡zkÅ¯ a ÃºplnÃ½ch popiskÅ¯, aÄkoliv je i v tomto dokumentu pÃ¡r drobnÃ½ch chyb.","frontmatter":"id: ef0027e0-1814-4c1f-9fcd-395b68cfcb85\ntimestamp: 1393588145000\ntitle: Äteme QR kÃ³dy bez ÄteÄky\nslug: cteme-qr-kody-bez-ctecky"},{"attributes":{"id":"2f77a602-c2d5-4dd1-baee-d033fedad75e","timestamp":1393074151000,"title":"Omyly hashovÃ¡nÃ­ hesel","slug":"omyly-hashovani-hesel"},"body":"NÄkdy minulÃ½ rok jsem si Äetl prezentaci [Michala Å paÄka .{target:_blank}](http://www.michalspacek.cz/) o [hashovÃ¡nÃ­ hesel .{target:_blank}](http://www.slideshare.net/spaze/hashe-hesla-develcz-2013) a byl jsem z toho ponÄkud zklamÃ¡n. Naprosto souhlasÃ­m se vÅ¡Ã­m co tam je, pÅesto vÅ¡ak nemÃ¡m rÃ¡d, kdyÅ¾ se dojde k zÃ¡vÄrÅ¯m, kterÃ© sice na prvnÃ­ pohled dÃ¡vajÃ­ smysl a fakt dobÅe se tak dÃ¡ argumentovat, ale ve vÃ½sledku jsou podle mÃ©ho nÃ¡zoru nÄkterÃ© opravdu chybnÃ©. NedÃ¡vno kolem mÄ tato prezentace proplula znova a protoÅ¾e jiÅ¾ mÃ¡m celkem setÅÃ­dÄnÃ© myÅ¡lenky, rozhodl jsem se je sepsat.\n\nTÃ­mto ÄlÃ¡nkem nehodlÃ¡m hatit jiÅ¾ zmÃ­nÄnou prezentaci. Naopak se chci opÅÃ­t do vÅ¡ech prezentacÃ­ a vÃ½stupÅ¯, kterÃ© nÄco tvrdÃ­ a nenÃ­ to tak docela pravda. ZÃ¡roveÅ je takÃ© nutno ÅÃ­ct, Å¾e nebudu ÅeÅ¡it funkce typu MD5, protoÅ¾e doufÃ¡m, Å¾e vÅ¡ichni v dneÅ¡nÃ­ dobÄ vÄdÃ­, Å¾e funkce MD5 prostÄ nenÃ­ urÄena na hashovÃ¡nÃ­ hesel. PÅesto si neodpustÃ­m nÄkolik vÄt i o konkrÃ©tnÃ­ch implementaÄnÃ­ch problÃ©mech.\n\n# Omyl prvnÃ­\n\nKdyÅ¾ jsem se opÄt doÅ¾adoval matematickÃ©ho dÅ¯kazu o problÃ©mu cyklickÃ©ho hashovÃ¡nÃ­, byl jsem dokÃ¡zÃ¡n na [stackoverflow .{target:_blank}](http://stackoverflow.com/questions/348109/is-double-hashing-a-password-less-secure-than-just-hashing-it-once/17396367#17396367), coÅ¾ mÄ mÄlo uspokojit. Äetl jsem to pozdÄ v noci, takÅ¾e jsem to nechal na rÃ¡no a ani tak jsem s tÃ­m nesouhlasil.\n\nV podstatÄ se jednÃ¡ o popsÃ¡nÃ­ preimage Ãºtoku, kterÃ½ se snaÅ¾Ã­ najÃ­t stejnÃ½ hash jako je hash znÃ¡mÃ½ a tÃ­m zÃ­skat pÅ¯vodnÃ­ (nebo jinou fungujÃ­cÃ­) hodnotu hesla, tedy v tuto chvÃ­li jedinÃ½ zajÃ­mavÃ½ zpÅ¯sob. CelÃ½ dÅ¯kaz toho, Å¾e cyklickÃ© hashovÃ¡nÃ­ nenÃ­ dobrÃ½ nÃ¡pad je provÃ¡dÄn na vlastnÃ­ funkci a smÄÅ¡nÄ malÃ© mnoÅ¾inÄ vstupÅ¯. To je prvnÃ­ divnÃ¡ vÄc. Mnohem divnÄjÅ¡Ã­ vÅ¡ak je zÃ¡vÄr pokusu, kterÃ½ tvrdÃ­, Å¾e nekoneÄnÃ½ vstup lze namapovat na koneÄnou mnoÅ¾inu. JednÃ¡ se tedy o surjektivnÃ­ zobrazenÃ­ prvnÃ­ mnoÅ¾iny na druhou, kdy se kaÅ¾dÃ½ prvek z prvnÃ­ mnoÅ¾iny namapuje na vÅ¡echny prvky menÅ¡Ã­ vÃ½stupnÃ­ podmnoÅ¾iny. A prÃ¡vÄ v tomto kroku vidÃ­m celou teoretickou Ãºvahu jako chybnou. Å½Ã¡dnÃ¡ hashovacÃ­ funkce totiÅ¾ nepoÄÃ­tÃ¡ s libovolnÃ½m, nebo dokonce s nekoneÄnÃ½m vstupem. KdyÅ¾ to rozvedu i na konkrÃ©tnÃ­ funkci MD5, pak nekoneÄnÃ½ poÄet vstupÅ¯ mapuji na 2^128 vÃ½stupÅ¯. ReÃ¡lnÄ (coÅ¾ je to co nÃ¡s primÃ¡rnÄ zajÃ­mÃ¡) vÅ¡ak mapuji 2^64 vstupÅ¯ na 2^128 vÃ½stupÅ¯ (Äti bitÅ¯). V tu chvÃ­li se vÅ¡ak bavÃ­me o injektivnÃ­m zobrazenÃ­, coÅ¾ bylo v pÅ¯vodnÃ­m textu odsouzeno. Jak jsem k tomumo nÃ¡zoru doÅ¡el? VychÃ¡zÃ­m z [RFC 1321 - The MD5 Message-Digest Algorithm .{target:_blank}](http://www.faqs.org/rfcs/rfc1321.html)\n\n> A 64-bit representation of b (the length of the message before the\n> padding bits were added) is appended to the result of the previous\n> step. In the unlikely event that b is greater than 2^64, then only\n> the low-order 64 bits of b are used. (These bits are appended as two\n> 32-bit words and appended low-order word first in accordance with the\n> previous conventions.)\n\nPak uÅ¾ je jen malÃ½ krÅ¯Äek k tomu uvÄdomit si, Å¾e 2^64 bitovÃ© heslo je jinak ÅeÄeno nÄco kolem 2 exabajtÅ¯, coÅ¾ je tak troÅ¡ku hodnÄ i na uloÅ¾enÃ­, natoÅ¾ na zapamatovÃ¡nÃ­. A i kdybych to spoÄetl blbÄ - jakoÅ¾e doufÃ¡m, Å¾e ne - nÄkolik ÅÃ¡dÅ¯ sem tam je ÃºplnÄ jedno, protoÅ¾e mnoÅ¾ina na kterou se to mapuje je daleko vÄtÅ¡Ã­. StejnÄ tak mi pÅijde naprosto komickÃ¡ tato ukÃ¡zka:\n\n```\n$output = md5($input); // 2^128 possibilities\n$output = md5($output); // < 2^128 possibilities\n$output = md5($output); // < 2^128 possibilities\n$output = md5($output); // < 2^128 possibilities\n$output = md5($output); // < 2^128 possibilities\n```\n\nPÅepÃ­Å¡u to jinak:\n\n```\n$output = md5($input); // 340282366920938463463374607431768211456 possibilities\n$output = md5($output); // 340282366920938463463374607431768211455 possibilities\n$output = md5($output); // 340282366920938463463374607431768211454 possibilities\n$output = md5($output); // 340282366920938463463374607431768211453 possibilities\n$output = md5($output); // 340282366920938463463374607431768211452 possibilities\n```\n\nVychÃ¡zÃ­me tedy z 340 undecilionÅ¯ 282 decilionÅ¯ 366 nonilionÅ¯ 920 octilionÅ¯ 938 septilionÅ¯ 463 sextilionÅ¯ 463 quintilionÅ¯ 374 quadrilionÅ¯ 607 trilionÅ¯ 431 bilionÅ¯ 768 milionÅ¯ 211 tisÃ­c 456 moÅ¾nostÃ­. JasnÃ©? Tuto teorii tedy povaÅ¾uji za ÄistÄ teoretickou. KlidnÄ si to heslo zaÅ¡ifrujte undecilionkrÃ¡t... OstatnÄ stejnÃ½ problÃ©m byl pÅi Å¡ifrovÃ¡nÃ­ vÅ¾dy. KlidnÄ se mohlo stÃ¡t, Å¾e klÃ­Ä od zprÃ¡vy zaÅ¡ifrovanÃ© v EnigmÄ (nebo kdekoliv jinde) uhodnou. Ale nedÄlalo se to, protoÅ¾e je to prostÄ jen papÃ­rovÃ½ nesmysl. OstatnÄ i kdyÅ¾ se to stane, tak je to prostÄ debilnÃ­ smÅ¯la, jenÅ¾e vÄÅÃ­ snad jeÅ¡tÄ nÄkdo tomu, Å¾e se to stane u celÃ© databÃ¡ze?\n\n# Omyl druhÃ½\n\nNynÃ­ budu pÅedpoklÃ¡dat, Å¾e bude nynÃ­ mÃ½m cÃ­lem zjistit skuteÄnÄ takovÃ© heslo, jakÃ© bylo pÅed zahashovÃ¡nÃ­m. ÃplnÄ tÃ­m tedy odbourÃ¡m fakt, Å¾e dva rÅ¯znÃ© texty budou mÃ­t stejnÃ½ hash. To se mÅ¯Å¾e stÃ¡t, druhÃ¡ moÅ¾nost vÅ¡ak bude svÃ½m charakterem tak ÃºplnÄ jinde, Å¾e ji stejnÄ nepÅ¯jde napÅ. pÅi pÅihlaÅ¡ovÃ¡nÃ­ pouÅ¾Ã­t. Pokud tedy chci zjistit heslo z hashe u kterÃ©ho vÃ­m, Å¾e bylo nÄkolikrÃ¡t hashovÃ¡no, nezbÃ½vÃ¡ mi, neÅ¾ jÃ­t postupnÄ z hashe aÅ¾ k heslu:\n\n```\n7eaefb28c9c3fe4be6997cc5b7fb599f // pÅ¯vodnÃ­ hash\n92b7db0f6d7348d91e90651d31ff9e71\n651a9c9c86f3116a53e2bb6e80bfdf69\n1b929b62a2c822c4a59e688fde2a3a0b\n955db0b81ef1989b4a4dfeae8061a9a6\nheslo // konec hledÃ¡nÃ­, toto jiÅ¾ nenÃ­ MD5\n```\n\nJenÅ¾e jakÃ© teÄ skuteÄnÃ© heslo? Je to \"heslo\"? Pokud bych byl chytrÃ½ a umÄl si zapamatovat 32 znakÅ¯, moje heslo by urÄitÄ bylo \"1b929b62a2c822c4a59e688fde2a3a0b\" a jen bych zmÃ¡tl vÅ¡echny okolo. A potom je celkem sranda to, kdyÅ¾ se vrÃ¡tÃ­me k ÄistÄ teoretickÃ©mu uvaÅ¾ovÃ¡nÃ­ a ÅeknÄme, Å¾e se mÅ¯Å¾e stÃ¡t, Å¾e dva hashe budou totoÅ¾nÃ©:\n\n```\n1b929b62a2c822c4a59e688fde2a3a0b // pÅ¯vodnÃ­ hash   <-\n... // dlouhÃ¡ sÃ©rie hashÅ¯ vedoucÃ­ch k opakovÃ¡nÃ­     |\n651a9c9c86f3116a53e2bb6e80bfdf69                    |-- stejnÃ© hashe\n1b929b62a2c822c4a59e688fde2a3a0b   <-----------------\n955db0b81ef1989b4a4dfeae8061a9a6\nheslo // konec hledÃ¡nÃ­, toto jiÅ¾ nenÃ­ MD5\n```\n\nVÄÅte, Å¾e mÃ© heslo je teÄ \"651a9c9c86f3116a53e2bb6e80bfdf69\". PÅi pokusu o zjiÅ¡tÄnÃ­ pÅ¯vodu hashe mÃ¡m dvÄ moÅ¾nosti. Mohu najÃ­t takovÃ½ hash, kterÃ½ je pÅed tÃ­m prvnÃ­m, ale jinÃ½ neÅ¾ \"955db0b81ef1989b4a4dfeae8061a9a6\", nebo prÃ¡vÄ \"955db0b81ef1989b4a4dfeae8061a9a6\". V prvnÃ­m pÅÃ­padÄ je to stejnÃ© jako pÅedchozÃ­ pÅÃ­pad. V druhÃ©m vÅ¡ak naleznu nejdÅÃ­ve jinou shodu a nejen Å¾e dojdu k jinÃ©mu heslu, ale takÃ© ÃºplnÄ pÅeskoÄÃ­m to sprÃ¡vnÃ© heslo. TakÅ¾e v urÄitÃ©m pÅÃ­padÄ mÅ¯Å¾e bÃ½t opakovanÃ© hashovÃ¡nÃ­ dokonce jeÅ¡tÄ bezpeÄnÄjÅ¡Ã­! OpÄt je to pouze teorie, ale chci tÃ­m ukÃ¡zat, Å¾e nÄkterÃ© argumenty mohou bÃ½t sice silnÃ©, majÃ­ vÅ¡ak vÅ¾dy i obrÃ¡cenou stranu, kterÃ¡ nenÃ­ o nic slabÅ¡Ã­...\n\nChtÄl jsem tedy vyvrÃ¡tit nÄkolik zaÅ¾itÃ½ch pÅedpokladÅ¯, coÅ¾ se mi doufÃ¡m podaÅilo. MusÃ­m vÅ¡ak dodat nesmÃ­rnÄ dÅ¯leÅ¾itou vÄc. Neobhajuji zde pouÅ¾itÃ­ MD5 ani jinÃ© podobnÃ© funkce (kterÃ¡ tak jako MD5 nenÃ­ k hashovÃ¡nÃ­ hesel urÄena). PouÅ¾Ã­vejte spÃ­Å¡e funkce, kterÃ© majÃ­ sloÅ¾itou vÃ½poÄetnÃ­ nÃ¡roÄnost a jejich vÃ½stup je pro dva stejnÃ© vstupy rÅ¯znÃ½. Takovou dobrou funkcÃ­ je pro PHP funcke `password_hash`, kterÃ¡ byla vytvoÅena prÃ¡vÄ kvÅ¯li tomu, Å¾e v tom programÃ¡toÅi dÄlajÃ­ neskuteÄnÃ½ bordel. PouÅ¾itÃ­ je ÃºplnÄ jednoduchÃ©:\n\n```php\n<?php\necho password_hash('heslo', PASSWORD_DEFAULT);\n```\n\nTato funkce momentÃ¡lnÄ pouÅ¾Ã­vÃ¡ bcrypt, do budoucna je moÅ¾nÃ© pouÅ¾Ã­t konstantu PASSWORD_BCRYPT, protoÅ¾e defaultnÃ­ konstanta mÅ¯Å¾e zpÅ¯sob Å¡ifrovÃ¡nÃ­ zmÄnit na nÄjakÃ½ lepÅ¡Ã­. StejnÄ jednoduchÃ© je i ovÄÅenÃ­ hesla:\n\n```php\nif (password_verify('heslo', '$2y$10$2YOiYB9vFd11vTRBtqqKE.TnrT1ydXuCGsSHXbAKRvUgnpE9VaoES')) {\n    echo 'Password is valid!';\n} else {\n    echo 'Invalid password.';\n}\n```\n\nTyto funkce, stejnÄ tak jako dobÅe pouÅ¾itÃ½ kompatibilnÃ­ `crypt` povaÅ¾uji za naprosto dostateÄnÃ¡ ÅeÅ¡enÃ­ a vÃ­c se o tom nenÃ­ tÅeba jiÅ¾ <s>nikdy</s> bavit. TeÄka.\n\n<span style=\"color:green\">A pod teÄkou jeÅ¡tÄ nÄco. ÄÃ­m musÃ­m napravit neÅ¡Å¥astnÄ volenÃ¡ slova v pÅedchozÃ­ vÄtÄ. TÃ­m Å¾e se o tom nenÃ­ jiÅ¾ tÅeba nikdy bavit je myÅ¡leno to o Äem se ve vÄtÄ pÃ­Å¡e, tedy Å¾e bcrypt funkce povaÅ¾uji za naprosto dostateÄnÃ© (v souÄasnÃ© dobÄ i blÃ­zkÃ© budoucnosti) a za tÃ­m si stojÃ­m. NeznamenÃ¡ to vÅ¡ak, Å¾e teÄ hÃ¡zÃ­m za hlavu celou tuto problematiku. Pokud bych mÄl tedy pÅedchozÃ­ vÄtu opravit, napsal bych asi, Å¾e tyto funkce povaÅ¾uji za naprosto dostateÄnÃ©, nicmÃ©nÄ stÃ¡le mÃ¡ smysl tuto problematiku ÅeÅ¡it, protoÅ¾e vÄÅÃ­m, Å¾e v zÅejmÄ ne malÃ©m horizontu let bude i tato funkce nedostateÄnÃ¡. TeÄ ale nenÃ­.</span>","frontmatter":"id: 2f77a602-c2d5-4dd1-baee-d033fedad75e\ntimestamp: 1393074151000\ntitle: Omyly hashovÃ¡nÃ­ hesel\nslug: omyly-hashovani-hesel"},{"attributes":{"id":"3d580b09-b622-4a72-a912-a2205994b051","timestamp":1392999129000,"title":"JakÃ½ email je nejvÃ­ce vyuÅ¾Ã­vanÃ½?","slug":"jaky-email-je-nejvice-vyuzivany"},"body":"VÄera jsem psal o bezpeÄnostnÃ­ chybÄ, kterÃ¡ umoÅ¾Åuje zÃ­skat podle mÃ©ho nÃ¡zoru nezanedbatelnÄ velkÃ½ vzorek emailovÃ½ch adres. Krom toho, Å¾e bych byl rÃ¡d, aby byla tato chyba opravena, nemÃ¡m co jinÃ©ho s touto kolekcÃ­ adres dÄlat. Tak jsem se rozhodl vytvoÅit nÄjakou statistiku. SvÃ½m zpÅ¯sobem se totiÅ¾ jednÃ¡ o dosti specifickÃ© uÅ¾ivatele, protoÅ¾e se pravdÄpodobnÄ jednÃ¡ z naprostÃ© vÄtÅ¡iny pouze o ÄR a SK uÅ¾ivatele, takÅ¾e kdo ÄekÃ¡, Å¾e bude napÅ. gmail umÃ­stÄn nÄjak dobÅe, moÅ¾nÃ¡ bude pÅekvapen.\n\nA protoÅ¾e po diskusÃ­ch krouÅ¾Ã­ mnoho rÃ¡doby matematikÅ¯, rÃ¡d bych teÄ pÅesnÄ definoval vÅ¡echny vstupnÃ­ a vÃ½stupnÃ­ hodnoty vÄetnÄ jejich chyb, ÄÃ­mÅ¾ doufÃ¡m minimalizuji to, Å¾e vÃ½sledky nÄkdo Å¡patnÄ pochopÃ­. VÅ¡echny data jsou brÃ¡ny z kolekce ÄÃ­tajÃ­cÃ­ **384 392 unikÃ¡tnÃ­ch** emailovÃ½ch adres s tÃ­m, Å¾e uvaÅ¾uji zejmÃ©na u rozloÅ¾enÃ­ poskytovatelÅ¯ emailovÃ½ch schrÃ¡nek chybu 1%. Je to dÃ¡no tÃ­m, Å¾e vstupnÃ­ data nejsou ÃºplnÄ korektnÃ­ a ukazuje se, Å¾e se dost Äasto vyskytujÃ­ emaily jako `@seznam.czsms`, `@seznam.cztel`, `@seznam.czwww`, `@seznam.czweb`, `@senam.cz` atd. VÄtÅ¡inu takovÃ½ch prohÅeÅ¡kÅ¯ jsem se snaÅ¾il eliminovat, kaÅ¾dopÃ¡dnÄ nenÃ­ to dokonalÃ©. OsobnÄ bych chybu odhadoval na desetiny, moÅ¾nÃ¡ ani ne setiny procenta, ale radÄji ji nechÃ¡vÃ¡m vÄtÅ¡Ã­. Tato chyba je v prvnÃ­m grafu takÃ© graficky znÃ¡zornÄna. ZajÃ­mavÃ© je takÃ© to, Å¾e nÄkteÅÃ­ lidÃ© evidentnÄ chÃ¡pu input pro zadÃ¡nÃ­ emailu jako denÃ­k, takÅ¾e jsou schopni napsat do tohoto ÅÃ¡dku vÅ¡echny svÃ© emailovÃ© adresy. StojÃ­ za zamyÅ¡lenÃ­ jak sprÃ¡vnÄ navrhovat formulÃ¡Åe... DÃ¡le jsou pak z vÃ½poÄtÅ¯ zastoupenÃ­ Äetnosti znakÅ¯ prvnÃ­ch pÃ­smen emailovÃ½ch adres vypuÅ¡tÄny ÄÃ­sla, takÅ¾e tato dÃ­lÄÃ­ statistika poÄÃ­tÃ¡ s o nÄco menÅ¡Ã­ vstupnÃ­ kolekcÃ­ 382 338 emailovÃ½ch adres.\n\n# RozloÅ¾enÃ­ poskytovatelÅ¯ emailovÃ½ch schrÃ¡nek\n\nNÃ¡sledujÃ­cÃ­ graf ukazuje poÄet emailovÃ½ch adres pÅÃ­sluÅ¡ejÃ­cÃ­ch ke konkrÃ©tnÃ­ domÃ©nÄ. KonkrÃ©tnÄ je zobrazeno prvnÃ­ch 20 nejvÄtÅ¡Ã­ch poskytovatelÅ¯ a i tak jiÅ¾ majÃ­ poslednÃ­ mÃ©nÄ neÅ¾ jedno procento velikosti prvnÃ­ho, tedy Seznamu. Ten je v ÄeskÃ©m zastoupenÃ­ naprosto bezkonkurenÄnÃ­. VÅ¡Ã­mejte si prosÃ­m takovÃ½ch vÄcÃ­. VÄtÅ¡ina programÃ¡torÅ¯ se totiÅ¾ potkÃ¡vÃ¡ pouze s lidma \"od gmailu\", ale to je na ÄeskÃ©m trhu pouze minoritnÃ­ sloÅ¾ka. A je to tak u vÅ¡eho. Je aÅ¾ pÅekvapivÄ obrovskÃ½ nepomÄr mezi tÃ­m co si vÄtÅ¡ina lidÃ­ myslÃ­ a skuteÄnostÃ­. A tento vzorek jiÅ¾ povaÅ¾uji za dostateÄnou skuteÄnost.\n\n<iframe height=371 width=600 src=\"//docs.google.com/spreadsheets/d/1nWEt95Hd8CFxrwylUJr8uUFtceN6QiGMLL3JilW3ETQ/gviz/chartiframe?oid=744207493\" seamless frameborder=0 scrolling=no></iframe>\n\nKolikrÃ¡t jsem slyÅ¡el, Å¾e jsou Centrum a Atlas mrtvÃ© projekty. To uÅ¾ ani nemÃ¡ smysl poÄÃ­tat, ale reÃ¡lnÄ se ukazuje, Å¾e tomu tak vÅ¯bec nenÃ­ a tÄmto ÄÃ­slÅ¯m momentÃ¡lnÄ vÄÅÃ­m, protoÅ¾e uÅ¾ je zde pÅehazuji nÄkolik desÃ­tek hodin... (-: BohuÅ¾el nemÃ¡m pÅedstavu o tom, kolik existuje emailovÃ½ch adres v ÄR, ale veÅÃ­m, Å¾e se tvarovÄ graf moc nepohne. Pouze se bude mÄnit poÄet na svislÃ© ose.\n\n# DalÅ¡Ã­ zajÃ­mavÃ¡ data\n\nDalÅ¡Ã­ graf ukazuje skuteÄnÄ velkou hloupost. Ani nevÃ­m proÄ jsem jÃ­ vlastnÄ dÄlal. Jde o poÄetnÃ© zastoupenÃ­ prvnÃ­ch znakÅ¯ emailovÃ½ch adres. To jsou ty modrÃ© pruhy. ÄervenÃ© pruhy jsou pak pÅedpoklÃ¡danÃ¡ Äetnost znakÅ¯ pro Äeskou abecedu podle [Jana KrÃ¡lÃ­ka .{target:_blank}](http://www.czech-language.cz/alphabet/alph-prehled.html). NenÃ­ to poprvÃ© co tuto tabulku ÄetnostÃ­ pouÅ¾Ã­vÃ¡m a dÃ¡ se ÅÃ­ci, Å¾e s nÃ­ souhlasÃ­m. KaÅ¾dopÃ¡dnÄ mÃ¡m v plÃ¡nu tyto Äetnosti ovÄÅit a zaktualizovat, takÅ¾e se moÅ¾nÃ¡ tento graf Äasem malinko pozmÄnÃ­.\n\n<iframe height=371 width=600 src=\"//docs.google.com/spreadsheets/d/1nWEt95Hd8CFxrwylUJr8uUFtceN6QiGMLL3JilW3ETQ/gviz/chartiframe?oid=1555577201\" seamless frameborder=0 scrolling=no></iframe>\n\nDalÅ¡Ã­ informacÃ­, kterÃ¡ jiÅ¾ vÅ¡ak nemÃ¡ pevnÄ uchopitelnÃ½ zÃ¡klad je poÄet TLD. Lze tedy pouze ÅÃ­ci, Å¾e ze vzorku zkoumanÃ½ch dat, tedy ze vzorku emailovÃ½ch adres ÄeskÃ½ch uÅ¾ivatelÅ¯ majÃ­ nejvÄtÅ¡Ã­ zastoupenÃ­ koncovky `.cz` (290311), potÃ© `.sk` (88764) a dalÅ¡Ã­ v poÅadÃ­ je `.com` (5183), kterÃ¡ se vÅ¡ak svojÃ­ ÄetnostÃ­ jiÅ¾ ponÄkud mimo hru. ZajÃ­mavÃ© tekÃ© je, Å¾e vÄtÅ¡inu pÅeklepÅ¯ dÄlajÃ­ ÄeÅ¡i. To mÅ¯Å¾e bÃ½t tÃ­m, Å¾e jsme prostÄ nepozornÃ­, nebo jsou programÃ¡toÅi lajdÃ¡ci. Tato informace je zaloÅ¾ena na poÄtu korekcÃ­ domÃ©novÃ½ch nÃ¡zvÅ¯.\n\nPoslednÃ­ jiÅ¾ nikterak vyuÅ¾itelnou informacÃ­ je dÃ©lka adres. NejdelÅ¡Ã­ adresy jsou `butovice.zlicine.tel.728222069.pouzite.kalhotky@...`, `www.malirstvi.tym.czemail.malirstvi.hruby@...` a `martin.59kenvelo400500600300700800900201@...` ZakrÃ½vÃ¡m alespoÅ domÃ©ny, aby nÄkdo neprskal, kdyÅ¾ uÅ¾ proti tomu tak zbrojÃ­m. Naopak nejkratÅ¡Ã­ je adresa, kterÃ¡ mÃ¡ se vÅ¡Ã­m vÅ¡udy 8 znakÅ¯: `in@.....`.\n\nZajÃ­mÃ¡ vÃ¡s jeÅ¡tÄ nÄjakÃ¡ informace, kterÃ¡ se dÃ¡ z tÃ©to kolekce emailovÃ½ch adres zÃ­skat?","frontmatter":"id: 3d580b09-b622-4a72-a912-a2205994b051\ntimestamp: 1392999129000\ntitle: JakÃ½ email je nejvÃ­ce vyuÅ¾Ã­vanÃ½?\nslug: jaky-email-je-nejvice-vyuzivany"},{"attributes":{"id":"52dfa065-130b-4c37-81aa-289bd6ceee9e","timestamp":1392936502000,"title":"Kde se berou spamy?","slug":"kde-se-berou-spamy"},"body":"<div class=\"alert alert-info\">Tento ÄlÃ¡nek navazuje na ÄlÃ¡nek [StÃ¡hnÄte si zdarma 897457 emailovÃ½ch adres](stahnete-si-zdarma-897457-emailovych-adres) z ledna tohoto roku. PÅeÄtÄte si jej prosÃ­m, aÅ¥ vÃ­te o co jde.</div>\n\nRÃ¡d bych tÃ­mto vÅ¡echny ÄtenÃ¡Åe poprosil o pomoc. AÄkoliv na internetu vystupuji veÅejnÄ a nemÃ¡m s tÃ­m problÃ©m, jsem velmi hÃ¡klivÃ½ na to, kdyÅ¾ nÄkdo neoprÃ¡vnÄnÄ zneuÅ¾Ã­vÃ¡ mÃ© osobnÃ­ informace. NÄkteÅÃ­ pÅijmou moji Å¾Ã¡dost a problÃ©m odstranÃ­ - viz nedÃ¡vno zruÅ¡enÃ¡ kopie tohoto blogu. NÄkteÅÃ­ vÅ¡ak dÄlajÃ­ vÅ¡echno proto, abych pokraÄoval v rituÃ¡lnÃ­m podpalovÃ¡nÃ­ vÃ¡leÄnÃ© sekery a proto jsem neskonÄil tam kde jsem v minulÃ©m ÄlÃ¡nku pÅestal psÃ¡t.\n\n# TrnitÃ¡ cesta plnÃ¡ pÅekÃ¡Å¾ek\n\nJe jiÅ¾ znÃ¡mÃ¡ vÄc, Å¾e jistÃ½ web mÃ¡ nemalou zÃ¡sluhu na Å¡Ã­ÅenÃ­ reklamnÃ­ch emailÅ¯ kÅÃ­Å¾em krÃ¡Å¾em. Vzhledem k tomu, Å¾e takovÃ© email dorazil i ke mÄ a vzhledem k tomu, Å¾e upoutal moji pozornost, zaÄal jsem zbrojit. PÅi prvnÃ­ch pokusech jsem oÅ¥ukÃ¡val jejich systÃ©m abych zjistil o co jde. Zde jsem mimo jinÃ© udÄlal mylnÃ½ myÅ¡lenkovÃ½ pochod a vÅ¡e jsem svedl na nÄkoho kdo s tÃ­m nemÃ¡ nic spoleÄnÃ©ho. KaÅ¾dopÃ¡dnÄ po nÄkolika minutÃ¡ch jsem mÄl celkem jasno a udÄlal jsem velkou chybu. Popsal jsem bezpeÄnostnÃ­ chybu reklamnÃ­ho systÃ©mu na G+, na coÅ¾ nÄkdo velmi rychle zareagoval a jÃ¡ jsem dostal na tento reklamnÃ­ server ban. DoufÃ¡m, Å¾e to byla jen nÃ¡hoda...\n\nToto ÅeÅ¡enÃ­ mi pÅiÅ¡lo ponÄkud smÄÅ¡nÃ©, a tak jsem do tohoto systÃ©mu pÅes IP anonymizÃ©r Å¡Å¥oural stÃ¡le vÃ­ce. V tuto chvÃ­li jsem to prakticky zabalil, protoÅ¾e chyba byla tak nÄjak opravena. SystÃ©m jiÅ¾ pÅi odhlaÅ¡ovÃ¡nÃ­ nezobrazoval emailovou adresu, takÅ¾e jiÅ¾ neÅ¡lo pouÅ¾Ã­t nÄco jako:\n\n```php\npreg_match('#<b>(.+)</b>#', file_get_contents(\"http://www.m-letter.eu/odh.html?c=$i&s=53&q=51\"), $match);\n```\n\nNa necelÃ½ mÄsÃ­c jsem to pustil z hlavy aÅ¾ vÄera jsem si na tento web opÄt vzpomnÄl. TakÃ© jsem byl jiÅ¾ na jinÃ© IP adrese coÅ¾ se mi stÃ¡vÃ¡ celkem Äasto, takÅ¾e jsem opÄt vyzkouÅ¡el to co pÅed mÄsÃ­cem a svÄte div se, bezpeÄnostÃ­ chyba opÄt funguje. To mÄ rozproudilo jeÅ¡tÄ vÃ­c, takÅ¾e jsem opÄt usedl k editoru a zaÄal jsem psÃ¡t program, abych si ovÄÅil, Å¾e jsem nekecal:\n\n```php\n<?php\ntry {\n    $db = new PDO('mysql:dbname=emails;host=127.0.0.1', 'root', '');\n    $stmt = $db->prepare(\"INSERT INTO emails (url_id, email) VALUES (:url_id, :email)\n\t\t\t\t\t\t\tON DUPLICATE KEY UPDATE url_id= :url_id, email= :email\");\n\t$stmt->bindParam(':url_id', $url_id);\n\t$stmt->bindParam(':email', $email);\n\n\t//1300486 - 2197943\n\tfor ($i=2197943; $i > 1300486; $i--) {\n\t\tpreg_match('#<b>(.+)</b>#', file_get_contents(\"http://www.m-letter.eu/odh.html?c=$i&s=53&q=51\"), $match);\n\t\tif (preg_match(\"#@#\", $match[1])) {\n\t\t\t$url_id = $i;\n\t\t    $email = $match[1];\n\t\t    echo $i . ': ' . $email . \"\n\";\n\t\t\t$stmt->execute();\n\t\t}\n\t}\n\n} catch (PDOException $e) {\n    echo 'Connection failed: ' . $e->getMessage();\n}\n```\n\nNejsem Å¾Ã¡dnÃ½ extra programÃ¡tor, ale na takovou vÄc ani bÃ½t nemusÃ­m. Je asi zÅejmÃ©, Å¾e by tento program trval pomÄrnÄ dlouhou dobu. NemÃ¡ vÅ¡ak smysl ÅeÅ¡it nÄjakÃ© paralelnÃ­ zpracovÃ¡nÃ­, kdyÅ¾ se o to server pÅi vhodnÄ zvolenÃ©m programu postarÃ¡ sÃ¡m. Napsal jsem tedy celkem tÅi velmi podobnÃ© programy. Jeden bral URL adresy od nÃ­zkÃ©ho ÄÃ­sla, druhÃ½ od vysokÃ©ho a tÅetÃ­ na obÄ strany od stÅedu ÄÃ­selnÃ©ho intervalu. PrÃ¡vÄ je 17:00, dÃ¡vÃ¡m si nÄco k jÃ­dlu a vyrÃ¡Å¾Ã­m do mÄsta na hokej...\n\n# Jak to bylo dÃ¡l?\n\nPo tom co hokej nedopadl moc dobÅe, strÃ¡vil jsem nÄjakÃ½ Äas u piva a vrÃ¡til jsem se domÅ¯. Bylo pozdÄ a program poÅÃ¡d bÄÅ¾el. Å el jsem spÃ¡t a rÃ¡no do Å¡koly. Program stÃ¡le bÄÅ¾el. V tuto chvÃ­li jiÅ¾ 16 hodin. Odhadem aÅ¾ nÄkdy po 20ti hodinÃ¡ch dolovÃ¡nÃ­ emailovÃ½ch adres z tohoto serveru jsem opÄt dostal IP ban. V tu chvÃ­li jsem mÄl vÅ¡ak zÃ­skÃ¡no vÃ­ce neÅ¾ Ätvrt milionu unikÃ¡tnÃ­ch emailovÃ½ch adres. Ono to funguje! **Zde bych mÄl ÅÃ­ct, Å¾e jsem tyto emailovÃ© adresy nedoloval kvÅ¯li nÄjakÃ©mu zneuÅ¾itÃ­, maximÃ¡lnÄ z nich udÄlÃ¡m nÄjakou statistiku**... (-: ChtÄl jsem takÃ© napsat na email kterÃ½ majÃ­ vystavenÃ½ na webu, to bohuÅ¾el nefungovalo, protoÅ¾e tento email byl pravdÄpodobnÄ zruÅ¡en.\n\nV tuto chvÃ­li adresy stÃ¡le zpracovÃ¡vÃ¡m, protoÅ¾e celÃ½ systÃ©m psal nÄkdo moc \"Å¡ikovnÃ½\" a tak obÄas systÃ©m vrÃ¡til mÃ­sto emailu *Invalid key!* a jindy zase mix nÃ¡hodnÃ½ch speciÃ¡lnÃ­ch znakÅ¯ s ÄÃ­mÅ¾ jsem nepoÄÃ­tal. TakÃ© jÃ¡ jsem byl Å¡ikovnÃ½, takÅ¾e jsem sice v programu poÄÃ­tal s unique klÃ­Äem, ale v DB jsem ho neudÄlal a v reklamnÃ­m systÃ©mu je jich cca 10% duplicitnÃ­ch.\n\nÅ½Ã¡dÃ¡m tedy o pomoc. VÃ­te komu patÅÃ­ emailovÃ¡ adresa `b2bdm@email.cz`? Komu patÅÃ­ `m-letter.eu`? Kdo zneuÅ¾Ã­vÃ¡ tak obrovskÃ© mnoÅ¾stvÃ­ emailovÃ½ch adres? A kde je vÅ¯bec bere? SkuteÄnÄ mÄ to zajÃ­mÃ¡, protoÅ¾e takto je to tÄÅ¾ko pÅedstavitelnÃ©, ale nÄkolik set tisÃ­c adres je skuteÄnÄ obrovskÃ© mnoÅ¾stvÃ­ a jÃ¡ stÃ¡le nevÃ­m, kde jsem se tam vzal...","frontmatter":"id: 52dfa065-130b-4c37-81aa-289bd6ceee9e\ntimestamp: 1392936502000\ntitle: Kde se berou spamy?\nslug: kde-se-berou-spamy"},{"attributes":{"id":"f920c5cc-780f-4fee-b9a6-88d39d4cd2ac","timestamp":1391460655000,"title":"UdrÅ¾ujete dokumentaci stÃ¡le aktuÃ¡lnÃ­?","slug":"udrzujete-dokumentaci-stale-aktualni"},"body":"JiÅ¾ dlouho si v hlavÄ pohrÃ¡vÃ¡m s jednou myÅ¡lenkou, kterou stÃ¡le nemohu dovÃ©st do zdÃ¡rnÃ©ho konce. JiÅ¾ na samÃ©m zaÄÃ¡tku jsem jiÅ¾ vÅ¡ak vÄdÄl, Å¾e se zajistÃ© nezalÃ­bÃ­ velkÃ© skupinÄ programÃ¡torÅ¯. PÅesto si myslÃ­m, Å¾e mÃ¡ nÄco do sebe. Jen jsem ji jeÅ¡tÄ nedomyslel tak, aby jsem s nÃ­m byl spokojen. TÅeba bude mÃ­t nÄkdo nÄjakÃ½ geniÃ¡lnÃ­ nÃ¡pad.\n\n# Na zaÄÃ¡tku byl problÃ©m\n\nA kaÅ¾dÃ½ problÃ©m by se mÄl ÅeÅ¡it. MluvÃ­m teÄ o jednom konkrÃ©tnÃ­m. *Jak udrÅ¾et dokumentaci projektu aktuÃ¡lnÃ­?* To je problÃ©m, kterÃ½ nÄkterÃ© projekty dokÃ¡Å¾Ã­ bez vÄtÅ¡Ã­ch problÃ©mÅ¯. Obdivuji ÄlovÄka, kterÃ½ napÃ­Å¡e kus kÃ³du a k nÄmu napÃ­Å¡e pÅehlednou a uÅ¾iteÄnou dokumentaci. JeÅ¡tÄ vÃ­ce vÅ¡ak obdivuji toho, kdo aktualizuje kus kÃ³du a opÄt se pustÃ­ na pÅepisovÃ¡nÃ­ dokumentace. V praxi je toto vÅ¡ak bolÃ­stka, kterÃ¡ trÃ¡pÃ­ vÄtÅ¡inu projektÅ¯, kterÃ© pouÅ¾Ã­vÃ¡ menÅ¡Ã­ neÅ¾ obrovskÃ© mnoÅ¾stvÃ­...\n\nMyslÃ­m si, Å¾e tento postup je ÄÃ¡steÄnÄ zcestnÃ½. NenÃ­ problÃ©m napsat dokumentaci, ale problÃ©m je se pak vracet k napsanÃ½m textÅ¯m a ÄÃ­st je znova a znova a stÃ¡le je upravovat. MÃ¡ tento problÃ©m vÅ¯bec nÄjakÃ© ÅeÅ¡enÃ­? MoÅ¾nÃ¡ ano. Pokud zÅ¯stanu u myÅ¡lenky, Å¾e jednou napsat dokumentace a dost, mÅ¯Å¾e se leckomu zdÃ¡t, Å¾e pÅi tomto postupu nenÃ­ moÅ¾nÃ© dokumentaci aktualizovat. Definjme tedy alespoÅ rÃ¡mcovÄ tyto pojmy. Pod dokumentacÃ­ si pÅedstavuji webovou strÃ¡nku s pÅÃ­padnou obsahovou strukturou, kterÃ¡ obsahuje jak veÅ¡kerÃ© nauÄnÃ© texty, tak ukÃ¡zky kÃ³dÅ¯. PraktickÃ© ukÃ¡zky. Tak jak to ve skuteÄnosti funguje.\n\nBÄÅ¾nÃ© zadÃ¡nÃ­ dokumentace, Å¾e? Nikde jsem vÅ¡ak nenapsal, Å¾e tato dokumentace musÃ­ obsahovat pÅÃ­mo napsanÃ© povÃ­dÃ¡nÃ­. MusÃ­ tento text ve vÃ½sledku obsahovat, ale nemusÃ­ bÃ½t souÄÃ¡stÃ­!\n\n# Co prosÃ­m?\n\nMyslÃ­m to pÅesnÄ tak jak jsem napsal. Dokumentace musÃ­ na vÃ½stupu obsahovat veÅ¡kerÃ© texty a prostÄ vÅ¡echno, ale nemusÃ­ je pÅi tvorbÄ obsahovat. To znÃ­ moÅ¾nÃ¡ troÅ¡ku divnÄ. NenÃ­ ta vÄta v rozporu sama se sebou? Ne nutnÄ. Dokumentaci bych si opravdu pÅedstavoval jako soubor pravidel obsahujÃ­cÃ­ nadpis, nÄkolik programovÃ½ch direktiv a to by bylo v podstatÄ vÅ¡echno. Mohlo by to vypadat napÅÃ­klad takto pro nÄjakÃ½ tutoriÃ¡l:\n\n```\nToto je nadpis strÃ¡nky v dokumentaci\n\nindex.php\nbootstrap.php\nHomepagePresenter.php:renderDefault\n```\n\nSchvÃ¡lnÄ jsem zvolil vÅ¡em tolik znÃ¡mÃ½ sandbox z Nette Frameworku. V souboru bych tedy jen definoval jen (omÃ¡Äku okolo), nadpis, soubory odkud se mÃ¡ dokumentace generovat, popÅ. nÄjakÃ½ vÃ½bÄr. Zde je nutnÃ© ÅÃ­ct, Å¾e by byl projekt po programovÃ© strÃ¡nce ponÄkud zvlÃ¡Å¡tnÃ­ a nejsem si jist, jestli je to ÃºplnÄ OK. usel by totiÅ¾ obsahovat onu dokumentaci viz napÅ. *index.php*:\n\n```php\n<?php\n\n/**\n ** Zde je umÃ­stnÄna dokumentace.\n ** Obsahuje kompletnÃ­ pouÄnÃ½ text, kterÃ½ se pak vyfiltruje do dokumentace vÄetnÄ\n ** ÅÃ¡dkÅ¯, popÅ. metod ke kterÃ¡m se vztahuje. Pro lepÅ¡Ã­ pouÅ¾itÃ­ by bylo potÅeba\n ** definovat nÄkolik zÅejmÄ anotacÃ­ jako napÅ:\n **\n ** @doc-lines 12-14\n ** @doc-highlight 14\n **/\n$container = require __DIR__ . '/../app/bootstrap.php'; ///>label\n\n$container->application->run();\n```\n\nTakovÃ½to soubor je pak jednoduchÃ© vzÃ­t, rozebrat, naservÃ­rovat text, aplikovat funkci entit a vykreslit i kÃ³d ke kterÃ©mu se tento komentÃ¡Å vztahuje. MoÅ¾nÃ¡ by Å¡lo vytvoÅit i nÄjakÃ¡ nÃ¡vÄÅ¡tÃ­ pro odkazovÃ¡nÃ­ se do kÃ³du, protoÅ¾e ÄÃ­slo ÅÃ¡dky nenÃ­ ÃºplnÄ nejvhodnÄjÅ¡Ã­ (<code>///>label</code>).\n\n# Pro et Contra\n\nJednoznaÄnÄ by tento postup vedl k tomu, aby programÃ¡tor kromÄ psanÃ­ kÃ³du udrÅ¾oval i komentÃ¡Å, kterÃ½ by byl bÄÅ¾nÄ velmi blÃ­zko. Jednalo by se tak vlastnÄ o jednu prÃ¡ci. NetÅeba otevÃ­rat celou dokumentaci, staÄÃ­ zmÄnit pouze malou ÄÃ¡st, kterÃ¡ se s pushnutÃ­m zobrazÃ­ i v dokumentaci. Na druhou stranu, nedovedu si tento postup pÅedstavit v kombinaci s klasickÃ½m PHPDOC. NenapadÃ¡ mÄ jinÃ© ÅeÅ¡enÃ­, neÅ¾ udrÅ¾ovat klasickÃ½ projekt a vedle projekt, kterÃ½ by slouÅ¾il pouze pro dokumentaci. NapÅÃ­klad onen sandbox z NetteFW. PÅi takovÃ©m postupu mi to vÅ¡ak dÃ¡vÃ¡ docela dobrÃ½ smysl. Dokumentace by byla doslova stejnÄ aktuÃ¡lnÃ­ jako zdrojovÃ© kÃ³dy a to vÄetnÄ ukÃ¡zek! Co je u takovÃ½ch projektÅ¯ dÅ¯leÅ¾itÄjÅ¡Ã­?\n\nMimochodem. PHP k tomuto mÃ¡ velmi blÃ­zko. MinimÃ¡lnÄ podle jejich dokumentaÄnÃ­ch \"slohokomentÃ¡ÅÅ¯\". S tÃ­mto problÃ©mem takÃ© lehce souvisÃ­ verzovÃ¡nÃ­ projektÅ¯ o kterÃ©m bych se chtÄl rozepsat jindy.\n\nTeÄ vÅ¡ak zpÄt k myÅ¡lence. Jak moc je to hloupÃ½ nÃ¡pad? Co je jeho pÅekÃ¡Å¾kou? ProÄ by ho neÅ¡lo prakticky pouÅ¾Ã­t?","frontmatter":"id: f920c5cc-780f-4fee-b9a6-88d39d4cd2ac\ntimestamp: 1391460655000\ntitle: UdrÅ¾ujete dokumentaci stÃ¡le aktuÃ¡lnÃ­?\nslug: udrzujete-dokumentaci-stale-aktualni"},{"attributes":{"id":"bd6cef8f-9b0a-48ff-a700-2aa32d89a32b","timestamp":1391334426000,"title":"PouÅ¾itÃ­ Texy s FSHL","slug":"pouziti-texy-s-fshl"},"body":"NÄkdy (hodnÄ dÃ¡vno) jsem kdesi naÅ¡el pomÄrnÄ hezkÃ½ a jednoduchÃ½ postup jak implementovat [Texy .{target:_blank}](http://texy.info/) s pouÅ¾itÃ­m [FSHL .{target:_blank}](http://fshl.kukulich.cz/) na webu. RÃ¡d bych se zde podÄlil o postup, kterÃ½ pouÅ¾Ã­vÃ¡m jiÅ¾ na ÅadÄ projektÅ¯, kterÃ© potÅebujÃ­ zvÃ½razÅovÃ¡nÃ­ syntaxe.\n\n# PouÅ¾itÃ­ samotnÃ©ho Texy\n\nBÄÅ¾nÄ by se Texy zaregistrovalo do Å¡ablony jako helper:\n\n```php\n/**\n * @param null $class\n * @return Nette\\Templating\\ITemplate\n */\nprotected function createTemplate($class = NULL) {\n\t$template = parent::createTemplate($class);\n\t$texy = new \\Texy();\n\t$template->registerHelper('texy', callback($texy, 'process'));\n\treturn $template;\n}\n```\n\nTento helper lze i nadÃ¡le pouÅ¾Ã­vat. HodÄ se napÅÃ­klad pokud je potÅeba Texy prvky naopak escapovat:\n\n```\n{$post->body|texy|striptags}\n```\n\n# PouÅ¾itÃ­ Texy s FSHL\n\nSamotnÃ© texy je sice geniÃ¡lnÃ­ nÃ¡stroj. Pro samotnÃ© zpracovÃ¡nÃ­ se zvÃ½raznÄnÃ­m se vÅ¡ak hodÃ­ funkcionalitu Texy rozÅ¡Ã­Åit, jelikoÅ¾ je potÅeba zpracovat vstupujÃ­cÃ­ text a ty sprÃ¡vnÃ¡ mÃ­sta prohnat takÃ© tÃ­m sprÃ¡vnÃ½m lexxerem ve FSHL. K tomu dobÅe poslouÅ¾Ã­ nÃ¡sledujÃ­cÃ­ tÅÃ­da, kterÃ¡ dÄdÃ­ prÃ¡vÄ od Texy:\n\n```php\n<?php\n\nclass fshlTexy extends Texy {\n\n\tpublic function blockHandler($invocation, $blocktype, $content, $lang, $modifier) {\n\t\tif ($blocktype !== 'block/code') {\n\t\t\treturn $invocation->proceed(); //vstup se nebude zpracovavat\n\t\t}\n\n\t\t$highlighter = new \\FSHL\\Highlighter(\n\t\t\tnew \\FSHL\\Output\\Html(),\n\t\t\t\\FSHL\\Highlighter::OPTION_TAB_INDENT | \\FSHL\\Highlighter::OPTION_LINE_COUNTER\n\t\t);\n\n\t\t$texy = $invocation->getTexy();\n\t\t$content = Texy::outdent($content);\n\n\t\t//Set correct lexer:\n\t\tswitch(strtoupper($lang)) {\n\t\t\tcase 'CPP': $lexer = new \\FSHL\\Lexer\\Cpp(); break;\n\t\t\tcase 'CSS': $lexer = new \\FSHL\\Lexer\\Css(); break;\n\t\t\tcase 'HTML': $lexer = new \\FSHL\\Lexer\\Html(); break;\n\t\t\tcase 'JAVA': $lexer = new \\FSHL\\Lexer\\Java(); break;\n\t\t\tcase 'JAVASCRIPT': $lexer = new \\FSHL\\Lexer\\Javascript(); break;\n\t\t\tcase 'NEON': $lexer = new \\FSHL\\Lexer\\Neon(); break;\n\t\t\tcase 'PHP': $lexer = new \\FSHL\\Lexer\\Php(); break;\n\t\t\tcase 'PYTHON': $lexer = new \\FSHL\\Lexer\\Python(); break;\n\t\t\tcase 'SQL': $lexer = new \\FSHL\\Lexer\\Sql(); break;\n\t\t\tcase 'TEX': $lexer = new \\FSHL\\Lexer\\Tex(); break; //WARNING: vlastnÃ­ vÃ½roba!\n\t\t\tcase 'TEXY': $lexer = new \\FSHL\\Lexer\\Texy(); break;\n\t\t\tdefault: $lexer = new \\FSHL\\Lexer\\Minimal();\n\t\t}\n\n\t\t$content = $highlighter->highlight($content, $lexer);\n\t\t$content = $texy->protect($content, Texy::CONTENT_BLOCK);\n\n\t\t$elPre = TexyHtml::el('pre');\n\t\tif ($modifier) {\n\t\t\t$modifier->decorate($texy, $elPre);\n\t\t}\n\t\t$elPre->attrs['class'] = strtolower($lang);\n\n\t\t$elCode = $elPre->create('code', $content);\n\n\t\treturn $elPre;\n\t}\n\n}\n```\n\nTato tÅÃ­da pÅi sprÃ¡vnÃ©m pouÅ¾itÃ­ zajistÃ­, Å¾e se pouÅ¾ije ten sprÃ¡vnÃ½ lexer a jeÅ¡tÄ na Ãºrovni PHP zajistÃ­ zmÄnu vÃ½stupu. KonkrÃ©tnÄ obalÃ­ urÄitÃ¡ klÃ­ÄovÃ¡ slova (v zÃ¡vislosti na kontextu) tagem <code>&lt;span&gt;</code> se zvlÃ¡Å¡tnÃ­ tÅÃ­dou. Toho se nÃ¡slednÄ lze chytit v CSS a HTML vÃ½stup obarvit. PouÅ¾itÃ­ tÃ©to tÅÃ­dy napÅÃ­klad v metodÄ <code>render*()</code>:\n\n```php\n$texy = new \\fshlTexy();\n//registrace handleru z novÃ© tÅÃ­dy:\n$texy->addHandler('block', array($texy, 'blockHandler'));\n//dÃ¡le stejnÄ jako klasickÃ© pouÅ¾itÃ­ Texy:\n$texy->tabWidth = 4;\n$texy->headingModule->top = 3; //start at H3\n$this->template->body = $texy->process($post->body);\n```\n\nVÃ½stup lze pak v Latte lehce podchytit a zobrazit:\n\n```\n{$body|noescape}\n```\n\n# Barvy, barvy, barviÄky\n\nProgramovÄ je sice tÄlo dokumentu vypsÃ¡no s tagy <code>&lt;span&gt;</code> s pÅÃ­sluÅ¡nou tÅÃ­dou. To se vÅ¡ak nijak viditelnÄ neprojevÃ­. Celou krÃ¡su udÄlÃ¡ teprve CSS. Lze pouÅ¾Ã­t vÃ½chozÃ­ hodoty FSHL a vloÅ¾it je do vlastnÃ­ho souboru stylÅ¯:\n\n```css\n/* Common */\n.xlang { color: #ff0000; font-weight: bold; }\n.line { color: #888888; background-color: #ffffff; }\n\n/* CSS */\n.css-at-rule { color: #004a80; font-weight: bold; }\n.css-tag { color: #004a80; }\n.css-id { color: #7da7d9; font-weight: bold; }\n.css-class { color: #004a80; }\n.css-pseudo { color: #004a80; }\n.css-property { color: #003663; font-weight: bold; }\n.css-value { color: #448ccb; }\n.css-func { color: #448ccb; font-weight: bold; }\n.css-color { color: #0076a3; }\n.css-comment { background-color: #e5f8ff; color: #999999; }\n\n/* CPP */\n.cpp-keywords1 {color: #0000ff; font-weight: bold;}\n.cpp-num {color: #ff0000;}\n.cpp-quote {color: #a52a2a; font-weight: bold;}\n.cpp-comment {color: #00ff00;}\n.cpp-preproc {color: #c0c0c0;}\n\n/* HTML */\n.html-tag {color: #598527; font-weight: bold;}\n.html-tagin {color: #89a315}\n.html-quote {color: #598527; font-weight: bold;}\n.html-comment {color: #999999; background-color: #f1fae4;}\n.html-entity {color: #89a315;}\n\n/* Java */\n.java-keywords1 {color: #0000ff; font-weight: bold;}\n.java-num {color: #ff0000;}\n.java-quote {color: #a52a2a; font-weight: bold;}\n.java-comment {color: #009900;}\n.java-preproc {color: #c0c0c0;}\n\n/* Javascript */\n.js-out {color: #898993;}\n.js-keywords1 {color: #575757; font-weight: bold;}\n.js-num {color: #575757;}\n.js-quote {color: #575757; font-weight: bold;}\n.js-comment {color: #898993; background-color: #f4f4f4;}\n\n/* Neon */\n.neon-section {color: #598527;}\n.neon-sep {color: #ff0000;}\n.neon-key {color: #0000ff;}\n.neon-comment {color: #999999;}\n.neon-value {color: #000000;}\n.neon-quote {color: #884433;}\n.neon-num {color: #448ccb;}\n.neon-var {color: #ffaa00;}\n.neon-ref {color: #884433;}\n\n/* PHP */\n.php-keyword1 {color: #dd2244; font-weight: bold;}\n.php-keyword2 {color: #dd2244;}\n.php-var {color: #ffaa00; font-weight: bold;}\n.php-num {color: #ff0000;}\n.php-quote {color: #884433; font-weight: bold;}\n.php-comment {color: #999999; background-color: #ffffee;}\n\n/* Python */\n.py-keyword1 {color: #0033cc; font-weight: bold;}\n.py-keyword2 {color: #ce3333; font-weight: bold;}\n.py-keyword3 {color: #660066; font-weight: bold;}\n.py-num {color: #993300;}\n.py-docstring {color: #e86a18;}\n.py-quote {color: #878787; font-weight: bold;}\n.py-comment {color: #009900; font-style: italic;}\n\n/* SQL */\n.sql-keyword1 {color: #dd0000; font-weight: bold;}\n.sql-keyword2 {color: #dd2222;}\n.sql-keyword3 {color: #0000ff; font-weight: bold;}\n.sql-value {color: #5674b9;}\n.sql-comment {color: #ffaa00;}\n.sql-num {color: #ff0000;}\n.sql-option {color: #004a80; font-weight: bold;}\n\n/* Tex */\n.tex-func {color: #ffaa00; font-weight: bold;}\n.tex-comment {color: #999999; background-color: #ffffee;}\n.tex-attr1 {color: #dd2222;}\n.tex-attr2 {color: #0000ff; font-weight: bold;}\n.tex-math {color: #00AA00; font-weight: bold;}\n\n/* Texy */\n.texy-hlead {color: #4444bb; font-weight: bold;}\n.texy-hbody {background-color: #eeeeff; color: #4444bb;}\n.texy-hr {color: #bb4444;}\n.texy-code {color: #666666;}\n.texy-html {color: #66aa66;}\n.texy-text {color: #6666aa;}\n.texy-err {background-color: #ff0000; color: #ffffff;}\n```\n\nCelÃ¡ krÃ¡sa tohoto ÅeÅ¡enÃ­ spoÄÃ­vÃ¡ v tom, Å¾e nepouÅ¾Ã­vÃ¡m Å¾Ã¡dnÃ© javascriptovÃ© knihovny, ale vÅ¡e se provede pÄknÄ na Ãºrovni PHP a bude to tedy fungovat vÅ¾dy, stejnÄ tak jako Texy... (-:","frontmatter":"id: bd6cef8f-9b0a-48ff-a700-2aa32d89a32b\ntimestamp: 1391334426000\ntitle: PouÅ¾itÃ­ Texy s FSHL\nslug: pouziti-texy-s-fshl"},{"attributes":{"id":"2abb97d9-9844-4467-b7cb-56844462425b","timestamp":1391288978000,"title":"Vlna na webu","slug":"vlna-na-webu"},"body":"Vlna je program [Petra OlÅ¡Ã¡ka .{target:_blank}](http://ftp.linux.cz/pub/tex/local/cstug/olsak/vlna/), kterÃ½ slouÅ¾Ã­ k umÃ­stÄnÃ­ nezalomitelnÃ© mÃ­sto na mÃ­sto v textu, kde by nemÄlo dojÃ­t k samovolnÃ©mu zalomenÃ­ ÅÃ¡dku. Tento program slouÅ¾Ã­ k dodateÄnÃ© ÃºpravÄ textÅ¯ napsanÃ½ch v LaTeXu. V tomto prostÅedÃ­ se nezalomitelnÃ¡ mezera nahrazuje znakem vlnovkou - tildou (~). U webovÃ©ho vÃ½stupu se pouÅ¾Ã­vÃ¡ zÃ¡stupnÃ¡ entita <code>&amp;nbsp;</code>.\n\n# Kde by mÄla bÃ½t nedÄlitelnÃ¡ mezera\n\nV zÃ¡kladu program Vlna umÃ­stÃ­ tildu za znaky <code>KkSsVvZzOoUuAI</code>. VÃ­ce toho pokud vÃ­m nedÄlÃ¡. Podle Ãstavu pro jazyk ÄeskÃ½ AV ÄR by vÅ¡ak toto pravidlo mÄlo platit mimo jinÃ© pro znaky <code>KkSsVvZzAaIiOoUu</code>. NeuvaÅ¾uji dalÅ¡Ã­ pravidla, kterÃ¡ urÄujÃ­ dalÅ¡Ã­ nevhodnÃ© vÃ½razy na konci ÅÃ¡dku. Mezi tyto pravidla patÅÃ­ napÅÃ­klad mezery uvnitÅ ÄÃ­slic, mezery mezi ÄÃ­slicÃ­ a znaÄkou, atd. NÄkterÃ¡ pravidla jsou totiÅ¾ natolik specifickÃ¡, Å¾e by je bylo nÃ¡roÄnÃ© (nebo nepraktickÃ©) podchytit programovÄ.\n\n# Implementace\n\nO samotnÃ© nahrazovÃ¡nÃ­ se starÃ¡ nÃ¡sledujÃ­cÃ­ regulÃ¡rnÃ­ vÃ½raz:\n```php\npreg_replace('<([^a-zA-Z0-9])([ksvzaiou])\\s([a-zA-Z0-9]{1,})>i', \"$1$2\\xc2\\xa0$3\", $string); //&nbsp; === \\xc2\\xa0\n```\nTento vÃ½raz ÅÃ­kÃ¡, Å¾e nestojÃ­-li bezprostÅednÄ pÅed sadou znakÅ¯ <code>KkSsVvZzAaIiOoUu</code> jinÃ½ alfanumerickÃ½ znak a stojÃ­-li za touto sadou jakÃ½koliv alfanumerickÃ½ znak oddÄlenÃ½ bÃ­lÃ½m znakem bude tento znak nahrazen entitou <code>&amp;nbsp;</code>. V konkrÃ©tnÃ­ implementaci lze zaregistrovat Vlnu jako helper pro Latte Å¡ablony napÅÃ­klad takto (obsahuje i registraci Texy helperu):\n\n```php\n/**\n * @param null $class\n * @return Nette\\Templating\\ITemplate\n */\nprotected function createTemplate($class = NULL) {\n\t$template = parent::createTemplate($class);\n\t$texy = new \\Texy();\n\t$template->registerHelper('texy', callback($texy, 'process'));\n\t$template->registerHelper('vlna', function ($string) {\n\t\t$string = preg_replace('<([^a-zA-Z0-9])([ksvzaiou])\\s([a-zA-Z0-9]{1,})>i', \"$1$2\\xc2\\xa0$3\", $string); //&nbsp; === \\xc2\\xa0\n\t\treturn $string;\n\t});\n\treturn $template;\n}\n```\n\nVlna se pak v Latte Å¡ablonÃ¡ch pouÅ¾Ã­vÃ¡ jako jakÃ½koliv jinÃ½ helper:\n\n```\n{$post->title|vlna}\n```\n\nJeÅ¡tÄ by moÅ¾nÃ¡ stÃ¡lo za to vrÃ¡tit se k tomu, jakÃ© problÃ©my by zpÅ¯sobovala implementace i dalÅ¡Ã­ch pravidel a jak by to bylo nÃ¡roÄnÃ©. JeÅ¡tÄ nad tÃ­m budu pÅemÃ½Å¡let, kaÅ¾dopÃ¡dnÄ jiÅ¾ teÄ mÄ napadajÃ­ urÄitÃ© problÃ©my. NapÅÃ­klad u ÄÃ­sel. Jak pÅesnÄ identifikovat, kdy se mÃ¡ pouÅ¾Ã­t nedÄlitelnÃ¡ mezera a kdy ne? MoÅ¾nÃ¡ je toto prÃ¡vÄ ten dÅ¯vod, proÄ takovÃ© rozÅ¡Ã­ÅenÃ© chovÃ¡nÃ­ program Vlna nepodporuje...","frontmatter":"id: 2abb97d9-9844-4467-b7cb-56844462425b\ntimestamp: 1391288978000\ntitle: Vlna na webu\nslug: vlna-na-webu"},{"attributes":{"id":"a2fb86da-448c-407d-98a7-b5a7b172042e","timestamp":1390929034000,"title":"PÅedstavenÃ­ projektu Vacuum - STATIC","slug":"predstaveni-projektu-vacuum-static"},"body":"Vzhledem k tomu, Å¾e vzrostl zÃ¡jem o Vacuum projekty, rozhodl jsem se zde uveÅejnit postup jak pracovat s projektem **Vacuum - STATIC** (https://bitbucket.org/mrtnzlml/vacuum-static). VÄÅÃ­m, Å¾e je daleko lepÅ¡Ã­ projekt ukÃ¡zat a lehce popsat, neÅ¾ popsat a lehce ukÃ¡zat, jak si Nette komunita obÄas myslÃ­...\n\n# Co to vlastnÄ je\n\nVacuum - STATIC je projekt, kterÃ½ vznikl z ÃºplnÄ zÃ¡kladnÃ­ho Nette skeletonu, kterÃ½ jsem pouÅ¾Ã­val pro jednoduchÃ© statickÃ© firemnÃ­ prezentace jako je napÅÃ­klad http://www.businessservice.cz/. Postupem Äasu jsem dodÃ¡val vylepÅ¡enÃ­ a kdyÅ¾ uÅ¾ tento projekt dosÃ¡hl svÃ©ho maxima, rozhodl jsem se do nÄj napsat jednoduchou administraci. V souÄasnÃ© dobÄ tedy Vacuum - STATIC vlastnÄ vÅ¯bec nenÃ­ statickÃ¡ prezentace. Obsahuje vestavenou SQLite databÃ¡zi, dÃ­ky kterÃ© nenÃ­ potÅeba nÄjakÃ© MySQL databÃ¡ze. Web prostÄ funguje zdÃ¡nlivÄ bez databÃ¡ze. Toto je velmi zÃ¡sadnÃ­. Vacuum - STATIC pravdÄpodobnÄ nikdy nebude mÃ­t externÃ­ databÃ¡zi, takÅ¾e se bude stÃ¡le tvÃ¡Åit jako jednoduchÃ¡ webovÃ¡ prezentace, kterÃ¡ mÃ¡ vÅ¡ak navÃ­c jednoduchou administraci.\n\n# StaÅ¾enÃ­, instalace, spuÅ¡tÄnÃ­\n\nCelÃ½ projekt se dÃ¡ stÃ¡hnout rÅ¯znÄ, asi nejjednoduÅ¡Å¡Ã­ je vyuÅ¾Ã­t funkcionalit GITu:\n\n```\n>> git clone https://mrtnzlml@bitbucket.org/mrtnzlml/vacuum-static.git folder\nCloning into 'folder'...\nremote: Counting objects: 433, done.\nremote: Compressing objects: 100% (401/401), done.\nremote: Total 433 (delta 201), reused 0 (delta 0)\nReceiving objects:  92% (399/433), 636.00 KiB | 192 KiB/s\nReceiving objects: 100% (433/433), 664.47 KiB | 192 KiB/s, done.\nResolving deltas: 100% (201/201), done.\n```\n\nTÃ­m vytvoÅÃ­te sloÅ¾ku `folder`, kterÃ¡ bude obsahovat aktuÃ¡lnÃ­ verzi projektu Vacuum - STATIC. Pokud v tuto chvÃ­li projekt sputÃ­te, vrÃ¡tÃ­ chybu, Å¾e nemÅ¯Å¾e najÃ­t soubor `autoload.php`. Je to proto, Å¾e projekt jeÅ¡tÄ neobsahuje Å¾Ã¡dnÃ© knihovny (napÅÃ­klad Nette). Ty totiÅ¾ nemÃ¡ smysl udrÅ¾ovat v repozitÃ¡Åi. VeÅ¡kerÃ© potÅebnÃ© knihovny lze doinstalovat jednoduÅ¡e pomocÃ­ Composeru:\n\n```\n>> composer update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n  - Installing nette/tester (dev-master a60c379)\n    Cloning a60c379836617422c8df9d9846fea4efa2ca9d1d\n\n  - Installing nette/nette (dev-master a748c3d)\n    Cloning a748c3d344767ed1f0cc9ee40019f6a6f81afa97\n\n  - Installing janmarek/webloader (dev-master 3d44d30)\n    Cloning 3d44d306d59591dc94f6fdcb98f55c0990d98326\n\n  - Installing texy/texy (dev-release-2.x 79d0e15)\n    Cloning 79d0e1517363ab32edf2db8ec515e3dc84f50f0a\n\nnette/nette suggests installing ext-fileinfo (*)\njanmarek/webloader suggests installing leafo/lessphp (Lessphp is a composer for LESS written in PHP.)\nWriting lock file\nGenerating autoload files\n```\n\nV tuto chvÃ­li je projekt pÅipraven k pouÅ¾itÃ­. V nÄkterÃ½ch systÃ©mech vÅ¡ak bude potÅeba jeÅ¡tÄ nastavit prÃ¡va k zÃ¡pisu sloÅ¾kÃ¡m `temp` a `log`. Dokonce nenÃ­ potÅeba ani nÄjakÃ©ho XAMPP serveru. StaÄÃ­ v tÃ© samÃ© sloÅ¾ce vyuÅ¾Ã­t integrovanÃ©ho PHP serveru v pÅÃ­kazovÃ© ÅÃ¡dce:\n\n```\nphp -S localhost:8888 -t www\n```\n\nFunkÄnÃ­ Vacuum - STATIC pak naleznete na adrese http://localhost:8888/. TrapnÄ jednoduchÃ© a pÅekvapivÄ funkÄnÃ­. (-: Vzhledem k tomu, Å¾e jiÅ¾ vidÃ­te funkÄnÃ­ strÃ¡nku, mÅ¯Å¾ete se pÅihlÃ¡sit do administrace (link v patiÄce). PÅihlaÅ¡ovacÃ­ Ãºdaje jsou *demo*/*demo*.\n\n# Update projektu\n\nNa tomto projektu stÃ¡le pracuji a Äas od Äasu v nÄm nÄco doplnÃ­m nebo upravÃ­m. Vzhledem k tomu, Å¾e doporuÄuji pouÅ¾Ã­t ke staÅ¾enÃ­ GIT, je update projektu velmi jednoduchÃ½. StejnÄ jako jsem nedÃ¡vno zapomnÄl pÅidat nahrÃ¡t dva soubory:\n\n```\n>> git pull\nUpdating ead4a56..2439d5f\nFast-forward\n www/js/codemirror.js | 5516 ++++++++++++++++++++++++++++++++++++++++++++++++++\n www/js/xml.js        |  338 ++++\n 2 files changed, 5854 insertions(+)\n create mode 100644 www/js/codemirror.js\n create mode 100644 www/js/xml.js\n```\n\nTo je asi tak vÅ¡e co se k tomu dÃ¡ teÄ napsat. Nic na tom nenÃ­, jen je tÅeba vÄdÄt jak na to. PÅeji hodnÄ ÃºspÄchÅ¯ pÅi pouÅ¾Ã­vÃ¡nÃ­ tohoto projektu aÅ¥ uÅ¾ je to ke studijnÃ­m ÃºÄelÅ¯m, nebo k reÃ¡lnÃ© webovÃ© prezentaci. ZpÄtnou vazbu samozÅejmÄ rÃ¡d uvÃ­tÃ¡m.","frontmatter":"id: a2fb86da-448c-407d-98a7-b5a7b172042e\ntimestamp: 1390929034000\ntitle: PÅedstavenÃ­ projektu Vacuum - STATIC\nslug: predstaveni-projektu-vacuum-static"},{"attributes":{"id":"b18ce753-bbfc-4de4-9c2e-3c71c379d25a","timestamp":1390822437000,"title":"StÃ¡hnÄte si zdarma 897457 emailovÃ½ch adres","slug":"stahnete-si-zdarma-897457-emailovych-adres"},"body":"V nÃ¡sledujÃ­cÃ­m ÄlÃ¡nku bych rÃ¡d nastÃ­nil problematiku newsletterÅ¯ nejen z programÃ¡torskÃ©ho hlediska <s>a takÃ© bych se rÃ¡d opÅel do bezpeÄnosti spoleÄnosti Wedos, kterÃ© mnoho lidÃ­ tolik vÄÅÃ­</s>... (-:\n\n<span style=\"color:green\">Tento projekt pravdÄpodobnÄ nemÃ¡ se spoleÄnostÃ­ Wedos nic spoleÄnÃ©ho jak jsem si zÅejmÄ mylnÄ myslel.</span>\n\n# Na zaÄÃ¡tku byl email\n\nJednoho dne mi pÅiÅ¡el email, kterÃ½ byl automaticky filtrovÃ¡n jako spam. Vzhledem k tomu, Å¾e kdyÅ¾ mÄ nÄco Å¡tve, tak to ÅeÅ¡Ã­m, spam jsem otevÅel a hledal odkaz na odhlÃ¡Å¡enÃ­. Ten byl dobÅe umÃ­stÄn, staÄilo kliknout a hotovo. KaÅ¾dÃ½ pÅece vÃ­, Å¾e to takto mÃ¡ bÃ½t. KdyÅ¾ je odhlÃ¡Å¡enÃ­ delÅ¡Ã­, neÅ¾ kliknutÃ­ na spam v email klientovi, je to problÃ©m. BohuÅ¾el tento odkaz vedlo na domÃ©nu <code>m-letter.eu</code>. MÄ samozÅejmÄ zajÃ­mÃ¡ jak jsem se dostal do takovÃ©ho spam listu a jelikoÅ¾ jsem byl odkÃ¡zÃ¡n na mÄ neznÃ¡mou domÃ©nu, byl jsem velmi rozezlen.\n\n<s>Zde je nutnÃ© ÅÃ­ct, Å¾e jsem dÅÃ­ve jednal, neÅ¾ pÃ¡tral. Nakonec se ukÃ¡zalo, Å¾e jsem byl moÅ¾nÃ¡ v tomto listu oprÃ¡vnÄnÄ, jelikoÅ¾ se jednÃ¡ o domÃ©nu, ze kterÃ© zÅejmÄ Wedos odesÃ­lÃ¡ podobnÃ© reklamnÃ­ emaily, takÅ¾e je dost pravdÄpodobnÃ©, Å¾e jsem s tÃ­m dÅÃ­ve souhlasil.</s>\n\n<span style=\"color:green\">PÅi hlubÅ¡Ã­m pÃ¡trÃ¡nÃ­ jsem zjistil, Å¾e jsem stÃ¡le nic nezjistil. ChybnÄ jsem tento problÃ©m svedl na nÄkoho jinÃ©ho, coÅ¾ mÄ odvedlo na Å¡patnou kolej. StÃ¡le tedy nevÃ­m, kde jsem se na tomto spam listu vzal a opÄt to beru osobnÄ. NenÃ­ mi to jedno...</span>\n\n# NeÅ¡tvi programÃ¡tora\n\nCelÃ½ reklamnÃ­ systÃ©m je udÄlÃ¡n dosti neÅ¡Å¥astnÄ, takÅ¾e neÅ¾ abych pÃ¡tral jak jsem se tam dostal, soustÅedil jsem se na nÄco jinÃ©ho, co pro mÄ z pohledu programÃ¡tora webovÃ½ch aplikacÃ­ bylo dost zajÃ­mavÃ©. URL adresa. CelÃ¡ adresa pro odhlÃ¡Å¡enÃ­ je v nÃ¡sledujÃ­cÃ­m formÃ¡tu:\n\n```\nhttp://www.m-letter.eu/odh.html?c=XXXXXXX&s=53&q=51\n```\n\nKde **XXXXXXX** je ÄÃ­slo zhruba od 1300486 do 2197943. To mÄ zaujalo a tak jsem toto ÄÃ­slo zaÄal mÄnit. A ukÃ¡zalo se, Å¾e jsem odhlaÅ¡oval dalÅ¡Ã­ lidi. V tÃ© dobÄ jeÅ¡tÄ tato strÃ¡nka vypsala informaci o ÃºspÄÅ¡nÃ©m odhlÃ¡Å¡enÃ­ vÄetnÄ emailu, kterÃ½ byl odhlÃ¡Å¡en. Vzhledem k tomu, Å¾e strÃ¡nka je velmi jednoduchÃ¡, lze programovÄ stejnÄ jednoduÅ¡e zÃ­skat onu emailovou adresu.\n\nJen si pÅedstavte program, kterÃ½ iteruje tuto URL adresu a jen sbÃ­rÃ¡ emaily. 897457. To je poÄet emailÅ¯ kterÃ© takto zÃ­skÃ¡te. **897457**. NavÃ­c tÃ­mto celÃ½ systÃ©m znehodnotÃ­te, protoÅ¾e vÅ¡echny odhlÃ¡sÃ­te. A pro takovÃ½ poÄet emailÅ¯ to jiÅ¾ nenÃ­ zanedbatelnÃ©.\n\n# To mÃ¡ bÃ½t jako oprava?\n\nNejde mi zrovna o to znehodnotit celÃ½ Äupr dupr systÃ©m na spamovÃ¡nÃ­, ale proÄ ne. Tato informace se pomÄrnÄ rychle rozÅ¡Ã­Åila a o pÃ¡r minut pozdÄji mi byl odepÅen pÅÃ­stup na tento server. NavÃ­c vÃ½pis byl pozmÄnÄn tak, aby jiÅ¾ neÅ¡lo stÃ¡hnout tÃ©mÄÅ 900 000 emailovÃ½ch adres. NicmÃ©nÄ celÃ½ systÃ©m zÅejmÄ stÃ¡le funguje stejnÄ, takÅ¾e mÅ¯Å¾ete jednoduÅ¡e iterovat URL adresy a tÃ­m celÃ½ systÃ©m znehodnotit:\n\n```php\n<?php\nfor ($i=2197943; $i > 1300486; $i--) {\n    file_get_contents(\"http://www.m-letter.eu/odh.html?c=$i&s=53&q=51\");\n}\n```\n\nDoporuÄuji spustit v pÅÃ­kazovÃ© ÅÃ¡dce, kde nenÃ­ nastaven pro PHP timeout. Iterace je schvÃ¡lnÄ pozpÃ¡tku, protoÅ¾e se dÃ¡ pÅedpoklÃ¡dat, Å¾e ty nejnovÄjÅ¡Ã­ zÃ¡znamy majÃ­ vÄtÅ¡Ã­ ÄÃ­slo a ty s malÃ½m ÄÃ­slem uÅ¾ dost moÅ¾nÃ¡ nebudou aktuÃ¡lnÃ­. CelÃ½ program jsem mÄl daleko sloÅ¾itÄjÅ¡Ã­, vzhledem k tomu, Å¾e jsem byl pÅipraven na stÃ¡hnutÃ­ vÅ¡ech emailÅ¯. Po zmÄnÄ vÃ½pisu jiÅ¾ vÄtÅ¡ina programu nenÃ­ potÅeba a staÄÃ­ tedy tÅi ÅÃ¡dky pro znehodnocenÃ­ celÃ©ho nezanedbatelnÄ velkÃ©ho systÃ©mu.\n\n<s>Dejme tedy nÄkomu z Wedos Äas na opravu a pak hurÃ¡ na hromadnÃ½ lynÄ.</s> <span style=\"color:green\">OpÄt stejnÃ½ problÃ©m jako pÅedtÃ­m. DoufÃ¡m, Å¾e mÃ¡m tentokrÃ¡t pravdu...</span> Sice jde jen o emailovÃ© adresy, ale vzpomeÅte si na to aÅ¾ zase budete nadÃ¡vat na spam, nebo souhlasit s tÃ­m, Å¾e vaÅ¡e emailovÃ¡ adresa nebude nikde uveÅejnÄna.","frontmatter":"id: b18ce753-bbfc-4de4-9c2e-3c71c379d25a\ntimestamp: 1390822437000\ntitle: StÃ¡hnÄte si zdarma 897457 emailovÃ½ch adres\nslug: stahnete-si-zdarma-897457-emailovych-adres"},{"attributes":{"id":"e0783b28-8a1a-400c-b91b-547b4c372fbe","timestamp":1387710504000,"title":"VeÅejnÃ¡ distribuce klÃ­ÄÅ¯","slug":"verejna-distribuce-klicu"},"body":"<blockquote>\n  InspiracÃ­ a zdrojem informacÃ­ pro tento ÄlÃ¡nek byla kniha <strong>Simona Singha</strong> - Kniha kÃ³du a Å¡ifer.\n  <small>UtajovÃ¡nÃ­ od starÃ©ho Egypta po kvantovou kryptografii</small>\n</blockquote>\n\nTÃ­mto ÄlÃ¡nkem bych rÃ¡d navÃ¡zal na ÄlÃ¡nek o asymetrickÃ©m Å¡ifrovÃ¡nÃ­ http://zlml.cz/asymetricka-sifra-s-verejnym-klicem a vyÅeÅ¡il tak nÄkolik restÅ¯. ZejmÃ©na potom onu osudnou veÅejnou distribuci klÃ­ÄÅ¯ o kterÃ© jsem sice jiÅ¾ dÅÃ­ve psal, ale ÄlÃ¡nek jiÅ¾ nenÃ­ k dispozici. Proto tento text budu brÃ¡t jako revizi pÅ¯vodnÃ­ho. TakÃ© bych na zaÄÃ¡tek chtÄl ÅÃ­ct, Å¾e tento problÃ©m je jiÅ¾ dÃ¡vno vyÅeÅ¡en a proto bude nÃ¡sledujÃ­cÃ­ text ohlÃ©dnutÃ­m za vznikem tÃ©to myÅ¡lenky s tÃ­m, Å¾e je vÅ¡ak pouÅ¾itÃ­ stÃ¡le aktuÃ¡lnÃ­ a reÃ¡lnÄ se pouÅ¾Ã­vÃ¡ (napÅ.: http://nodejs.org/api/crypto.html#crypto_class_diffiehellman).\n\n# Distribuce klÃ­ÄÅ¯? VÅ¾dyÅ¥ je to tak snadnÃ©...\n\nPokud si chtÄjÃ­ dvÄ osoby vymÄnit zaÅ¡ifrovanÃ© zprÃ¡vy, je jasnÃ©, Å¾e musejÃ­ znÃ¡t i klÃ­Äe, kterÃ© jim umoÅ¾nÃ­ tyto zprÃ¡vy deÅ¡ifrovat. JenÅ¾e jak si vymÄnit tyto klÃ­Äe? Mohou se tyto osoby nÄkdy potkat a klÃ­Ä si povÄdÄt. To vÅ¡ak nenÃ­ vÅ¾dy moÅ¾nÃ©. NavÃ­c klÃ­Äe je dobÃ© frekventovanÄ mÄnit, takÅ¾e je v dneÅ¡nÃ­ dobÄ toto ÅeÅ¡enÃ­ naprosto nesmyslnÃ©.\n\n<blockquote>\n  DÅÃ­ve, neÅ¾ dva lidÃ© mohou sdÃ­let tajemstvÃ­, musÃ­ jiÅ¾ jedno tajemstvÃ­ sdÃ­let.\n  <small>DÅÃ­ve neÅ¾ dva lidÃ© mohou sdÃ­let Å¡ifrovanou zprÃ¡vu, musÃ­ jiÅ¾ sdÃ­let klÃ­Ä.</small>\n</blockquote>\n\nAÄkoliv je osobnÃ­ vÃ½mÄna bezpeÄnÃ¡, jednÃ¡ se tedy o metodu nereÃ¡lnou a je tÅeba navrhnout jinÃ© postupy. Co tÅeba najmou kurÃ½ra? Je to sice mÃ©nÄ bezpeÄnÃ©, ale eliminujÃ­ se nÄkterÃ© pÅedchozÃ­ problÃ©my. BohuÅ¾el kurÃ½r je aÅ¾ pÅÃ­liÅ¡ nebezpeÄnÃ½ zpÅ¯sob, protoÅ¾e pak lze klÃ­Ä rovnou nÄjakÃ½m kanÃ¡lem poslat a dostÃ¡vÃ¡me se opÄt na zaÄÃ¡tek. Je tedy vÅ¯bec moÅ¾nÃ© si vymÄnit klÃ­Ä bez nutnosti potkat se? Je tedy vÅ¯bec nutnÃ© si klÃ­Ä vymÄnit?\n\n# MoÅ¾nÃ¡ to jde i jinak\n\nExistuje skvÄlÃ¡ hÃ¡danka, kterÃ¡ na prvnÃ­ pohled danÃ½ problÃ©m ÅeÅ¡Ã­. PÅedstavte si poÅ¡tovnÃ­ sluÅ¾bu, kterÃ¡ vÅ¡ak vÅ¡echny zÃ¡silky otevÃ­rÃ¡ a Äte si je. NicmÃ©nÄ Alice potÅebuje poslat tajnÃ½ balÃ­k Bobovi. Lze vyuÅ¾Ã­t tuto poÅ¡tu tak, aniÅ¾ by balÃ­k otevÅela?\n\nPÅistupÃ­m rovnou k ÅeÅ¡enÃ­, kterÃ© je opravdu jednoduchÃ©. Alice poÅ¡le balÃ­k (schrÃ¡nku), kterÃ½ opatÅÃ­ vlastnÃ­m zÃ¡mkem a klÃ­Ä od tohoto zÃ¡mku si ponechÃ¡. V tom pÅÃ­padÄ nenÃ­ poÅ¡ta schopna balÃ­k otevÅÃ­t. BohuÅ¾el ani Bob balÃ­k neumÃ­ otevÅÃ­t, protoÅ¾e nemÃ¡ k dispozici sprÃ¡vnÃ½ klÃ­Ä. Proto Bob vezme vlastnÃ­ zÃ¡mek a schrÃ¡nku zamkne jeÅ¡tÄ vlastnÃ­m zÃ¡mkem. KlÃ­Ä si opÄt ponechÃ¡. To mÅ¯Å¾e vyznÃ­t zvlÃ¡Å¡tnÄ, ale hned to zaÄne bÃ½t jasnÃ©. Bob balÃ­k opÄt odeÅ¡le, Alice sundÃ¡ vlastnÃ­ zÃ¡mek (protoÅ¾e od nÄj mÃ¡ klÃ­Ä) a balÃ­k poÅ¡le opÄt Bobovi. NynÃ­ je na balÃ­ku pouze Bobovo zÃ¡mek a ten ho mÅ¯Å¾e jednoduÅ¡e odemknout. ZdÃ¡ se tedy, Å¾e lze cokoliv poslat zabezpeÄenÄ a vÃ½mÄna klÃ­ÄÅ¯ nenÃ­ potÅeba! Toto je nesmÃ­rnÄ dÅ¯leÅ¾itÃ¡ myÅ¡lenka.\n\nMÃ¡ to vÅ¡ak hÃ¡Äek. AÄkoliv se zdÃ¡ bÃ½t pÅedchozÃ­ problÃ©m naprosto zÅejmÃ½ a funkÄnÃ­, po pÅevedenÃ­ do svÄta kÃ³dÅ¯ a Å¡ifer, celÃ¡ myÅ¡lenka padÃ¡. DÅ¯vod je jednoduchÃ½. Bylo velmi snadnÃ© na schrÃ¡nku umÃ­stit zÃ¡mek **A**, potÃ© zÃ¡mek **B**, potÃ© odstranit zÃ¡mek **A** a nakonec odstranit zÃ¡mek **B**. TakÅ¾e posloupnost  Å¡ifrovÃ¡nÃ­ byla +A => +B => -A => -B. PouÅ¾ijete-li vÅ¡ak tento postup pomocÃ­ doposud znÃ¡mÃ½ch Å¡ifer, zjistÃ­te, Å¾e zÃ¡leÅ¾Ã­ na poÅadÃ­ Å¡ifrovÃ¡nÃ­, resp. deÅ¡ifrovÃ¡nÃ­. ZkrÃ¡tka nelze toto poÅadÃ­ zamÄnit, jinak je vÃ½sledek zamÃ­chanÃ½ a nepouÅ¾itelnÃ½.\n\n# Tak to je problÃ©m...\n\nAÄkoliv byla myÅ¡lenka posÃ­lÃ¡nÃ­ balÃ­ku tÃ©mÄÅ ideÃ¡lnÃ­, ve svÄtÄ Å¡ifer jiÅ¾ nefunguje. Co teÄ? Na scÃ©nu pÅichÃ¡zÃ­ matematika. KonkrÃ©tnÄ jednosmÄrnÃ© funkce a s nimi modulÃ¡rnÃ­ aritmetika. NemyslÃ­m si, Å¾e mÃ¡ smysl ÅeÅ¡it co je to jednosmÄrnÃ¡ funkce, ale zkrÃ¡cenÄ jednosmÄrnÃ¡ funkce je takovÃ¡ funkce, kterÃ¡ se nedÃ¡ (nebo velmi tÄÅ¾ce) zvrÃ¡tit. Jeko velmi dobrÃ½ pÅÃ­klad takovÃ© funkce je napÅÃ­klad smÃ­chÃ¡nÃ­ dvou barev (nelze zÃ­skat zpÄt pÅ¯vodnÃ­ barvy). ObdobnÄ pro matematickÃ© funkce. ZkrÃ¡tky vÅ¾dy je o to nalÃ©zt takovou funkci, kterou je velmi jednoduchÃ© pouÅ¾Ã­t a spoÄÃ­tat, ale jiÅ¾ velmi sloÅ¾itÃ© invertovat vÃ½sledek. PrÃ¡vÄ pro tyto Ãºlohy se perfektnÄ hodÃ­ modulÃ¡rnÃ­ aritmetika. Tam kde se bÄÅ¾nÃ¡ aritmetika chovÃ¡ pÅedvÃ­datelnÄ a na zÃ¡kladÄ pokusÅ¯ lze konvergovat k vÃ½sledku, v modulÃ¡rnÃ­ takovÃ¡to chovÃ¡nÃ­ neexistujÃ­.\n\n# ÅeÅ¡enÃ­\n\nNÃ¡sledujÃ­cÃ­ algoritmus je zhruba pouÅ¾it v Å¡ifrÃ¡ch DES (pro velkÃ¡ ÄÃ­sla). Budu vÅ¡ak pouÅ¾Ã­vat malÃ¡, aby bylo vÅ¡e lÃ©pe pochopitelnÃ©. Alice a Bob se <strong>veÅejnÄ</strong> dohodnou na funkci *Y<sup>x</sup>(mod P)*, kdy si ÄÃ­la napÅ. Y=5 a P=8 vymÄnÃ­ (a ÃºtoÄnÃ­k je mÅ¯Å¾e odposlechnout).\n\nTeÄ tedy znÃ¡ pÅÃ­jemnce, odesÃ­latel i ÃºtoÄnÃ­k danou funkci. OdesÃ­latel a pÅÃ­jemnce si nynÃ­ zvolÃ­ jinÃ© ÄÃ­slo <strong>kterÃ© uchovajÃ­ v tajnosti</strong>, toto ÄÃ­slo vloÅ¾Ã­ do matematickÃ© funkce *Y<sup>x</sup>(mod P)* a vÃ½sledek odeÅ¡lou. NapÅÃ­klad Bob zvolil x=4, tedy *5<sup>4</sup>(mod 8)=1*. Alice volÃ­ x=3, tedy *5<sup>3</sup>(mod 8)=5*. Tyto vÃ½sledky si vymÄnÃ­.\n\nZ pohledu ÃºtoÄnÃ­ka lze ÅÃ­ci, Å¾e znÃ¡ funkci a znÃ¡ takÃ© vÃ½sledky, konkrÃ©tnÄ 1 a 5. S touto znalostÃ­ by Å¡lo moÅ¾nÃ¡ privÃ¡tnÃ­ ÄÃ­slo **x** dopoÄÃ­tat. JenÅ¾e vyzkouÅ¡ejte si to. Pro malÃ¡ ÄÃ­sla moÅ¾nÃ¡, ale pro velkÃ¡ je to tÃ©mÄÅ nemoÅ¾nÃ©. A Å¾e se pouÅ¾Ã­vajÃ­ velkÃ¡ ÄÃ­sla...\n\nNynÃ­ vezme Alice vÃ½sledek od Boba a spoÄte *vysledek<sup>x</sup>(mod P)*, tedy *1<sup>3</sup>(mod 8)=1*. NezapomeÅte, Å¾e ÄÃ­slo **x** je stÃ¡le privÃ¡tnÃ­ a znÃ¡ ho jen Alice. StejnÄ teÄ postupuje i Bob, ale s vlastnÃ­m privÃ¡tnÃ­m ÄÃ­slem a vÃ½sledkem od Alice: *5<sup>4</sup>(mod 8)=1*. A zde je vidÄt k Äemu doÅ¡lo. VÃ½sledek obou vÃ½poÄtÅ¯ vyÅ¡el stejnÄ a k pÅenosu privÃ¡nÃ­ho ÄÃ­sla **x** nikdy nedoÅ¡lo. VyzkouÅ¡ejte si to na papÃ­r a nejlÃ©pe pro vÄtÅ¡Ã­ ÄÃ­sla. Pro ÃºtoÄnÃ­ka nastÃ¡vÃ¡ velkÃ½ problÃ©m, protoÅ¾e neznÃ¡ privÃ¡tnÃ­ ÄÃ­slo a je pro nÄj tedy nemoÅ¾nÃ© provÃ©st tyto vÃ½poÄty, nicmÃ©nÄ Alice i Bob majÃ­ k dispozici jeden vÃ½sledek, tedy jeden klÃ­Ä, kterÃ½ mohou pouÅ¾Ã­vat.\n\n# ZÃ¡vÄr\n\nJeÅ¡tÄ zopakuji k Äemu tedy doÅ¡lo. Bylo zapotÅebÃ­ dohodnout se mezi odesÃ­latelem a pÅÃ­jemcem na spoleÄnÃ©m klÃ­Äi, podle kterÃ©ho bude posÃ­lanÃ¡ zprÃ¡va Å¡ifrovÃ¡na. To se pomocÃ­ vhodnÃ½ch matematickÃ½ch metod povedlo a navÃ­c (coÅ¾ je to njdÅ¯leÅ¾itÄjÅ¡Ã­) nenÃ­ tÃ©mÄÅ moÅ¾nÃ© tento pÅenos odposlechnout, jelikoÅ¾ se jednÃ¡ o jednosmÄrnÃ© operace.\n\nAnalogicky lze pouÅ¾Ã­t opÄt mÃ­chÃ¡nÃ­ barev. Alice a Bob majÃ­ nÃ¡dobu s litrem ÄervenÃ© barvy. Stejnou nÃ¡dobu mÃ¡ i ÃºtoÄnÃ­k. Alice i Bob nynÃ­ nalijÃ­ vlastnÃ­ privÃ¡tnÃ­ barvu do nÃ¡doby a tyto nÃ¡doby si vymÄnÃ­. ÃtoÄnÃ­k je mÅ¯Å¾e vidÄt, ale nedokÃ¡Å¾e z nich odhadnout jakÃ¡ je privÃ¡tnÃ­ barva. Nakonec Alice i Bob nalijÃ­ zbytek svÃ© tajnÃ© barvy do nÃ¡doby (jiÅ¾ je majÃ­ vymÄnÄnÃ©), ÄÃ­mÅ¾ vznikne Alici i Bobovi stejnÃ¡ barva. Ani Alice, ani Bob, ani ÃºtoÄnÃ­k nevÃ­ co bylo pÅidÃ¡no za barvy od toho druhÃ©ho, ale se znalostÃ­ vlastnÃ­ho privÃ¡tnÃ­ho klÃ­Äe se dostanou ke stejnÃ©mu vÃ½sledku. ÃºtoÄnÃ­k tyto klÃ­Äe neznÃ¡ a je nahranÃ½.\n\nTak a zde by mÄl zaÄÃ­nat ÄlÃ¡nek http://zlml.cz/asymetricka-sifra-s-verejnym-klicem.\n\nTento a daleko vÃ­ce inspirativnÃ­ch nÃ¡padÅ¯ a pÅÃ­bÄhÅ¯ naleznete v knize https://www.kosmas.cz/knihy/146743/kniha-kodu-a-sifer/.","frontmatter":"id: e0783b28-8a1a-400c-b91b-547b4c372fbe\ntimestamp: 1387710504000\ntitle: VeÅejnÃ¡ distribuce klÃ­ÄÅ¯\nslug: verejna-distribuce-klicu"},{"attributes":{"id":"2894e1f9-8a47-48b9-bcea-40bf4fdb3724","timestamp":1387385662000,"title":"PÅednÃ¡Å¡ka z Nette na ZÄU","slug":"prednaska-z-nette-na-zcu"},"body":"Dnes jsem mÄl tu Äest pÅednÃ¡Å¡et na ZÄU studentÅ¯m pÅedmÄtu KIV/WEB - WebovÃ© aplikace.\nPÅednÃ¡Å¡ku a i celÃ© povÃ­dÃ¡nÃ­ jsem se snaÅ¾il chopit velmi realisticky, prakticky a pro studenty, \nkteÅÃ­ s tvorbou webovÃ½ch aplikacÃ­ teprve zaÄÃ­najÃ­. DoufÃ¡m, ze bylo mÃ© povÃ­dÃ¡nÃ­\ninspirativnÃ­, srozumitelnÃ© a pochopitelnÃ©. OstatnÄ sami si prezentaci mÅ¯Å¾ete pÅeÄÃ­st:\n<br><br>\n\n<iframe src=\"http://www.slideshare.net/slideshow/embed_code/29326870\" width=\"752\" height=\"460\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px\" allowfullscreen> </iframe>\n\n<br>\nVÄÅÃ­m, Å¾e Nette bude pouÅ¾Ã­vat zase o nÄco vÃ­ce zaÄÃ¡teÄnÃ­kÅ¯ a Å¾e Å¡e jim podaÅÃ­ psÃ¡t kvalitnÃ­\nwebovÃ© aplikace. RÃ¡d bych jeÅ¡tÄ jednou popÅÃ¡l vÅ¡em studentÅ¯m ÃºspÄÅ¡nÃ© sloÅ¾enÃ­ zkouÅ¡ky z pÅedmÄtu KIV/WEB\na snad se jeÅ¡tÄ nÄkdy potkÃ¡me... (-:","frontmatter":"id: 2894e1f9-8a47-48b9-bcea-40bf4fdb3724\ntimestamp: 1387385662000\ntitle: PÅednÃ¡Å¡ka z Nette na ZÄU\nslug: prednaska-z-nette-na-zcu"},{"attributes":{"id":"58e7368b-0db4-498f-8184-fc4877ba32ba","timestamp":1387113023000,"title":"Nette 2.2-dev","slug":"nette-2-2-dev"},"body":"NedÃ¡vno byla zmÄnÄna vÃ½vojovÃ¡ verze Nette Frameworku na 2.2-dev (https://github.com/nette/nette/commit/3a426255084163ec1a2f324ea0d3e9b3139adccc).\nTato zmÄna s sebou pÅinesla explozi zmÄn. Na nÃ¡sledujÃ­cÃ­ch ÅÃ¡dcÃ­ch bych rÃ¡d pÅiblÃ­Å¾il\nnÄkterÃ© zÃ¡sadnÃ­ zmÄny, kterÃ© se odehrÃ¡ly a je zapotÅebÃ­ je upravit, aby bylo moÅ¾nÃ© z verze 2.1-dev\npÅejÃ­t prÃ¡vÄ na verzi 2.2-dev.\n\n# NutnÃ© Ãºpravy\n\nPrvÄ se zmÄnilo umÃ­stÄnÃ­ konfigurÃ¡toru. Tato zmÄna se samozÅejmÄ tÃ½kÃ¡ souboru `bootstrap.php`.\nNovÄ je konfigurÃ¡tor v novÃ©m umÃ­stÄnÃ­:\n\n```php\n//$configurator = new Nette\\Config\\Configurator;\n$configurator = new \\Nette\\Configurator;\n```\n\nDÃ¡le jsem si zvykl pouÅ¾Ã­vat automatickÃ© injektovÃ¡nÃ­ zÃ¡vislostÃ­ pomocÃ­ anotace `@inject`.\nPro opÄtovnÃ© pouÅ¾itÃ­ je nutnÃ© zapnout `nette.container.accessors`, coÅ¾ ostatnÄ napovÃ­ chybovÃ¡ hlÃ¡Å¡ka,\njelikoÅ¾ je tato volba v novÃ© developmÄnt verzi Nette ve vÃ½chozÃ­m stavu zakÃ¡zÃ¡na. Config.neon:\n\n```neon\nnette:\n\tcontainer:\n    \taccessors: TRUE\n```\n\nNynÃ­ jiÅ¾ bude moÅ¾nÃ© anotace `@inject` pouÅ¾Ã­vat. DalÅ¡Ã­ zmÄna, kterÃ© mÄ osobnÄ moc nepotÄÅ¡ila\na nevÃ­m co jÃ­ pÅedchÃ¡zelo je zruÅ¡enÃ­ podpory krÃ¡tkÃ©ho zÃ¡pisu blokÅ¯:\n\n```html\n<!-- PÅedtÃ­m: -->\n{#content}\n\t...\n{/#}\n<!-- NynÃ­: -->\n{block content}\n\t...\n{/block}\n```\n\nTato zmÄna se mi moc nelÃ­bÃ­, protoÅ¾e napÅÃ­klad stÃ¡le funguje `{include #parent}`, coÅ¾ je prostÄ\nzvlÃ¡Å¡tnÃ­... Za zmÃ­nku takÃ© stojÃ­ zmÄna tÅÃ­dy pro prÃ¡ci s databÃ¡zÃ­. ZatÃ­mco se ve verzi 2.0.13\nnormÃ¡lnÄ pouÅ¾Ã­vÃ¡ `Nette\\Database\\Connection`, ve verzi 2.1-dev se pÅeÅ¡lo na `Nette\\Database\\SelectionFactory`, \nnicmÃ©nÄ ve verzi 2.1.0RC2 se jiÅ¾ pracuje s `Nette\\Database\\Context` a SelectionFactory jiÅ¾ neexistuje. \nToto  platÃ­ i pro verzi 2.2-dev. Tato zmÄna mi bude zÅejmÄ dlouho trvat, neÅ¾ ji vstÅebÃ¡m.\nMyslÃ­m si, Å¾e obyÄejnÃ© `Nette\\Database` by bylo v modelu daleko vÃ­ce vypovÃ­dajÃ­cÃ­ neÅ¾ nÄjakÃ½ Context, \nale budiÅ¾.\n\nTolik k podle mÃ©ho zÃ¡sadnÃ­m zmÄnÃ¡m, kterÃ© zabrÃ¡nÃ­ napÅÃ­klad spuÅ¡tÄnÃ­ projektu z quickstartu. NynÃ­\nbych rÃ¡d poukÃ¡zal na nÄkolik mÃ¡lo zmÄn z celÃ© tÃ© exploze, kterÃ© mÄ zaujaly.\n\n# DalÅ¡Ã­ zmÄny\n\nByla odstranÄna celÃ¡ Åada zastaralÃ½ch vÄcÃ­. NemÃ¡ smysl je rozebÃ­rat. Je jich hodnÄ a zastaralÃ© jsou\nuÅ¾ od 2.1. KaÅ¾dopÃ¡dnÄ napÅÃ­klad makro `n:input` se stalo zastaralÃ© a k dispozici je novÃ© makro\n`{inputError}`, kterÃ© oÅ¡Ã©fuje vykreslenÃ­ chybovÃ© hlÃ¡Å¡ky u pÅÃ­sluÅ¡nÃ©ho polÃ­Äka. JÃ©Ã©j! :-)\n\nLehce odliÅ¡nÄ se takÃ© pÅistupuje k checkboxÅ¯m a vÅ¯bec, formulÃ¡Åe jsou zase o nÄco lepÅ¡Ã­, coÅ¾\npÅedpoklÃ¡dÃ¡m souvisÃ­ s:\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>ChtÄl jsem v rychlosti udÄlat pÅÃ­klad, jak v <a href=\"https://twitter.com/search?q=%23netteFw&amp;src=hash\">#netteFw</a> renderovat formulÃ¡Åe s Twitter Bootstrapem.&#10;&#10;Zabitej den a pÅekopanÃ½ Netteâ¦</p>&mdash; geekovo (@geekovo) <a href=\"https://twitter.com/geekovo/statuses/409064701369516032\">December 6, 2013</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n# KoneÄnÄ!\n\nSvÄtlo svÄta spatÅil novÃ½ [quickstart](http://doc.nette.org/cs/2.1/quickstart) v ÄeÅ¡tinÄ pro dnes jiÅ¾ tÃ©mÄÅ nekatuÃ¡lnÃ­ verzi 2.0.13.\nVÄÅÃ­m tomu, Å¾e se jednÃ¡ o daleko pÅÃ­nosnÄjÅ¡Ã­ vÄc, neÅ¾ psanÃ­ pokroÄilÃ½ch nÃ¡vodÅ¯ v angliÄtinÄ\n(navazujÃ­cÃ­ch na quickstart) a doufÃ¡m, Å¾e tento poÄin pomÅ¯Å¾e pÃ¡r lidÃ­ popostrÄit dÃ¡l...\n\nJakÃ¡ zmÄna vÃ¡s zaujala nejvÃ­ce?","frontmatter":"id: 58e7368b-0db4-498f-8184-fc4877ba32ba\ntimestamp: 1387113023000\ntitle: Nette 2.2-dev\nslug: nette-2-2-dev"},{"attributes":{"id":"dbf85219-5173-4c7b-924a-636e86172b93","timestamp":1382905620000,"title":"ZmÄna URL struktury","slug":"zmena-url-struktury"},"body":"RÃ¡d bych tÃ­mto upozornil na zmÄny URL adres na tomto webu. A zÃ¡roveÅ k technickÃ© povaze tohoto webu\nprozradÃ­m i bliÅ¾Å¡Ã­ informace ze zÃ¡kulisÃ­.\n\nPÅed Ãºpravou URL struktury jsem definoval nÄkolik dÅ¯leÅ¾itÃ½ch bodÅ¯, kterÃ½ch jsem se drÅ¾el:\n1. MusÃ­ zÅ¯stat maximÃ¡lnÃ­ (ÃºplnÃ¡) zpÄtnÃ¡ kompatibilita\n2. VÃ½slednÃ© URL musÃ­ bÃ½t maximÃ¡lnÄ jednoduchÃ© a cool\n\n# PÅedtÃ­m a potom\n\nDÅ¯leÅ¾itÃ© je, aby starÃ¡ URL adresa nekonÄila chybou 404, ale aby pÅesmÄrovala na novou URL.\nRSS je nynÃ­ na adrese http://zlml.cz/rss. PÅ¯vodnÄ bylo na adrese http://zlml.cz/homepage/rss.\nObÄ dvÄ adresy fungujÃ­ stÃ¡le, rozdÃ­l je v tom, Å¾e homepage/rss nynÃ­ pÅesmÄrovÃ¡vÃ¡ pomocÃ­ 301 na */rss.\nToho se dalo docÃ­lit velice jednoduÅ¡e:\n\n```php\n$router[] = new Route('rss', 'Homepage:rss'); //novÃ¡ routa\n$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default'); //pÅ¯vodnÃ­\n//zÃ¡leÅ¾Ã­ na poÅadÃ­!\n```\n\nAÄkoliv je teÄ druhÃ¡ routa zbyteÄnÃ¡, nechal jsem jÃ­ pro pÅÃ­pad, Å¾e bych mÄl nÄjakou URL nezachycenou.\nV tom pÅÃ­padÄ ji zachytÃ­ tato obecnÃ¡.\n\n# ZpÄtnÃ¡ kompatibilita\n\nStejnÄ tak jako zmÄna adresy RSS, tak si i ostatnÃ­ adresy musÃ­ zachovat stejnÃ© vlastnosti viz prvnÃ­ bod.\nA vzhledem k tomu, Å¾e jsem se rozhodl zmÄnit adresu vyhledÃ¡vÃ¡nÃ­ a tagÅ¯, nezbÃ½valo, neÅ¾ dalÅ¡Ã­\ndvÄ routy pÅidat. OpÄt zÃ¡leÅ¾Ã­ na poÅadÃ­:\n\n```php\n$router[] = new Route('s[/<search>]', 'Search:default'); //novÃ¡\n$router[] = new Route('t[/<search>]', 'Tag:default'); //novÃ¡\n\n//tyto routy (aÅ¾ uznÃ¡m za vhodnÃ©) mohu smazat:\n$router[] = new Route('search[/<search>]', 'Search:default', Route::ONE_WAY); //pÅ¯vodnÃ­\n$router[] = new Route('tag[/<search>]', 'Tag:default', Route::ONE_WAY); //pÅ¯vodnÃ­\n```\n\nOpÄt platÃ­, Å¾e funguje jak starÃ¡ adresa http://zlml.cz/search/nette s pÅesmÄrovÃ¡nÃ­m 301, tak i novÃ¡ \nhttp://zlml.cz/s/nette. ObdobnÄ je tomu u tagÅ¯.\n\n# ÄarodÄjnictvÃ­!\n\nNejvÄtÅ¡Ã­ sranda vÅ¡ak zaÄÃ­nÃ¡ u druhÃ©ho poÅ¾adavku. UÅ¾ dlouho jsem si pohrÃ¡val s myÅ¡lenkou,\nÅ¾e chci nÃ¡zvy ÄlÃ¡nkÅ¯ a adresy jednotlivÃ½ch strÃ¡nek v menu hned za lomÃ­tkem jako v koÅenovÃ©m\nadresÃ¡Åi. Tedy aby ÄlÃ¡nek mÄl adresu http://zlml.cz/lovec-matematik a strÃ¡nka http://zlml.cz/about.\nZde jsem se vÅ¡ak vÅ¾dy dostÃ¡val do velkÃ©ho problÃ©mu. Jak rozliÅ¡it a nabÃ­dnout z databÃ¡ze ÄlÃ¡nek a \njak poznat, kdy naopak nabÃ­dnout strÃ¡nku napÅÃ­klad s referencemi?\n\nNo, tak nejdÅÃ­ve je zapotÅebÃ­ routa pro ÄlÃ¡nky:\n```php\n$router[] = new Route('<slug>', 'Single:article');\n```\nKdy v presenteru tahÃ¡m ÄlÃ¡nky z databÃ¡ze podle slugu:\n```php\npublic function renderArticle($slug) {\n\t$post = $this->posts->getBySlug($slug)->fetch(); //naÄetnÃ­ ÄlÃ¡nku podle slugu\n\tif (!$post) { //ÄlÃ¡nek neexistuje (db vracÃ­ FALSE)\n\t\t$this->forward($slug); //nabÃ­dni statickou Å¡ablonu\n\t} else { // zobrazenÃ­ ÄlÃ¡nku\n    \t//...\n    }\n}\n```\nCoÅ¾ je podle mÃ©ho dostateÄnÄ elegantnÃ­ ÅeÅ¡enÃ­. JednoduÅ¡e se pokusÃ­m o naÄtenÃ­ strÃ¡nky podle slugu\nz databÃ¡ze a kdyÅ¾ se to nepodaÅÃ­, nabÃ­dnu nÄjakÃ½ latte soubor, pokud existuje. Pokud neexistuje, \ntak ErrorPresenter jiÅ¾ obstarÃ¡ vrÃ¡cenÃ­ 404, coÅ¾ je sprÃ¡vnÄ, protoÅ¾e nenÃ­ co nabÃ­dnout...\n\nJeÅ¡tÄ je zapotÅebÃ­ vytvoÅit jednu routu:\n```php\n$router[] = new Route('<action>', 'Single:article');\n```\nBez tÃ©to routy by to takÃ© fungovalo, ale latte ony latte soubory (action) bych naÅ¡el na dvou URL\nadresÃ¡ch, coÅ¾ nechci. TakÅ¾e se z pÅ¯vodnÃ­ho http://zlml.cz/single/about dostanu na http://zlml.cz/about, \ncoÅ¾ je cool a splÅuji tak druhÃ½ poÅ¾adavek.\n\nPoslednÃ­ routa, kterÃ¡ stojÃ­ za zmÃ­Åku pak zajiÅ¡Å¥uje strÃ¡nkovÃ¡nÃ­. Pouze rozpoznÃ¡vÃ¡ ÄÃ­sla podle\nregulÃ¡rnÃ­ho vÃ½razu a podle toho strÃ¡nkuje:\n```php\n$regex = '1|2|3'; //zjednoduÅ¡enÄ\n$router[] = new Route(\"[<paginator-page [$regex]>]\", array(\n\t'presenter' => 'Homepage',\n\t'action' => 'default',\n\t'paginator-page' => 1\n));\n```\n\nOstatnÄ to jak mÃ¡m v dobÄ psanÃ­ tohoto ÄlÃ¡nku router vytvoÅenÃ½ mÅ¯Å¾ete zjistit na [bitbucketu](https://bitbucket.org/mrtnzlml/zlml.cz/src/0580e2e9f0e4edb162fe97ad563cfef766bea625/app/router/RouterFactory.php).\n","frontmatter":"id: dbf85219-5173-4c7b-924a-636e86172b93\ntimestamp: 1382905620000\ntitle: ZmÄna URL struktury\nslug: zmena-url-struktury"},{"attributes":{"id":"2de31894-6830-48d7-a34f-9eaa72abc44b","timestamp":1382391734000,"title":"LaTeX Å¡ablona","slug":"latex-sablona"},"body":"VÅ¡iml si takÃ© nÄkdo, Å¾e vÄtÅ¡ina uÅ¾ivatelÅ¯ WYSIWYG textovÃ©ho editoru typu Word v nÄm menÅ¡inu Äasu pÃ­Å¡Ã­ a vÄtÅ¡inu Äasu se snaÅ¾Ã­ ohnout editor tak, aby dÄlal to co mÃ¡? Tak pÅesnÄ toto mÄ pÅestalo bavit a zaÄal jsem vÅ¡echny prÃ¡ce sÃ¡zet v LaTeXu. Pro psanÃ­ mÃ¡m vytvoÅenou nÃ¡sledujÃ­cÃ­ Å¡ablonu, kterou s vÃ½hodou pouÅ¾Ã­vÃ¡m a zatÃ­m jsou na nÃ­ od kontrolujÃ­cÃ­ch dobrÃ© ohlasy (pokud si toho nÄkdo vÅ¡iml).\n\n```tex\n\\documentclass[12pt]{article} % use larger type; default would be 10pt\n\\usepackage[czech]{babel}\n\\usepackage[utf8]{inputenc} % set input encoding (not needed with XeLaTeX)\n\n%%% PAGE DIMENSIONS\n\\usepackage{geometry} % to change the page dimensions\n% \\usepackage[left=2cm,right=2cm,top=2cm,bottom=2cm]{geometry}\n\\geometry{a4paper}\n\n\\usepackage{graphicx} % support the \\includegraphics command and options\n\\usepackage{wrapfig} % support the wrapfigure section\n\n\\usepackage{hyperref} % links in \\tableofcontents\n\\hypersetup{\n\tcolorlinks,\n\tcitecolor=black,\n\tfilecolor=black,\n\tlinkcolor=black,\n\turlcolor=black\n}\n\n% \\usepackage[parfill]{parskip} % Activate to begin paragraphs with an empty line rather than an indent\n\n%%% PACKAGES\n\\usepackage{booktabs} % for much better looking tables\n\\usepackage{array} % for better arrays (eg matrices) in maths\n%\\usepackage{paralist} % very flexible & customisable lists (eg. enumerate/itemize, etc.)\n\\usepackage{verbatim} % adds environment for commenting out blocks of text & for better verbatim\n\\usepackage{subfig} % make it possible to include more than one captioned figure/table in a single float\n% These packages are all incorporated in the memoir class to one degree or another...\n\\usepackage{tikz} % graphs\n\\usepackage{pgfplots}\n\\usepackage{float}\n\n%%% HEADERS & FOOTERS\n\\usepackage{fancyhdr} % This should be set AFTER setting up the page geometry\n\\pagestyle{fancy} % options: empty , plain , fancy\n\\renewcommand{\\headrulewidth}{0pt} % customise the layout...\n\\lhead{}\\chead{}\\rhead{}\n\\lfoot{}\\cfoot{\\thepage}\\rfoot{}\n\n%%% SECTION TITLE APPEARANCE\n\\usepackage{sectsty}\n\\allsectionsfont{\\sffamily\\mdseries\\upshape} % (See the fntguide.pdf for font help)\n% (This matches ConTeXt defaults)\n\n%%% ToC (table of contents) APPEARANCE\n\\usepackage[nottoc,notlof,notlot]{tocbibind} % Put the bibliography in the ToC\n\\usepackage[titles,subfigure]{tocloft} % Alter the style of the Table of Contents\n\\renewcommand{\\cftsecfont}{\\rmfamily\\mdseries\\upshape}\n\\renewcommand{\\cftsecpagefont}{\\rmfamily\\mdseries\\upshape} % No bold!\n\newcommand{\\bigsize}{\\fontsize{35pt}{20pt}\\selectfont}\n\n%%% END Article customizations\n\n\\begin{document}\n\n\t...\n\n\\end{document}\n```\n\nJsem relativnÄ LaTeX novÃ¡Äkem, proto by mÄ zajÃ­malo. PouÅ¾Ã­vÃ¡te nÄjakou jinou Å¡ablonu? LepÅ¡Ã­?","frontmatter":"id: 2de31894-6830-48d7-a34f-9eaa72abc44b\ntimestamp: 1382391734000\ntitle: LaTeX Å¡ablona\nslug: latex-sablona"},{"attributes":{"id":"c8de8345-cdb5-4580-966a-96b1331479c3","timestamp":1382390436000,"title":"DÅ¯leÅ¾itost titulku podruhÃ© (a naposled)","slug":"dulezitost-titulku-podruhe-a-naposled"},"body":"TakÃ© bych mohl zaÄÃ­t slovy: \"Jsem to ale trouba.\" V nÃ¡sledujÃ­cÃ­ch nÄkolika odstavcÃ­ch bych rÃ¡d navÃ¡zal na ÄlÃ¡nek, kde jsem upozorÅoval na to, jak je <code>title</code> tag dÅ¯leÅ¾itÃ½ (http://zlml.cz/portal-zcu-docasne-mimo-provoz). CoÅ¾ jsem si ostatnÄ nechtÄnÄ vyzkouÅ¡el.\n\n# Jak mÃ¡lo staÄÃ­ k umÃ­stÄnÃ­ ve vyhledÃ¡vaÄi\n\nTag <code>title</code> je jeden z nejvÃ­ce dÅ¯leÅ¾itÃ½ch prvkÅ¯ na webovÃ© strÃ¡nce. ZÃ¡roveÅ je vÅ¡ak jeden z nejvÃ­ce opomÃ­jenÃ½ch. ProÄ se vÅ¡ak opÄt vracÃ­m k jiÅ¾ dÃ¡vno vyÅeÅ¡enÃ©mu problÃ©mu? KrÃ¡tce potÃ© co jsem napsal onen osudnÃ½ ÄlÃ¡nek, mohl jsem pozorovat krÃ¡snÃ½ efekt o kterÃ©m jsem psal. VytvoÅil jsem totiÅ¾ ÄlÃ¡nek, jehoÅ¾ URL adresa mÄla zmÄnÃ­ <code>...cz/portal-zcu-docasne-mimo-provoz</code> a ve vyhledÃ¡vaÄi jsem vystupoval s titulkem <code>PortÃ¡l ZÄU doÄasnÄ mimo provoz | Martin ZlÃ¡mal</code>.\n\nS tÃ­mto ÄlÃ¡nkem jsem se okamÅ¾itÄ dostal na prvnÃ­ strÃ¡nku ve vyhledÃ¡vaÄi a dodnes pozoruji ve statistikÃ¡ch doslova tisÃ­ce zobrazenÃ­ (coÅ¾ je na velikost mÃ©ho bezvÃ½znamnÃ©ho blogu opravdu hodnÄ) na rÅ¯znÃ© kombinace slov **portal** a **zcu**. Celkem jsem napoÄÃ­tal 7 variant coÅ¾ uÅ¾ chce zapojit fantazii pro spojenÃ­ dvou slov tolika zpÅ¯soby.\n\n# JenÅ¾e nenÃ­ zobrazenÃ­ jako zobrazenÃ­\n\nMoÅ¾nÃ¡ by z toho mÄl kde kdo radost, ale mÄ osobnÄ to moc nenadchlo. Je tÅeba se zamyslet nad tÃ­m, jakÃ¡ je z tohoto zobrazenÃ­ asi nÃ¡vÅ¡tÄvnost, kdyÅ¾ jsem jednak na pozici aÅ¾ pod tÃ­m sprÃ¡vnÃ½m portÃ¡lem a pak mÃ¡ ÄlÃ¡nek takovÃ½ titulek, na kterÃ½ nikdo z vyhledÃ¡vÃ¡nÃ­ dobrovolnÄ nepÅistoupÃ­. Mizivou.\n\nOproti tomu naopak ÄlÃ¡nky, kterÃ© byly napsÃ¡ny vyloÅ¾enÄ z dÅ¯vodu zÃ¡jmu (http://zlml.cz/routovani-v-nette-prakticky) majÃ­ mnohem vÄtÅ¡Ã­ procento proklikÅ¯. A to nelze srovnÃ¡vat poÄty zobrazenÃ­ jednotlivÃ½ch ÄlÃ¡nkÅ¯. KaÅ¾dopÃ¡dnÄ zdaleka nejvÄtÅ¡Ã­ho CTR dosahujÃ­ ÄlÃ¡nky, ve jsou popsÃ¡ny nÃ¡vrhovÃ© vzory v PHP (napÅ. http://zlml.cz/navrhovy-vzor-factory-method).\n\nRÃ¡d bych z tohoto pozorovÃ¡nÃ­ vyvodil jednoduchÃ½ zÃ¡vÄr, kterÃ½ je vÅ¡ak myslÃ­m vÃ­ce neÅ¾ jasnÃ½. NemÃ¡ smysl psÃ¡t o jakÃ©mkoliv nÃ¡padu, ale mÃ¡ smysl psÃ¡t o tÃ©matech, o kterÃ© je evidentnÃ­ zÃ¡jem, coÅ¾ lze ve statistikÃ¡ch snadno pozorovat. Snad jen jednou za Äas je zajÃ­mavÃ© vyboÄit z Åady a sledovat reakce nÃ¡vÅ¡tÄvnÃ­kÅ¯.","frontmatter":"id: c8de8345-cdb5-4580-966a-96b1331479c3\ntimestamp: 1382390436000\ntitle: DÅ¯leÅ¾itost titulku podruhÃ© (a naposled)\nslug: dulezitost-titulku-podruhe-a-naposled"},{"attributes":{"id":"40b5dd33-13a2-447e-b352-256bc1afd9cd","timestamp":1377116084000,"title":"AJAX upload souborÅ¯ v Nette pomocÃ­ Fine Uploaderu","slug":"ajax-upload-souboru-v-nette-pomoci-fine-uploaderu"},"body":"<div class=\"alert alert-danger\">NÃ¡sledujÃ­cÃ­ text ÅeÅ¡Ã­ starÅ¡Ã­ verzi FineUploaderu `3.*`, nikoliv nejnovÄjÅ¡Ã­. HledÃ¡te-li aktuÃ¡lnÄjÅ¡Ã­ nÃ¡vod, pÅeÄtÄte si prosÃ­m http://zlml.cz/ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2...</div>\n\nA je zde dalÅ¡Ã­ ukÃ¡zka vlastnÃ­ prÃ¡ce, kterÃ¡ se mÅ¯Å¾e hodit i nÄkomu dalÅ¡Ã­mu. TentokrÃ¡t pÅ¯jde o ajaxovÃ©\nnahrÃ¡vÃ¡nÃ­ souborÅ¯ v Nette pomocÃ­ [Fine Uploaderu .{target:_blank}](http://fineuploader.com/).\nObecnÄ to nenÃ­ moc jednoduchÃ¡ sranda, ale uvidÃ­te, Å¾e to zase nenÃ­ takovÃ¡ vÄda...\n\nA jak uÅ¾ to tak dÄlÃ¡vÃ¡m, lepÅ¡Ã­ neÅ¾ spoustu povÃ­dÃ¡nÃ­ je spousta ukÃ¡zek. PrvnÄ je potÅeba nalinkovat\nsoubory Fine Uploaderu, nette.ajaxu a vlastnÃ­ho javascriptovÃ©ho souboru:\n\n```html\n<script src=\"{$basePath}/js/jquery.fineuploader-3.7.0.min.js\"></script>\n<script src=\"{$basePath}/js/nette.ajax.js\"></script>\n<script src=\"{$basePath}/js/main.js\"></script>\n```\n\nPouÅ¾itÃ­ samotnÃ©ho Fine Uploaderu je nesmÃ­rnÄ jednoduchÃ©. NejdÅÃ­ve je tÅeba vytvoÅit element na kterÃ½\nse uploader pozdÄji zavÄsÃ­ a pÅÃ­padnÄ tlaÄÃ­tko na upload, pokud nechceme soubory uploadovat rovnou:\n\n```html\n<div id=\"image-uploader\"{ifset $selected} data-id=\"{$selected}\"{/ifset}></div>\n<div id=\"triggerUpload\">NahrÃ¡t obrÃ¡zky</div>\n```\n\nPÅichÃ¡zÃ­ na Åadu samotnÃ© oÅ¾ivenÃ­ uploaderu pomocÃ­ javascriptu (soubor main.js):\n\n```javascript\n$(function () {\n\tif ($('#image-uploader').length != 0) { //test existence elementu\n\t\t$.nette.ext('uploader', {\n\t\t\tcomplete: function () { //zavÄÅ¡enÃ­ na konec ajaxovÃ©ho poÅ¾adavku\n\t\t\t\tvar uploader = $('#image-uploader').fineUploader({\n\t\t\t\t\trequest: {\n\t\t\t\t\t\tendpoint: 'product/default/' + $('#image-uploader').data('id') + '?do=upload'\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\tuploadButton: 'KliknÄte, nebo pÅetÃ¡hnÄte obrÃ¡zky',\n\t\t\t\t\t\tcancelButton: 'zruÅ¡it',\n\t\t\t\t\t\tfailUpload: 'NahrÃ¡nÃ­ obrÃ¡zku se nezdaÅilo',\n\t\t\t\t\t\tdragZone: 'PÅetÃ¡hnÄte soubory sem',\n\t\t\t\t\t\tdropProcessing: 'ZpracovÃ¡vÃ¡m pÅetaÅ¾enÃ© soubory...',\n\t\t\t\t\t\tformatProgress: '{percent}% z {total_size}',\n\t\t\t\t\t\twaitingForResponse: 'ZpracovÃ¡vÃ¡m...'\n\t\t\t\t\t},\n\t\t\t\t\tautoUpload: false,\n\t\t\t\t\tfailedUploadTextDisplay: {\n\t\t\t\t\t\tmode: 'custom',\n\t\t\t\t\t\tmaxChars: 70,\n\t\t\t\t\t\tresponseProperty: 'error',\n\t\t\t\t\t\tenableTooltip: true\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$('#triggerUpload').click(function () {\n\t\t\t\t\tuploader.fineUploader('uploadStoredFiles');\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t$.nette.init(); //inicializace nette.ajax\n});\n```\n\nProtoÅ¾e jsem v mÃ©m pÅÃ­padÄ donaÄÃ­tal tento upload element ajaxovÄ, musel jsem script pro uploader\nzavÄsit na nette.ajax udÃ¡lost complete. Tato obÃ¡lka se dÃ¡ smazat a spouÅ¡tÄt klasicky\npÅi udÃ¡losti document.ready. Je zde spoustu, pro samotnou funkÄnost, zbyteÄnÃ©ho kÃ³du.\nPodstatnÃ½ je pouze request:endpoint, kterÃ½ ukazuje na URL adresu aplikace, kde ÄekÃ¡ Nette handle.\nTen mÅ¯Å¾e vypadat napÅÃ­klad takto:\n\n```php\npublic function handleUpload($id) {\n\t$allowedExtensions = array(\"jpeg\", \"jpg\", \"png\", \"gif\"); //napÅÃ­klad pro obrÃ¡zky\n\t$uploader = new \\qqFileUploader($allowedExtensions);\n\t//...\n\ttry {\n\t\t$result = $uploader->handleUpload(__DIR__ . '/../../../www/uploads/' . $id . '/default', NULL);\n\t\t$result['uploadName'] = $uploader->getUploadName();\n\t\t//...\n\t} catch (\\Exception $exc) {\n\t\t$this->sendResponse(new \\Nette\\Application\\Responses\\JsonResponse(array(\n\t\t\t'error' => $exc->getMessage(),\n\t\t)));\n\t}\n\t$this->invalidateControl();\n\t$this->sendResponse(new \\Nette\\Application\\Responses\\JsonResponse($result));\n}\n```\n\nOpÄt jsem vypustil ÄÃ¡sti, kterÃ© nejsou ÃºplnÄ dÅ¯leÅ¾itÃ© pro samotnou funkÄnost. Jde pouze o to mÃ­t\npÅipravenou handle metodu, kterÃ¡ pÅevezme napÅÃ­klad ID, dÅ¯leÅ¾itÃ© vÅ¡ak je, Å¾e spouÅ¡tÃ­ metodu handleUpload()\na odesÃ­lÃ¡ JSON odpovÄÄ a to jak errorovou, tak normÃ¡lnÃ­, coÅ¾ je nÃ¡slednÄ na stranÄ klienta vyhodnoceno\njako ÃºspÄÅ¡nÃ½ upload.\n\nV kÃ³du je zmÃ­nÄna takÃ© tÅÃ­da qqFileUploader. Tu naleznete napÅÃ­klad na [GitHubu .{target:_blank}](https://github.com/Widen/fine-uploader-server) a nejenom pro PHP. JÃ¡ jsem si tuto tÅÃ­du obohatil pouze\no webalize nÃ¡zvÅ¯ souborÅ¯.\n\nA to je vlastnÄ ÃºplnÄ celÃ©. StaÄÃ­ tedy spustit Fine Uploader na stranÄ klienta napÅÃ­klad\npodle oficiÃ¡lnÃ­ch nÃ¡vodÅ¯, endpoint nastavit na nÄjakÃ½ handle v aplikaci a ten sprÃ¡vnÄ pouÅ¾Ã­t.\nTo konkrÃ©tnÄ obnÃ¡Å¡Ã­ odeslÃ¡nÃ­ JSON odpovÄdi o ÃºspÄÅ¡nÃ©m zpracovÃ¡nÃ­ obrÃ¡zku.","frontmatter":"id: 40b5dd33-13a2-447e-b352-256bc1afd9cd\ntimestamp: 1377116084000\ntitle: AJAX upload souborÅ¯ v Nette pomocÃ­ Fine Uploaderu\nslug: ajax-upload-souboru-v-nette-pomoci-fine-uploaderu"},{"attributes":{"id":"71e8347e-9bdb-4d81-a323-203be472f0ad","timestamp":1376169022000,"title":"RSS a Sitemap jednoduÅ¡e a rychle","slug":"rss-a-sitemap-jednoduse-a-rychle"},"body":"PÃ¡r ÄlÃ¡nkÅ¯ zpÄt jsem ukazoval nÄkolik pÅÃ­kladÅ¯, jak tvoÅit rÅ¯znÃ© routy. Ukazoval jsem routy pro RSS i sitemap.xml. Nikde jsem vÅ¡ak zatÃ­m neukazoval jak je to jednoduÅ¡e realizovatelnÃ©. Dokonce tak jednoduÅ¡e, Å¾e je Å¡koda tyto soubory nevyuÅ¾Ã­t na jakÃ©mkoliv webu, protoÅ¾e majÃ­ pomÄrnÄ velkÃ½ potenciÃ¡l.\n\nZaÄnÄme HomepagePresenterem (DEV Nette):\n\n```php\n<?php\n\nclass HomepagePresenter extends BasePresenter {\n\n\t/** @var \\Model\\Posts @inject */\n\tpublic $posts;\n\n\tpublic function renderRss() {\n\t\t$this->template->posts = $this->posts->getAllPosts()->order('date DESC')->limit(50);\n\t}\n\n\tpublic function renderSitemap() {\n\t\t$this->template->sitemap = $this->posts->getAllPosts();\n\t}\n\n}\n```\n\nTÃ­mto ÅÃ­kÃ¡m, Å¾e do Å¡ablon <code>rss.latte</code> a <code>sitemap.latte</code> pÅedÃ¡vÃ¡m vÅ¡echny ÄlÃ¡nky, nebo jen nÄkterÃ©, protoÅ¾e nechci dÄlat dump celÃ© databÃ¡ze pro RSS.\n\nPro Ãºplnost jeÅ¡tÄ \\Model\\Posts:\n\n```php\n<?php\n\nnamespace Model;\n\nclass Posts extends \\Nette\\Object {\n\n\t/** @var \\Nette\\Database\\SelectionFactory @inject */\n\tpublic $sf;\n\n\t/**\n\t * @return Nette\\Database\\Table\\Selection\n\t */\n\tpublic function getAllPosts() {\n\t\treturn $this->sf->table('posts');\n\t}\n\n}\n```\n\nA nÃ¡sledujÃ­ samotnÃ© Å¡ablony, kterÃ© musÃ­ dodrÅ¾ovat urÄitÃ½ formÃ¡t, takÅ¾e se lehce odliÅ¡ujÃ­ od normÃ¡lnÃ­ch Å¡ablon. Sitemap.latte:\n\n```html\n{contentType application/xml}\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n\t{foreach $sitemap as $s}\n\t\t<url>\n\t\t\t<loc>{link //Single:article $s->id}</loc>\n\t\t</url>\n\t{/foreach}\n</urlset>\n```\n\nRss.latte:\n\n```html\n{contentType application/xml}\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<rss version=\"2.0\">\n\t<channel>\n\t\t<title>Martin ZlÃ¡mal [BLOG]</title>\n\t\t<link>{link //:Homepage:default}</link>\n\t\t<description>NejnovÄjÅ¡Ã­ ÄlÃ¡nky na blogu.</description>\n\t\t<language>cs</language>\n\n\t\t<item n:foreach=\"$posts as $post\">\n\t\t\t<title>{$post->title}</title>\n\t\t\t<link>{link //:Single:article $post->id}</link>\n\t\t\t<description>{$post->body|texy|striptags}</description>\n\t\t</item>\n\t</channel>\n</rss>\n```\n\nA pro Ãºplnou Ãºplnost i router:\n\n```php\n<?php\n\nnamespace App;\nuse Nette;\nuse Nette\\Application\\Routers\\Route;\nuse Nette\\Application\\Routers\\RouteList;\nuse Nette\\Application\\Routers\\SimpleRouter;\n\nclass RouterFactory {\n\n\t/**\n\t * @return \\Nette\\Application\\IRouter\n\t */\n\tpublic function createRouter() {\n\t\t$router = new RouteList();\n\t\t$router[] = new Route('sitemap.xml', 'Homepage:sitemap');\n\t\t// na RSS se dÃ¡ odkazovat normÃ¡lnÄ bez routeru, nebo:\n\t\t$router[] = new Route('rss.xml', 'Homepage:rss');\n\t\t//...\n\t\t$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default');\n\t\treturn $router;\n\t}\n\n}\n```\n\nJednoduchÃ© a na pÃ¡r ÅÃ¡dek. Jen vÄdÄt jak na to... (-:","frontmatter":"id: 71e8347e-9bdb-4d81-a323-203be472f0ad\ntimestamp: 1376169022000\ntitle: RSS a Sitemap jednoduÅ¡e a rychle\nslug: rss-a-sitemap-jednoduse-a-rychle"},{"attributes":{"id":"16cdfe07-444b-48ee-ae7a-ff85893edba5","timestamp":1376166681000,"title":"Fluent interface a PCRE","slug":"fluent-interface-a-pcre"},"body":"Na nÃ¡sledujÃ­cÃ­ch ÅÃ¡dcÃ­ch pÅedvedu dvÄ vÄci. PrvnÃ­ je ÃºÅ¾asnÃ½ nÃ¡pad jak vytvÃ¡Ået regulÃ¡rnÃ­ vÃ½razy pomocÃ­ fluent zÃ¡pisu ([inspirace .{target:_blank}](https://github.com/VerbalExpressions/PHPVerbalExpressions/blob/master/VerbalExpressions.php)), coÅ¾ je druhÃ¡ vÄc o kterÃ© bych se rÃ¡d zmÃ­nil.\n\n# RegulÃ¡rnÃ­ vÃ½razy jsou peklo\n\nAÄkoliv znÃ¡m pÃ¡r lidÃ­, kterÃ© regulÃ¡rnÃ­ vÃ½razy umÃ­, je jich opravdu pÃ¡r. A nikdo z nich o sobÄ neÅekne, Å¾e je umÃ­. NÃ¡sleduje pÅÃ­klad velmi triviÃ¡lnÃ­ho vÃ½razu, kterÃ½ je ovÅ¡em dosti Å¡patnÃ½, coÅ¾ je dobÅe, protoÅ¾e se k tomu vrÃ¡tÃ­m pozdÄji:\n\n```\n/^(http)(s)?(\\:\\/\\/)(www\\.)?([^ ]*)(\\.)([^ ]*)(\\/)?$/\n```\n\nTento vÃ½raz akceptuje pÅibliÅ¾nÄ tvar URL. Je vÅ¡ak zÅejmÃ©, Å¾e je to zÃ¡pis, kterÃ½ je nesmÃ­rnÄ nÃ¡roÄnÃ½ na vymyÅ¡lenÃ­ a extrÃ©mnÄ nÃ¡chylnÃ½ ke tvoÅenÃ­ chyb. Proto je vhodnÃ© si jeho tvorbu zjednoduÅ¡it napÅÃ­klad nÄjakou tÅÃ­dou:\n\n```php\n<?php\n\nclass Regexp {\n\n\tprivate $regexp = '';\n\n\tpublic function has($value) {\n\t\t$this->regexp .= \"(\" . preg_quote($value, '/') . \")\";\n\t\t//return $this;   -   potÅebnÃ© pro fluent interface\n\t}\n\n\tpublic function maybe($value) {\n\t\t$this->regexp .= \"(\" . preg_quote($value, '/') . \")?\";\n\t\t//return $this;   -   potÅebnÃ© pro fluent interface\n\t}\n\n\tpublic function anythingBut($value) {\n\t\t$this->regexp .= \"([^\" . preg_quote($value, '/') . \"]*)\";\n\t\t//return $this;   -   potÅebnÃ© pro fluent interface\n\t}\n\n\tpublic function __toString() {\n\t\treturn \"/^$this->regexp$/\";\n\t}\n\n}\n```\n\nS tÃ­m, Å¾e jejÃ­ pouÅ¾itÃ­ je prostÃ©:\n\n```php\n$regexp = new Regexp();\n$regexp->then('http');\n$regexp->maybe('s');\n$regexp->then('://');\n$regexp->maybe('www.');\n$regexp->anythingBut(' ');\n$regexp->then('.');\n$regexp->anythingBut(' ');\n$regexp->maybe('/');\necho $regexp . '<br>';\necho preg_match($regexp, 'http://zlml.cz/') ? 'P' : 'F';\necho preg_match($regexp, 'https://zlml.cz/') ? 'P' : 'F';\n```\n\nNemusÃ­m vÅ¡ak ÅÃ­kat, Å¾e to minimÃ¡lnÄ vypadÃ¡ naprosto otÅesnÄ. Spousta psanÃ­, aÅ¾ moc objektovÃ© chovÃ¡nÃ­. ElegantnÄjÅ¡Ã­ ÅeÅ¡enÃ­ pÅinÃ¡Å¡Ã­ prÃ¡vÄ fluent interface.\n\n# Fluent interfaces, regulÃ¡rnÃ­ peklo chladne\n\nFluent interface je zpÅ¯sob jak ÅetÄzit metody za sebe. PouÅ¾Ã­vÃ¡ se pomÄrnÄ Äasto, uÅ¡etÅÃ­ spoustu zbyteÄnÃ©ho psanÃ­ a velmi prospÃ­vÃ¡ srozumitelnosti kÃ³du. NevÃ½hodou je, Å¾e se musÃ­ v kaÅ¾dÃ© metodÄ vrÃ¡tit objekt <code>return $this;</code>, na coÅ¾ se nesmÃ­ zapomenout. KaÅ¾dopÃ¡dnÄ vÃ½sledek je skvostnÃ½:\n\n```php\n$regexp = new Regexp();\n$regexp->then('http')\n\t\t->maybe('s')\n\t\t->then('://')\n\t\t->maybe('www.')\n\t\t->anythingBut(' ')\n\t\t->then('.')\n\t\t->anythingBut(' ')\n\t\t->maybe('/');\necho $regexp . '<br>';\necho preg_match($regexp, 'http://zlml.cz/') ? 'P' : 'F';\necho preg_match($regexp, 'https://zlml.cz/') ? 'P' : 'F';\n```\n\nTeprve zde vynikne to, jak je dÅ¯leÅ¾itÃ© sprÃ¡vnÄ (Äti struÄnÄ a jasnÄ) pojmenovÃ¡vat metody. DÃ­ky fluent interfaces lze programovat tÃ©mÄÅ ve vÄtÃ¡ch, kterÃ© jsou naprosto srozumitelnÃ©.\n\n# Ne, peklo je opÄt peklem\n\nAÄkoliv by se mohlo zdÃ¡t, Å¾e dÃ­ky objektu, kterÃ½ pomÃ¡hÃ¡ tvoÅit regulÃ¡rnÃ­ vÃ½razy je jejich kompozice jednoduchou zÃ¡leÅ¾itostÃ­, nenÃ­ tomu tak. VrÃ¡tÃ­m se k pÅ¯vodnÃ­mu vÃ½razu, kterÃ½ nenÃ­ dobrÃ½. ProÄ? V reÃ¡lnÃ©m svÄtÄ je kontrola, resp. pÅedpis, kterÃ½ musÃ­ danÃ¡ adresa mÃ­t daleko sloÅ¾itÄjÅ¡Ã­. NapÅÃ­klad <code>http</code> nemusÃ­ bÃ½t vÅ¯bec pÅÃ­tomno, pokud vÅ¡ak je, musÃ­ nÃ¡sledovat moÅ¾nÃ¡ <code>s</code> a zcela urÄitÄ <code>://</code>. To samÃ© s domÃ©nou. Ta mÅ¯Å¾e bÃ½t jen urÄitÃ½ poÄet znakÅ¯ dlouhÃ¡, mÅ¯Å¾e obsahovat teÄky (ale ne neomezenÃ© mnoÅ¾stvÃ­), samotnÃ¡ TLD mÃ¡ takÃ© urÄitÃ¡ pravidla (minimÃ¡lnÄ co se tÃ½Äe dÃ©lky) a to nemluvÃ­m o parametrech za adresou, kterÃ© jsou tÃ©mÄÅ bez limitu.\n\nZkuste si takovÃ½ objekt napsat. Ve vÃ½sledku se i nadÃ¡le budou regulÃ¡rnÃ­ vÃ½razy psÃ¡t ruÄnÄ, nebo se ve sloÅ¾itÄjÅ¡Ã­ch pÅÃ­padech vÅ¯bec pouÅ¾Ã­vat nebudou.","frontmatter":"id: 16cdfe07-444b-48ee-ae7a-ff85893edba5\ntimestamp: 1376166681000\ntitle: Fluent interface a PCRE\nslug: fluent-interface-a-pcre"},{"attributes":{"id":"314fff27-204c-449e-9975-572db54475a2","timestamp":1375611559000,"title":"RoutovÃ¡nÃ­ v Nette - prakticky","slug":"routovani-v-nette-prakticky"},"body":"<div class=\"alert alert-success\">Tento ÄlÃ¡nek byl naposledy revidovÃ¡n, aktualizovÃ¡n a rozÅ¡Ã­Åen <strong>27. Äervna 2014</strong>...</div>\n\nV nÃ¡sledujÃ­cÃ­m ÄlÃ¡nku se budu opÃ­rat o teorii napsanou v [dokumentaci](http://doc.nette.org/cs/routing).\nJelikoÅ¾ jsem se vÅ¡ak Nette uÄil sÃ¡m, tak vÃ­m jak je tÄÅ¾kÃ© routovÃ¡nÃ­ pochopit\na zvlÃ¡Å¡Å¥ potom z dokumentace, kterÃ¡ spÃ­Å¡e ukazuje fiÄury, neÅ¾ jak na to. A vzhledem k tomu, Å¾e mi\npod rukama proÅ¡lo velkÃ© mnoÅ¾stvÃ­ velmi rÅ¯znorodÃ½ch aplikacÃ­, kÃ¡d bych zde uvedl pÅÃ­klady\nadresÃ¡ÅovÃ© struktury, rout pro danÃ½ praktickÃ½ problÃ©m a vzniklÃ© URL adresy.\nZaÄÃ­nÃ¡ pÅehlÃ­dka nÄkolika moÅ¾nÃ½ch rout. MyslÃ­m si, Å¾e celÃ¡ Åada pÅÃ­kladÅ¯ bude uÅ¾iteÄnÄjÅ¡Ã­, neÅ¾ teorie.\n\nZÃ¡klad vÅ¡eho je porozumÄt tomu, jak se v Nette vytvÃ¡ÅÃ­ [odkazy](http://doc.nette.org/cs/presenters#toc-vytvareni-odkazu).\nOd toho se velmi podobnÄ sestavujÃ­ obecnÃ© routy tak, aby alespoÅ jedna sedÄla svÃ½m tvarem na danÃ½ odkaz.\n\n# PrvnÃ­ kroky\n\nZaÄnÄme jednoduchou statickou strÃ¡nkou, kterÃ¡ mÃ¡ tuto jednoduchou adresÃ¡Åovou strukturu:\n\n```\napp/\nââââ config/\nââââ model/\nââââ presenters/\nâ     âââ HomepagePresenter.php\nâ\nââââ router/\nââââ templates/\nâ     âââ Homepage/\nâ     â    âââ kontakt.latte   (zde jednotlivÃ© strÃ¡nky statickÃ©ho webu)\nâ     â    âââ ...\nâ     âââ @layout.latte\nâ\nââââ bootstrap.php\n```\n\nTo znamenÃ¡, Å¾e ne kaÅ¾dou strÃ¡nku se budu odkazovat pÅibliÅ¾nÄ jako <code>Homepage:kontakt</code>. SamozÅejmÄ \nvÅ¾dy se zÃ¡mÄnou Å¡ablony (v tomto pÅÃ­padÄ kontakt - kontakt.latte). To je dost triviÃ¡lnÃ­ a staÄilo by napÅÃ­klad:\n\n```php\n$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default');\n```\n\nTo je sice funkÄnÃ­, bohuÅ¾el je to spÃ­Å¡e teoretickÃ¡ routa, protoÅ¾e vÃ½sledek je otÅesnÃ½:\n\n```\nhttp://zlml.cz/homepage/kontakt\n```\n\nTuto routu pÃ­Å¡u tÃ©mÄÅ vÅ¡ude. Je to routa velmi obecnÃ¡ a ÅÃ­kÃ¡ pÅibliÅ¾nÄ nÃ¡sledujÃ­cÃ­:\nBude-li se nÄkdo odkazovat v obecnÃ©m tvaru `Presenter:view`, pochop `Presenter` jako nÃ¡zev presenteru (napÅ. **Homepage**Presenter) a hledej tedy soubor `HomepagePresenter.php`\na `view` bude Å¡ablona presenteru, hledej ji tedy ve sloÅ¾ce `Presenter/view.latte` a sestav URL kterÃ¡ bude pÅesnÄ v tomto tvaru.\nHomepage:default pouze ÅÃ­kÃ¡ co je vÃ½chozÃ­ hodnota a co se mÃ¡ hledat, pokud nebude specifikovÃ¡na konkrÃ©tnÃ­ Å¡ablona.\n\nPro takto malÃ½ web je mnohem lepÅ¡Ã­ specifikovat konkrÃ©tnÄjÅ¡Ã­ routu, kterÃ¡ pÅijde **pÅed** onu obecnou:\n\n```php\n$router[] = new Route('<action>', 'Homepage:default');\n```\n\nCoÅ¾ udÄlÃ¡ tÃ©mÄÅ to samÃ©, jen vypustÃ­ z URL nadbyteÄnou informaci o presenteru. VÅ¾dy pouÅ¾Ã­vÃ¡me HomepagePresenter, jen\nse mÄnÃ­ cÃ­lovÃ¡ Å¡ablona podle URL:\n\n```\nhttp://zlml.cz/kontakt\n```\n\nVÃ½slednÃ¡ sada rout pro takovouto malou statickou strÃ¡nku by tedy mohla vypadat takto:\n\n```php\npublic function createRouter() {\n\t$router = new RouteList();\n\t$router[] = new Route('<action>', 'Homepage:default');\n\t$router[] = new Route('<presenter>/<action>[/<id>]', 'Homepage:default');\n\treturn $router;\n}\n```\n\nDÃ¡le je vhodnÃ© pouÅ¾Ã­vat napÅ. soubor <code>sitemap.xml</code>. Pokud ho takÃ© umÃ­stÃ­m do stejnÃ©ho adresÃ¡Åe jako Å¡ablony, routa je opÄt jednoduchÃ¡:\n\n```php\n$router[] = new Route('sitemap.xml', 'Homepage:sitemap');\n```\n\nHledÃ¡ se Å¡ablona <code>sitemap.latte</code>. PÅeÄtÄte si jak vytvoÅit tuto Å¡ablonu v ÄlÃ¡nku [RSS a Sitemap jednoduÅ¡e a rychle](rss-a-sitemap-jednoduse-a-rychle). VÃ½slednÃ¡ URL je tak jak mÃ¡ bÃ½t:\n\n```\nhttp://zlml.cz/sitemap.xml\n```\n\nTo samÃ© lze udÄlal pro RSS.\n\n# Jdeme do hloubky\n\nTroÅ¡ku sloÅ¾itÄjÅ¡Ã­ routovÃ¡nÃ­ pÅichÃ¡zÃ­ vÅ¾dy kdyÅ¾ chcete udÄlat nÄco speciÃ¡lnÃ­ho.\nNapÅÃ­klad to, aby ÄÃ­slo za URL udÃ¡valo ÄÃ­slo strÃ¡nky v paginatoru:\n\n```\nhttp://zlml.cz/2\n```\n\n```php\n$router[] = new Route(\"[<paginator-page [1](2)>]\", array(\n\t'presenter' => 'Homepage',\n\t'action' => 'default',\n\t'paginator-page' => 1\n));\n```\n\nZde uÅ¾ je nutnÃ© druhÃ½ parametr rozepsat a vÃ­ce specifikovat. Toto akceptuje pouze konkrÃ©tnÃ­ ÄÃ­sla.\na jako druhou specialitu lze napsat takovou routu, kterÃ¡ bude tvoÅit URL z nÃ¡zvÅ¯ ÄlÃ¡nkÅ¯:\n\n```\nhttp://zlml.cz/using-fulltext-searching-with-innodb\n```\n\n```php\n$router[] = new Route('<id>', array(\n\t'presenter' => 'Single',\n\t'action' => 'article',\n\t'id' => array(\n\t\tRoute::FILTER_IN => function ($url) {\n\t\t\treturn $this->posts->getIdByUrl($url);\n\t\t},\n\t\tRoute::FILTER_OUT => function ($id) {\n\t\t\treturn $this->posts->getUrlById($id);\n\t\t},\n\t),\n));\n```\n\nA nenÃ­ ÃºplnÄ na Å¡kodu vytvoÅit routu, kterÃ¡ bude ÅeÅ¡it naprÃ­klad vyhledÃ¡vÃ¡nÃ­:\n\n```\nhttp://zlml.cz/search/fio%20api\n```\n\n```php\n$router[] = new Route('search[/<search>]', 'Search:default');\n```\n\nToto jsou jednoduchÃ© routy pro jednoduchou adresÃ¡Åovou strukturu. Lehce sloÅ¾itÄjÅ¡Ã­ jsou pro\nmodulÃ¡rnÃ­ strukturu, kdy je zapotÅebÃ­ specifikovat modul:\n\n```\nhttp://zlml.cz/rss.xml\n```\n\n```php\n$router[] = new Route('rss.xml', 'Front:Blog:rss');\n```\n\nChovÃ¡ se to stejnÄ jako u pÅedchozÃ­ho pÅÃ­kladu se `sitemap.xml`, v tomto pÅÃ­kladu vÅ¡ak routa hledÃ¡ `BlogPresenter.php` ve sloÅ¾ce `FrontModule` a Å¡ablonu `rss.latte`, takÃ© v tomto modulu. U rout pro modulÃ¡rnÃ­ aplikace jiÅ¾ radÄji rozepisuji druhÃ½ parametr, protoÅ¾e je to pÅehlednÄjÅ¡Ã­. NÃ¡sledujÃ­cÃ­ routa zvlÃ¡dne jazykovÃ© mutace pro FrontModul, jinak je to opÄt ta nejobecnÄjÅ¡Ã­ routa vÅ¯bec:\n\n```\nhttp://zlml.cz/en/site/kontakt\n```\n\n```php\n$router[] = new Route('[<lang cs|sk|en>/]<presenter>/<action>[/<id>]', array(\n\t'module' => 'Front',\n\t'presenter' => 'Homepage',\n\t'action' => 'default',\n));\n```\n\nTo samÃ©, ale opÄt o troÅ¡ku nÃ¡roÄnÄjÅ¡Ã­. TentokrÃ¡t pro UserModule, kterÃ½ je na jinÃ© URL, neÅ¾ FrontModule:\n\n```\nhttp://zlml.cz/user/en/setting/password\n```\n\n```php\n$router[] = new Route('user/[<lang cs|sk|en>/]<presenter>/<action>[/<id [0-9]+>]', array(\n\t'module' => 'User',\n\t'presenter' => 'Board',\n\t'action' => 'default',\n));\n```\n\nA na zÃ¡vÄr jeÅ¡tÄ poslednÃ­ pÅehled moÅ¾nÃ½ch rout jako pÅÃ­klady toho co je moÅ¾nÃ©.\n\n```php\n$router[] = new Route('sitemap.xml', 'Front:Export:sitemap');\n$router[] = new Route('kategorie/<category>', 'Front:Product:default');\n$router[] = new Route('produkt/<product>', 'Front:Product:detail');\n$router[] = new Route('', 'Front:Product:default');\n$router[] = new Route('admin/sign-<action>', 'Admin:Sign:');\n$router[] = new Route('registrace/', 'Front:Register:new');\n$router[] = new Route('index.php', 'Homepage:default', Route::ONE_WAY);\n$router[] = new CliRouter(array('action' => 'Cli:Cli:cron'));\n$router[] = new \\App\\RestRouter('api[/<presenter>[/<id>]]', array( //vyÅ¾aduje speciÃ¡lnÃ­ objekt (nenÃ­ souÄÃ¡stÃ­ Nette)\n\t'module' => 'Rest',\n\t'presenter' => 'Resource',\n\t'action' => 'get',\n), \\App\\RestRouter::RESTFUL);\n```\n\nJe zcela zÅejmÃ©, Å¾e se vÅ¡echny konstrukce stÃ¡le opakujÃ­, proto povaÅ¾uji za opravdu dÅ¯leÅ¾itÃ©\nperfektnÄ pochopit tvorbu odkazÅ¯ a nÃ¡slednÄ je to moÅ¾nÃ¡ trochu o experimentovÃ¡nÃ­, ale s\ntouto sadou pÅÃ­kladÅ¯ bude myslÃ­m jednoduchÃ© najÃ­t podobnou routu, jakÃ¡ je zrovna potÅeba.\n\nJak na v poslednÃ­m pÅÃ­kladu zmÃ­nÄnÃ½ CLI router se doÄtete v ÄlÃ¡nku [Nette 2.1-dev CliRouter](nette-2-1-dev-clirouter).\n\nMÃ¡te nÄjakou zajÃ­mavou routu? PodÄlte se o ni... (-:","frontmatter":"id: 314fff27-204c-449e-9975-572db54475a2\ntimestamp: 1375611559000\ntitle: RoutovÃ¡nÃ­ v Nette - prakticky\nslug: routovani-v-nette-prakticky"},{"attributes":{"id":"17782730-319b-40ea-92d0-e33c84b32e29","timestamp":1375215333000,"title":"ProblÃ©my fulltextu v Nette","slug":"problemy-fulltextu-v-nette"},"body":"NedÃ¡vno jsem psal o tom, jak vyuÅ¾Ã­vat fulltext indexy na InnoDB tabulkÃ¡ch (http://zlml.cz/using-fulltext-searching-with-innodb).\nNenÃ­ to nic pÅevratnÃ©ho, ale kaÅ¾dÃ½ den se to takÃ© nedÄlÃ¡. ZmÃ­nil jsem takÃ©, jak vyhledÃ¡vat, coÅ¾\nbylo ÅeÅ¡enÃ­ [Jakuba VrÃ¡ny .{target:_blank}](http://php.vrana.cz/fulltextove-vyhledavani-v-mysql.php).\n\nV diskusi pod ÄlÃ¡nkem zmÃ­Åka o tom, jak oÅ¡etÅit pÅÃ­pad, kdy databÃ¡ze nevracÃ­ vÃ½sledky pro slova,\nkterÃ¡ jsou kratÅ¡Ã­ neÅ¾ je hodnota **ft_min_word_len**. Implementace pro Nette nebude nijak zvlÃ¡Å¡Å¥\nrozdÃ­lnÃ¡, avÅ¡ak i zde existuje minimÃ¡lnÄ jedna zrÃ¡dnost.\n\n# Nette, ty jedna zrÃ¡dnÃ¡ bestie...\n\n\nPro dotazovÃ¡nÃ­ vyuÅ¾Ã­vÃ¡m databÃ¡zovou vrstvu \\Nette\\Database, coÅ¾ je rozÅ¡Ã­ÅenÃ­ (nadstavba) pro PDO.\nS oblibou takÃ© vyuÅ¾Ã­vÃ¡m fluid zÃ¡pis a spolÃ©hÃ¡m na automatickÃ© oÅ¡etÅenÃ­ vstupÅ¯. A zde je prÃ¡vÄ kÃ¡men Ãºrazu.\nNette je mÃ­sty aÅ¾ pÅÃ­liÅ¡ dÅ¯kladnÃ© (coÅ¾ je dobÅe), ale v tomto pÅÃ­padÄ to znemoÅ¾Åuje korektnÃ­\npouÅ¾itÃ­ **REGEXP**.\n\nBÄÅ¾nÃ½ kÃ³d pro fultextovÃ© dotazovÃ¡nÃ­ mÅ¯Å¾e vypadat takto:\n\n```php\n/** @var Nette\\Database\\SelectionFactory @inject */\npublic $sf;\n    \n$this->sf->table('mirror_posts')\n\t->where(\"MATCH(title, body) AGAINST (? IN BOOLEAN MODE)\", $search)\n\t->order(\"5 * MATCH(title) AGAINST (?) + MATCH(body) AGAINST (?) DESC\", $search, $search)\n\t->limit(50);\n```\n\nCoÅ¾ vygeneruje pÅibliÅ¾nÄ pÅesnÄ nÃ¡sledujÃ­cÃ­:\n\n```sql\nSELECT `id`, `title`, `body` \nFROM `mirror_posts` \nWHERE (MATCH(`title`, `body`) AGAINST ('api' IN BOOLEAN MODE)) \nORDER BY 5 * MATCH(`title`) AGAINST ('api') + MATCH(`body`) AGAINST ('api') DESC \nLIMIT 50\n```\n\nBohuÅ¾el tento dotaz nevrÃ¡tÃ­ nic. Je to prÃ¡vÄ kvÅ¯li hodnotÄ **ft_min_word_len**, kterou mÃ¡m nastavenou\nna 4. TakÅ¾e mÅ¯Å¾u zmÄnit tuto hodnotu, a nebo pro vÅ¡echny slova, kterÃ¡ jsou kratÅ¡Ã­ neÅ¾ 4 znaky\nposklÃ¡dÃ¡m sloÅ¾itÄjÅ¡Ã­ dotaz:\n\n```php\n$where = \"\";\n//$ft_min_word_len = mysql_result(mysql_query(\"SHOW VARIABLES LIKE 'ft_min_word_len'\"), 0, 1);\n$ft_min_word_len = 4;\npreg_match_all(\"~[\\\\pL\\\\pN_]+('[\\\\pL\\\\pN_]+)*~u\", stripslashes($search), $matches);\nforeach ($matches[0] as $part) {\n\tif (iconv_strlen($part, \"utf-8\") < $ft_min_word_len) {\n\t\t$regexp = \"REGEXP '[[:<:]]\" . addslashes($part) . \"[[:>:]]'\";\n\t\t$where .= \" OR (title $regexp OR body $regexp)\";\n\t}\n}\n```\n\nA doplnÃ­me fluidnÃ­ dotaz:\n\n```php\n...\n->where(\"MATCH(title, body) AGAINST (? IN BOOLEAN MODE)$where\", $search) //pÅidÃ¡no $where\n...\n```\n\nNynÃ­ budu vyhledÃ¡vat stejnÃ½ vÃ½raz a to automaticky posklÃ¡danÃ½m dotazem:\n\n```sql\nSELECT `id` \nFROM `mirror_posts` \nWHERE (MATCH(`title`, `body`) AGAINST ('api' IN BOOLEAN MODE) OR (`title` REGEXP '[[:<:]]`api`[[:>:]]' OR `body` REGEXP '[[:<:]]`api`[[:>:]]')) \nORDER BY 5 * MATCH(`title`) AGAINST ('api') + MATCH(`body`) AGAINST ('api') DESC \nLIMIT 50\n```\n\nBohuÅ¾el, ani tento dotaz nevrÃ¡tÃ­ strÃ¡vnÃ½ vÃ½sledek, aÄkoliv se tvÃ¡ÅÃ­, Å¾e by mÄl.\nDÅ¯vodem jsou zpÄtnÃ© uvozovky v regulÃ¡rnÃ­m vÃ½razu **''[[:<:]]`api`[[:>:]]''**.\n\nÅeÅ¡enÃ­ je zÅejmÄ nÄkolik. NapÅÃ­klad posklÃ¡dat si tento dotaz sÃ¡m. OvÅ¡em to nenÃ­ ta nejbezpeÄnÄjÅ¡Ã­ cesta.\nEscapovÃ¡nÃ­ je zrÃ¡dnÃ© a zrovna vyhledÃ¡vÃ¡nÃ­ je jedna z nejvÃ­ce pouÅ¾Ã­vanÃ½ch vÄcÃ­, kdy se uÅ¾ivatel\npÅÃ­mo ptÃ¡ databÃ¡ze. Existuje vÅ¡ak vyÄÅ¯ranÄjÅ¡Ã­ zpÅ¯sob.\n\nCo jsem tak vypozoroval, tak Nette se sice o escapovÃ¡nÃ­ snaÅ¾Ã­, ale neescapuje vÃ½raz zapsanÃ½ pomocÃ­\n<em>strtoupper()</em>. Tzn. Å¾e staÄÃ­ zmÄnit tvorbu vÃ½razu:\n\n```php\n$regexp = \"REGEXP '[[:<:]]\" . addslashes(strtoupper($part)) . \"[[:>:]]'\";\n```\n\nA dotaz se nÃ¡slednÄ posklÃ¡dÃ¡ strÃ¡vnÄ:\n\n```sql\nSELECT `id`, `title`, `body` \nFROM `mirror_posts` \nWHERE (MATCH(`title`, `body`) AGAINST ('api' IN BOOLEAN MODE) OR (`title` REGEXP '[[:<:]]API[[:>:]]' OR `body` REGEXP '[[:<:]]API[[:>:]]')) \nORDER BY 5 * MATCH(`title`) AGAINST ('api') + MATCH(`body`) AGAINST ('api') DESC \nLIMIT 50\n```\n\nTo Å¾e je ÄÃ¡st vÃ½razu jinÃ¡ neÅ¾ ve skuteÄnosti nevadÃ­. NevÃ­m jestli je case-insensitive chovÃ¡nÃ­\nvlastnost REGEXP, ale tabulkou s postfixem **_ci** se takÃ© nic nezkazÃ­.\n\nJen mÄ tak napadÃ¡, proÄ se to chovÃ¡ tak zvlÃ¡Å¡tnÄ. Uspokojuji se tÃ­m, Å¾e zpÄtnÃ¡ uvozovka\nnenÃ­ ÃºplnÄ souÄÃ¡stÃ­ escapovÃ¡nÃ­, takÅ¾e se nenÃ­ Äeho bÃ¡t (a prvnÃ­ regulÃ¡r v PHP takÃ© nepustÃ­ vÅ¡e),\nale je to divnÃ©.","frontmatter":"id: 17782730-319b-40ea-92d0-e33c84b32e29\ntimestamp: 1375215333000\ntitle: ProblÃ©my fulltextu v Nette\nslug: problemy-fulltextu-v-nette"},{"attributes":{"id":"30938e58-9de3-403e-a862-493564630ddd","timestamp":1375126671000,"title":"Using fulltext searching with InnoDB","slug":"using-fulltext-searching-with-innodb"},"body":"Sometimes is quite useful to use InnoDB engine. \nUnfortunately InnoDB is good for tables with foreign keys, but useless for fulltext search. \nYou can't create fulltext index on InnoDB tables, but you can create this index on MyISAM tables. \nUnfortunately you can't create foreign keys on MyISAM. It's starting to be quite embarassing. \nLet me show you how to search via fulltext on InnoDB tables.\n\nIn fact it's not possible to use fulltext index on InnoDB tables, \nbut there is possible workaround. At first you need a classic InnoDB structure. \nFor example database of  blog:\n\n```sql\nSET NAMES utf8;\nSET foreign_key_checks = 0;\nSET time_zone = 'SYSTEM';\nSET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';\n\nDROP TABLE IF EXISTS `posts`;\nCREATE TABLE `posts` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` text NOT NULL,\n  `body` text NOT NULL,\n  `date` datetime NOT NULL,\n  `release_date` datetime NOT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `title_3` (`title`(200))\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nDROP TABLE IF EXISTS `tags`;\nCREATE TABLE `tags` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(50) NOT NULL,\n  `color` varchar(6) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nDROP TABLE IF EXISTS `posts_tags`;\nCREATE TABLE `posts_tags` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `tag_id` int(11) NOT NULL,\n  `post_id` int(11) NOT NULL,\n  PRIMARY KEY (`id`),\n  KEY `tag_id` (`tag_id`),\n  KEY `post_id` (`post_id`),\n  CONSTRAINT `posts_tags_ibfk_1` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`),\n  CONSTRAINT `posts_tags_ibfk_2` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n\nNow we have pretty simple database structure with InnoDB tables with foreign keys. \nIt would be nice to be able search on database table **posts** using fulltext search:\n\n```sql\nSELECT *\nFROM posts\nWHERE MATCH(title, body) AGAINST ('something' IN BOOLEAN MODE);\n```\n\nBut it is not possible. It returns something like:\n>   Error in query: The used table type doesn't support FULLTEXT indexes\n\nLet's create another one table with triggers and fulltext indexes. \nWe need to create mirror table. For example:\n\n```sql\nDROP TABLE IF EXISTS `mirror_posts`;\nCREATE TABLE `mirror_posts` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` text NOT NULL,\n  `body` text NOT NULL,\n  PRIMARY KEY (`id`),\n  FULLTEXT KEY `title_body` (`title`,`body`),\n  FULLTEXT KEY `title` (`title`),\n  FULLTEXT KEY `body` (`body`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8;\n```\n\nAnd than we need to create triggers:\n\n```sql\nDELIMITER ;;\n\nCREATE TRIGGER `insert_posts` AFTER INSERT ON `posts` FOR EACH ROW\nINSERT INTO mirror_posts VALUES (NEW.id, NEW.title, NEW.body);;\n\nCREATE TRIGGER `update_posts` AFTER UPDATE ON `posts` FOR EACH ROW\nUPDATE mirror_posts SET\n    id = NEW.id,\n    title = NEW.title,\n    body = NEW.body\nWHERE id = OLD.id;;\n\nCREATE TRIGGER `delete_posts` AFTER DELETE ON `posts` FOR EACH ROW\nDELETE FROM mirror_posts WHERE id = OLD.id;;\n```\n\nIt means, that we copy all of events and data from table **posts** to the table **mirror_posts**.\nFinally we can use more complex fulltext search feature:\n\n```sql\nSELECT *\nFROM mirror_posts\nWHERE MATCH(title, body) AGAINST ('something' IN BOOLEAN MODE)\nORDER BY 5 * MATCH(title) AGAINST ('something') + MATCH(body) AGAINST ('something') DESC;\n```\n\nAs I said, this is just workaround, not solution. \nSometimes it's bad practice, because you need copy of indexed columns. \nBut it works. And for small blogs it's sufficient.","frontmatter":"id: 30938e58-9de3-403e-a862-493564630ddd\ntimestamp: 1375126671000\ntitle: Using fulltext searching with InnoDB\nslug: using-fulltext-searching-with-innodb"},{"attributes":{"id":"d9072c23-be9d-4f6a-a89c-565595c73b84","timestamp":1375087004000,"title":"TÅÃ­da pro pÅipojenÃ­ k FIO API","slug":"trida-pro-pripojeni-k-fio-api"},"body":"DalÅ¡Ã­ uÅ¾iteÄnÃ½ Ãºryvek, kterÃ½ je Å¡koda nechat leÅ¾et v Git repozitÃ¡ÅÃ­ch.\nA opÄt uzpÅ¯sobenÃ½ pro pouÅ¾Ã­vÃ¡nÃ­ s Nette FW.\n\nNedÃ¡vno jsem psal o tom, jak pouÅ¾Ã­vat CLI router v Nette (http://zlml.cz/nette-2-1-dev-clirouter).\nPrÃ¡vÄ pomocÃ­ tohoto routeru je vhodnÃ© kontrolovat bankovnÃ­ vÃ½pisy - napÅÃ­klad pomocÃ­ cronu:\n\n```php\n<?php\n\nnamespace App\\CliModule;\n\nuse Nette;\nuse Nette\\Diagnostics\\Debugger;\n\n/**\n * Class CliPresenter\n * @package App\\CliModule\n */\nclass CliPresenter extends BasePresenter {\n\n        /** @var \\Fio @inject */\n        public $fio;\n        ...\n\n        public function actionCron() {\n                $this->checkFio(); // FIO vs. nezaplacenÃ© objednÃ¡vky\n                ...\n                $this->terminate();\n        }\n\n        /**\n         * Zkontroluje bankovnÃ­ ÃºÄet, porovnÃ¡ s databÃ¡zÃ­ a zaplacenÃ© objednÃ¡vky zmÄnÃ­ na status PAID.\n         */\n        private function checkFio() {\n                try {\n                        $transactions = $this->fio->transactions();\n                        $unpaid = $this->orders->selectUnpaidOrders(); //zÃ­skÃ¡nÃ­ nezaplacenÃ½ch objednÃ¡vek\n                        //array_intersect() - zde samotnÃ© zpracovÃ¡nÃ­\n                        ...\n                } catch (\\Exception $exc) {\n                        Debugger::log($exc->getMessage() . ' FILE: ' . $exc->getFile() . ' on line: ' . $exc->getLine(), Debugger::WARNING);\n                        echo $exc->getMessage() . EOL;\n                }\n        }\n}\n```\n\nK tomu se hodÃ­ prÃ¡vÄ nÃ¡sledujÃ­cÃ­ tÅÃ­da:\n\n```php\n<?php\n\n/**\n * Class Fio\n */\nclass Fio extends \\Nette\\Object {\n\n        private $token;\n        private $rest_url = 'https://www.fio.cz/ib_api/rest/';\n\n        /**\n         * @param string $token SECURE\n         */\n        public function __construct($token) {\n                $this->token = $token;\n        }\n\n        /**\n         * Pohyby na ÃºÄtu za urÄenÃ© obdobÃ­.\n         * JSON only!\n         * @param string $from\n         * @param string $to\n         * @return array|mixed\n         */\n        public function transactions($from = '-1 month', $to = 'now') {\n                $from = \\Nette\\DateTime::from($from)->format('Y-m-d');\n                $to = \\Nette\\DateTime::from($to)->format('Y-m-d');\n                $url = $this->rest_url . 'periods/' . $this->token . '/' . $from . '/' . $to . '/transactions.json';\n                return $this->parseJSON($this->download($url));\n        }\n\n        /**\n         * OficiÃ¡lnÃ­ vÃ½pisy pohybÅ¯ z ÃºÄtu.\n         * JSON only!\n         * @param $id\n         * @param null $year\n         * @return array|mixed\n         */\n        public function transactionsByID($id, $year = NULL) {\n                if ($year === NULL) {\n                        $year = date('Y');\n                }\n                $url = $this->rest_url . 'by-id/' . $this->token . '/' . $year . '/' . $id . '/transactions.json';\n                return $this->parseJSON($this->download($url));\n        }\n\n        /**\n         * Pohyby na ÃºÄtu od poslednÃ­ho staÅ¾enÃ­.\n         * JSON only!\n         * @return array|mixed\n         */\n        public function transactionsLast() {\n                $url = $this->rest_url . 'last/' . $this->token . '/transactions.json';\n                return $this->parseJSON($this->download($url));\n        }\n\n        /**\n         * @param $url\n         * @return mixed\n         * @throws \\Exception\n         */\n        private function download($url) {\n                if (!extension_loaded('curl')) {\n                        throw new \\Exception('Curl extension, does\\'t loaded.');\n                }\n                $curl = curl_init();\n                curl_setopt($curl, CURLOPT_URL, $url);\n                curl_setopt($curl, CURLOPT_HEADER, FALSE);\n                curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);\n                curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);\n                curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);\n                $result = curl_exec($curl);\n                return $result;\n                //return file_get_contents($url); //ALTERNATIVE\n        }\n\n        /**\n         * @param $data\n         * @return array|mixed\n         */\n        private function parseJSON($data) {\n                $json = json_decode($data);\n                if($json === NULL) {\n                        //Moc ryhlÃ© poÅ¾adavky na Fio API\n                        throw new \\Exception('Fio API overheated. Please wait...');\n                        //KdyÅ¾ se posÃ­lÃ¡ stÃ¡le moc poÅ¾adavkÅ¯, tak se to z Exception nikdy nevyhrabe. MusÃ­ se opravdu poÄkat.\n                }\n                if(!$json->accountStatement->transactionList) {\n                        return $json; // There are no transactions (header only)\n                }\n                $payments = array();\n                foreach ($json->accountStatement->transactionList->transaction as $row) {\n                        $out = array();\n                        foreach ($row as $column) {\n                                if ($column) {\n                                        $out[$column->id] = $column->value; //v $column->name je nÃ¡zev poloÅ¾ky\n                                        /*\n                                         * 0  - Datum\n                                         * 1  - ÄÃ¡stka (!)\n                                         * 5  - VariabilnÃ­ symbol (!)\n                                         * 14 - MÄna (!)\n                                         * Hodnoty (!) se musÃ­ pouÅ¾Ã­t ke kontrole sprÃ¡vnosti...\n                                         */\n                                }\n                        }\n                        array_push($payments, $out);\n                }\n                return $payments;\n        }\n\n}\n```\n\nS tÃ­m, Å¾e je zapotÅebÃ­ pÅedat FIO klÃ­Ä z neonu. FIO tÅÃ­da se automaticky injectuje, tzn. Å¾e i konstruktor\ntÃ©to tÅÃ­dy bude doplnÄn automaticky. Je jen zapotÅebÃ­ pÅidat do neonu onu konfiguraci:\n\n```neon\nparameters:\n\tfio_token: '' #token pro pÅÃ­stup do FIO banky\n    \n...\n\nservices:\n\t- Fresh\\Fio(token: %fio_token%)\n    \n...\n```\n\nBylo by vhodnÃ© upozornit na fakt, Å¾e se jednÃ¡ pouze o read-only pÅÃ­stup, tzn. Å¾e neexistujÃ­ Å¾Ã¡dnÃ© funkce\npro zÃ¡pis (aÄkoliv existuje nÄco jako datumovÃ¡ zarÃ¡Å¾ka). DÃ­ky tomu je moÅ¾nÃ© pouÅ¾Ã­t takovÃ©to nÃ­zkoÃºrovÅovÃ©\nzabezpeÄenÃ­ pomocÃ­ jednoho tokenu.","frontmatter":"id: d9072c23-be9d-4f6a-a89c-565595c73b84\ntimestamp: 1375087004000\ntitle: TÅÃ­da pro pÅipojenÃ­ k FIO API\nslug: trida-pro-pripojeni-k-fio-api"},{"attributes":{"id":"a285c880-267e-4070-9139-98b86d63772e","timestamp":1375044812000,"title":"CRON validÃ¡tor","slug":"cron-validator"},"body":"A jak uÅ¾ to tak bÃ½vÃ¡, tak opÄt ohnutÃ½ pro Nette. TentokrÃ¡te inspirovanÃ½ ÅeÅ¡enÃ­m ISPConfigu.\n\n# MÅ¯Å¾eÅ¡ tohle, nesmÃ­Å¡ tamto\n\n\nSamotnÃ½ CRON zÃ¡pis je velmi rozmanitÃ½ a proto se omezÃ­m pouze na zÃ¡kladnÃ­ poÅ¾adavky:\n\n1.  obecnÄ jsou povolenÃ© znaky <code>0-9</code>, <code>ÄÃ¡rka</code>, <code>*</code>, <code>-</code>, <code>/</code>\n2.  <code>ÄÃ¡rka</code>, <code>-</code> a <code>/</code> nesmÃ­ bÃ½t nikdy vedle sebe\n3.  <code>x</code>, <code>x-y</code>, <code>x/y</code>, <code>x-y/z</code>, <code>*/x</code>, kde x,y,z jsou ÄÃ­sla z povolenÃ½ch ÄasovÃ½ch rozsahÅ¯\n4.  povolenÃ½ rozsah pro minuty: <strong>0-59</strong>\n5.  povolenÃ½ rozsah pro hodiny: <strong>0-23</strong>\n6.  povolenÃ½ rozsah pro dny mÄsÃ­ce: <strong>1-31</strong>\n7.  povolenÃ½ rozsah pro mÄsÃ­ce: <strong>1-12</strong>\n8.  povolenÃ½ rozsah pro dny v tÃ½dnu: <strong>0-6</strong>\n\nTo je myslÃ­m sluÅ¡nÃ½ vÃ½Äet pravidel pro zvalidovÃ¡nÃ­ jednoho pÅÃ­kazu.\nÃkolem tohoto ÄlÃ¡nku nenÃ­ ukÃ¡zat jak tvoÅit a zpracovÃ¡vat formulÃ¡Å, ale bude vhodnÃ©\numÃ­stit sem celÃ½ kÃ³d alespoÅ vytvoÅenÃ­:\n\n```php\n/**\n  * @return Nette\\Application\\UI\\Form\n  */\nprotected function createComponentAddCron() {\n\t$form = new Nette\\Application\\UI\\Form;\n\t$form->addProtection();\n\t$form->addText('minutes', 'Minuty:')\n\t\t->addRule(\\Fresh\\ValidateCron::MINUTES, 'NevalidnÃ­ CRON zÃ¡pis - minuty.');\n\t$form->addText('hours', 'Hodiny:')\n\t\t->addRule(\\Fresh\\ValidateCron::HOURS, 'NevalidnÃ­ CRON zÃ¡pis - hodiny.');\n\t$form->addText('mdays', 'Dny mÄsÃ­ce:')\n\t\t->addRule(\\Fresh\\ValidateCron::MDAYS, 'NevalidnÃ­ CRON zÃ¡pis - mdays.');\n\t$form->addText('months', 'MÄsÃ­ce:')\n\t\t->addRule(\\Fresh\\ValidateCron::MONTHS, 'NevalidnÃ­ CRON zÃ¡pis - mÄsÃ­ce.');\n\t$form->addText('wdays', 'Dny v tÃ½dnu:')\n\t\t->addRule(\\Fresh\\ValidateCron::WDAYS, 'NevalidnÃ­ CRON zÃ¡pis - wdays.');\n\t$form->addText('command', 'PÅÃ­kaz:')\n\t\t->setRequired('VyplÅte prosÃ­m pÅÃ­kaz, kterÃ½ bude CRON spouÅ¡tÄt.');\n\t$form->addSubmit('save', 'PÅidat novÃ½ CRON');\n\t$form->onSuccess[] = $this->addCronSucceeded;\n\treturn $form;\n}\n```\n\nA rovnou bez hloupÃ½ch povÃ­dÃ¡nÃ­ celÃ½ validÃ¡tor:\n\n```php\n<?php\n\nnamespace Fresh;\n\n/**\n * Class ValidateCron - inspired by ISPConfig\n * @package Fresh\n */\nclass ValidateCron extends \\Nette\\Object {\n\n        const MINUTES = '\\Fresh\\ValidateCron::validateMinutes';\n        const HOURS = '\\Fresh\\ValidateCron::validateHours';\n        const MDAYS = '\\Fresh\\ValidateCron::validateMdays';\n        const MONTHS = '\\Fresh\\ValidateCron::validateMonths';\n        const WDAYS = '\\Fresh\\ValidateCron::validateWdays';\n\n        public static function validateMinutes(\\Nette\\Forms\\IControl $control) {\n                return \\Fresh\\ValidateCron::validateTimeFormat($control->getValue(), 0, 59);\n        }\n\n        public static function validateHours(\\Nette\\Forms\\IControl $control) {\n                return \\Fresh\\ValidateCron::validateTimeFormat($control->getValue(), 0, 23);\n        }\n\n        public static function validateMdays(\\Nette\\Forms\\IControl $control) {\n                return \\Fresh\\ValidateCron::validateTimeFormat($control->getValue(), 1, 31);\n        }\n\n        public static function validateMonths(\\Nette\\Forms\\IControl $control) {\n                if($control->getValue() != '@reboot') { // allow value @reboot in month field\n                        return \\Fresh\\ValidateCron::validateTimeFormat($control->getValue(), 1, 12);\n                } else {\n                        return TRUE;\n                }\n        }\n\n        public static function validateWdays(\\Nette\\Forms\\IControl $control) {\n                return \\Fresh\\ValidateCron::validateTimeFormat($control->getValue(), 0, 6);\n        }\n\n        private static function validateTimeFormat($value, $min_entry = 0, $max_entry = 0) {\n                if (preg_match(\"'^[0-9\\-\\,\\/\\*]+$'\", $value) == false) { // allowed characters are 0-9, comma, *, -, /\n                        return FALSE;\n                } elseif (preg_match(\"'[\\-\\,\\/][\\-\\,\\/]'\", $value) == true) { // comma, - and / never stand together\n                        return FALSE;\n                }\n                $time_list = explode(\",\", $value);\n                foreach ($time_list as $entry) {\n                        // possible value combinations:\n                        // x               =>      ^(\\d+)$\n                        // x-y             =>      ^(\\d+)\\-(\\d+)$\n                        // x/y             =>      ^(\\d+)\\/([1-9]\\d*)$\n                        // x-y/z           =>      ^(\\d+)\\-(\\d+)\\/([1-9]\\d*)$\n                        // */x             =>      ^\\*\\/([1-9]\\d*)$\n                        // combined regex  =>      ^(\\d+|\\*)(\\-(\\d+))?(\\/([1-9]\\d*))?$\n                        if (preg_match(\"'^(((\\d+)(\\-(\\d+))?)|\\*)(\\/([1-9]\\d*))?$'\", $entry, $matches) == false) {\n                                return FALSE;\n                        }\n                        // matches contains:\n                        // 1       =>      * or value or x-y range\n                        // 2       =>      unused\n                        // 3       =>      value if [1] != *\n                        // 4       =>      empty if no range was used\n                        // 5       =>      2nd value of range if [1] != * and range was used\n                        // 6       =>      empty if step was not used\n                        // 7       =>      step\n                        if ($matches[1] == \"*\") {\n                                // not to check\n                        } else {\n                                if ($matches[3] < $min_entry || $matches[3] > $max_entry) { // check if value is in allowed range\n                                        return FALSE;\n                                } elseif (isset($matches[4]) && ($matches[5] < $min_entry || $matches[5] > $max_entry || $matches[5] <= $matches[3])) {\n                                        // check if value is in allowed range and not less or equal to first value\n                                        return FALSE;\n                                }\n                        }\n                        if (isset($matches[6]) && ($matches[7] < 2 || $matches[7] > $max_entry - 1)) { // check if step value is valid\n                                return FALSE;\n                        }\n                } // end foreach entry loop\n                return TRUE;\n        }\n\n}\n```\n\nValidÃ¡torem navrÃ¡cenÃ© errory lze vykreslit napÅÃ­klad takto ruÄnÄ (novÄ v DEV Nette):\n\n```html\n{form $form}\n\n<ul class=\"error\" n:if=\"$form->allErrors\">\n        <li n:foreach=\"$form->allErrors as $error\">{$error}</li>\n</ul>\n\n...\n\n{/form}\n```","frontmatter":"id: a285c880-267e-4070-9139-98b86d63772e\ntimestamp: 1375044812000\ntitle: CRON validÃ¡tor\nslug: cron-validator"},{"attributes":{"id":"3e9279b1-89aa-4813-9beb-7bc9f8044dff","timestamp":1375043798000,"title":"TestovÃ¡nÃ­ presenterÅ¯ v Nette","slug":"testovani-presenteru-v-nette"},"body":"Tak toto je pÅesnÄ to tÃ©ma o kterÃ©m se naustÃ¡le mluvÃ­, ale tÃ­m to z velkÃ© ÄÃ¡sti konÄÃ­.\nNemÃ¡ smysl zabÃ½vat se tÃ­m, jestli testovat, nebo ne. Na to uÅ¾ si kaÅ¾dÃ½ pÅijde sÃ¡m.\nV nÃ¡sledujÃ­cÃ­ch odstavcÃ­ch bych rÃ¡d pÅedvedl myÅ¡lenku jak si\nuÅ¡etÅit pÃ¡r ÅÃ¡dek kÃ³du pÅi testech (\\Nette\\Tester).\n\n# NezbytnÃ¡ teorie\n\n\nPro testovÃ¡nÃ­ presenterÅ¯ je zapotÅebÃ­ zÃ­skat tovÃ¡rnu na presentery PresenterFactory\na nÃ¡slednÄ danÃ½ presenter vyrobit. NapÅÃ­klad takto:\n\n```php\n$presenterFactory = $this->container->getByType('Nette\\Application\\IPresenterFactory');\n$this->presenter = $presenterFactory->createPresenter('Front:Homepage');\n```\n\nK tomu je zapotÅebÃ­ \\Nette\\DI\\Container, kterÃ½ zÃ­skÃ¡me napÅÃ­klad v konstruktoru, nebo\npomocÃ­ inject anotace.\n\nNÃ¡slednÄ je tÅeba vytvoÅit poÅ¾adavek, ten spustit a testovat vÃ½slednou odpovÄÄ:\n\n```php\n$request = new \\Nette\\Application\\Request($this->presName, $method, $params, $post);\n$response = $this->presenter->run($request);\n```\n\nPrÃ¡vÄ nad vrÃ¡cenou odpovÄdÃ­ lze spustit testovacÃ­ sadu, kterÃ¡ bude testovat, \nzda byla napÅÃ­klad zÃ­skÃ¡na textovÃ¡ odpovÄÄ a tedy jestli se jednÃ¡ o Å¡ablonu:\n\n```php\n\\Tester\\Assert::true($response instanceof \\Nette\\Application\\Responses\\TextResponse);\n\\Tester\\Assert::true($response->getSource() instanceof \\Nette\\Templating\\ITemplate);\n```\n\nJe takÃ© vhodnÃ© otestovat samotnÃ½ HTML kÃ³d. JiÅ¾ mÄ to pÃ¡rkrÃ¡t upozornilo na\nnevalidnÃ­ kÃ³d, coÅ¾ se mÅ¯Å¾e stÃ¡t, pokud se Å¡ablona sklÃ¡dÃ¡ z hodnÄ include ÄÃ¡stÃ­.\nNevalidnÃ­ ve smyslu napÅÃ­klad dvojitÃ© HTML ukonÄovacÃ­ znaÄky:\n\n```php\n$html = (string)$response->getSource();\n$dom = \\Tester\\DomQuery::fromHtml($html);\n\\Tester\\Assert::true($dom->has('title'));\n```\n\n# PsanÃ­, psanÃ­, psanÃ­...\n\n\nPÅedchozÃ­ teorie je zapotÅebÃ­ opakovat pro kaÅ¾dÃ½ presenter. UÅ¾ jen proto, Å¾e je tÅeba\nvytvoÅit pokaÅ¾dÃ© novÃ½ poÅ¾adavek. NicmÃ©nÄ je jasnÃ©, Å¾e to po otestovÃ¡nÃ­ FrontModule\nzaÄne bÃ½t lehce kopÃ­rovacÃ­ nuda.\n\nJe tedy vhodnÃ© vytvoÅit si tÅÃ­du, kterÃ¡ uÅ¡etÅÃ­ spoustu ÅÃ¡dek.\nMÅ¯j prvnÃ­ nÃ¡vrh vypadÃ¡ pÅibliÅ¾nÄ takto:\n\n```php\n<?php\n\nnamespace Test;\n\nclass Presenter extends \\Nette\\Object {\n\n        private $container;\n        private $presenter;\n        private $presName;\n\n        public function __construct(\\Nette\\DI\\Container $container) {\n                $this->container = $container;\n        }\n\n        /**\n         * @param $presName string Fully qualified presenter name.\n         */\n        public function init($presName) {\n                $presenterFactory = $this->container->getByType('Nette\\Application\\IPresenterFactory');\n                $this->presenter = $presenterFactory->createPresenter($presName);\n                $this->presenter->autoCanonicalize = FALSE;\n                $this->presName = $presName;\n        }\n\n        public function test($action, $method = 'GET', $params = array(), $post = array()) {\n                $params['action'] = $action;\n                $request = new \\Nette\\Application\\Request($this->presName, $method, $params, $post);\n                $response = $this->presenter->run($request);\n                return $response;\n        }\n\n        public function testAction($action, $method = 'GET', $params = array(), $post = array()) {\n                $response = $this->test($action, $method, $params, $post);\n\n                \\Tester\\Assert::true($response instanceof \\Nette\\Application\\Responses\\TextResponse);\n                \\Tester\\Assert::true($response->getSource() instanceof \\Nette\\Templating\\ITemplate);\n\n                $html = (string)$response->getSource();\n                $dom = \\Tester\\DomQuery::fromHtml($html);\n                \\Tester\\Assert::true($dom->has('title'));\n\n                return $response;\n        }\n\n        public function testForm($action, $method = 'POST', $post = array()) {\n                $response = $this->test($action, $method, $post);\n\n                \\Tester\\Assert::true($response instanceof \\Nette\\Application\\Responses\\RedirectResponse);\n\n                return $response;\n        }\n\n}\n```\n\nTestovÃ¡nÃ­ samotnÃ½ch presenterÅ¯ je pak jiÅ¾ otÃ¡zkou nÄkolika mÃ¡lo ÅÃ¡dek:\n\n```php\n<?php\n\nnamespace Test;\n\n$container = require __DIR__ . '/../bootstrap.php';\n\nclass HomepagePresenterTest extends \\Tester\\TestCase {\n\n        public function __construct(\\Nette\\DI\\Container $container) {\n                $this->tester = new \\Test\\Presenter($container);\n        }\n\n        public function setUp() {\n                $this->tester->init('Front:Homepage');\n        }\n\n        public function testRenderDefault() {\n                $this->tester->testAction('default');\n        }\n\n}\n\nid(new HomepagePresenterTest($container))->run();\n```\n\nTakto chÃ¡pu testovÃ¡nÃ­ presenterÅ¯ v Nette jÃ¡. DÃ¡le budu smÄrovat testy tak, abych nemusel psÃ¡t tÃ©mÄÅ nic\na mÄl jsem otestovÃ¡no tÃ©mÄÅ vÅ¡echno. MyslÃ­m si, Å¾e toto je jedinÃ¡ cesta jak se pÅinutit k testovÃ¡nÃ­.\nNelze se jiÅ¾ vymlouvat na to, Å¾e je to spousta psanÃ­ navÃ­c. NenÃ­.","frontmatter":"id: 3e9279b1-89aa-4813-9beb-7bc9f8044dff\ntimestamp: 1375043798000\ntitle: TestovÃ¡nÃ­ presenterÅ¯ v Nette\nslug: testovani-presenteru-v-nette"},{"attributes":{"id":"46649054-460c-4258-9ce4-d25d89f63ba8","timestamp":1375041522000,"title":"PortÃ¡l ZÄU doÄasnÄ mimo provoz","slug":"portal-zcu-docasne-mimo-provoz"},"body":"Zvolit sprÃ¡vnÃ½ titulek pro webovou strÃ¡nku je naprosto klÃ­ÄovÃ©.\nMnozÃ­ programÃ¡toÅi si to neuvÄdomujÃ­ a ti ostatnÃ­ chybujÃ­.\nTitulek je jedna z nejdÅ¯leÅ¾itÄjÅ¡Ã­ch vÄcÃ­, podle kterÃ© se\nlidÃ© rozhodujÃ­ jestli na web vstoupit, nebo ne. Proto je tÅeba mÃ­t\n<code>title</code> tag na kaÅ¾dÃ© strÃ¡nce jinÃ½ a je potÅeba myslet\ni na strÃ¡nky, kterÃ© se zase aÅ¾ tak Äasto nezobrazujÃ­.\nJe totiÅ¾ docela smÅ¯la, kdyÅ¾ vÃ¡s google bot indexuje bÄhem profylaxe\nserverÅ¯:\n\n<div class=\"alert alert-danger\">Tak dlouho jsem s tÃ­mto blogem experimentoval, aÅ¾ jsem o obrÃ¡zek \npÅiÅ¡el. :-( PÅedstavte si tedy prosÃ­m screen vyhledÃ¡vÃ¡nÃ­ na kterÃ©m je portÃ¡l ZÄU se zaindexovanÃ½m\ntitle \"PortÃ¡l ZÄU doÄasnÄ mimo provoz&hellip;\"</div>\n\nWeb mÃ¡ potÃ© odpuzujÃ­cÃ­ titulek, i kdyÅ¾ uÅ¾ dÃ¡vno funguje.\nNutno vÅ¡ak ÅÃ­ct, Å¾e je to obÄas problÃ©m ohlÃ­dat.\nTak alespoÅ to pobavÃ­... (-:","frontmatter":"id: 46649054-460c-4258-9ce4-d25d89f63ba8\ntimestamp: 1375041522000\ntitle: PortÃ¡l ZÄU doÄasnÄ mimo provoz\nslug: portal-zcu-docasne-mimo-provoz"},{"attributes":{"id":"01c2866b-fd82-4562-ab63-dbab3505ee8e","timestamp":1363554156000,"title":"Nette 2.1-dev CliRouter","slug":"nette-2-1-dev-clirouter"},"body":"RoutovÃ¡nÃ­ CLI((Command Line Interface)) aplikacÃ­ je oblast, o kterÃ© se v Nette moc nemluvÃ­. A kdyÅ¾ mluvÃ­, tak divnÄ (nebo staÅe). CoÅ¾ na jednu stranu dÃ¡vÃ¡ smysl, protoÅ¾e tato routa existuje uÅ¾ od roku 2009. Na druhou stranu je to zvlÃ¡Å¡tnÃ­, protoÅ¾e je stÃ¡le experimentÃ¡lnÃ­.\n\n> The unidirectional router for CLI.\n> \n> (experimental)\n\nDokonce se uÅ¾ mluvilo o tom, Å¾e se zruÅ¡Ã­. No snad se to nestane...\n\nProÄ o tom mluvÃ­m? RÃ¡d bych ukÃ¡zal, jak se dÃ¡ v nastÃ¡vajÃ­cÃ­ verzi Nette tato routa pouÅ¾Ã­t. V novÃ© verzi Nette se jiÅ¾ routy nepÃ­Å¡Ã­ do bootsrap.php jak tomu bylo (alespoÅ myslÃ­m) dÅÃ­ve. TentokrÃ¡t je v adresÃ¡ÅovÃ© struktuÅe soubor router/**RouterFactory.php**, kterÃ½ se prÃ¡vÄ o routovÃ¡nÃ­ postarÃ¡. Tento soubor mÅ¯Å¾e vypadat napÅÃ­klad takto:\n\n```php\n<?php\n\nnamespace App;\n\nuse Nette,\n\tNette\\Application\\Routers\\RouteList,\n\tNette\\Application\\Routers\\Route,\n\tNette\\Application\\Routers\\CliRouter;\n\n/**\n * Router factory.\n */\nclass RouterFactory {\n\n\tprivate $container;\n\n\tpublic function __construct(Nette\\DI\\Container $container) {\n\t\t$this->container = $container;\n\t}\n\n\t/**\n\t * @return \\Nette\\Application\\IRouter\n\t */\n\tpublic function createRouter() {\n\t\t$router = new RouteList();\n\t\tif ($this->container->parameters['consoleMode']) {\n\t\t\t$router[] = new CliRouter(array('action' => 'Cli:Cli:cron'));\n\t\t} else {\n\t\t\t$router[] = new Route('rss.xml', 'Front:Blog:rss');\n\t\t\t$router[] = new Route('user/<presenter>/<action>[/<id>]', array(\n\t\t\t\t'module' => 'User',\n\t\t\t\t'presenter' => 'Board',\n\t\t\t\t'action' => 'default',\n\t\t\t));\n\t\t\t$router[] = new Route('<presenter>/<action>[/<id>]', array(\n\t\t\t\t'module' => 'Front',\n\t\t\t\t'presenter' => 'Homepage',\n\t\t\t\t'action' => 'default',\n\t\t\t));\n\t\t}\n\t\treturn $router;\n\t}\n\n}\n```\n\nToto je reÃ¡lnÃ¡ funkÄnÃ­ ukÃ¡zka (ze kterÃ© jsem nÄco nepodstatnÃ©ho umazal). Jak je vidÄt, tak aplikaci mÃ¡m rozdÄlenou na moduly, takÅ¾e defaultnÃ­ routa ukazuje do modulu Front, pak je k dispozici User modul, link na RSS a koneÄnÄ CliRouter, kterÃ½ se naroutuje pouze v pÅÃ­padÄ, Å¾e bÄÅ¾Ã­ aplikace v konzolovÃ©m mÃ³du (CLI).\n\nPokud se teÄ pÅesunu k presenterovÃ© ÄÃ¡sti modulu Cli, mohu zde umÃ­stit dvÄ tÅÃ­dy. KlasickÃ½ BasePresenter, kterÃ½ bude pro jistotu kontrolovat, jestli se opravdu jednÃ¡ o consoleMode napÅÃ­klad takto:\n\n```php\n<?php\n\nnamespace App\\CliModule;\n\nuse Nette;\n\nabstract class BasePresenter extends Nette\\Application\\UI\\Presenter {\n\n\tpublic function startup() {\n\t\tparent::startup();\n\t\tif (!$this->context->parameters['consoleMode']) {\n\t\t\tthrow new Nette\\Security\\AuthenticationException;\n\t\t}\n\t}\n\n}\n```\n\nNo a pak uÅ¾ staÄÃ­ jen CliPresenter, kterÃ½ bude dÄdit od BasePresenteru, takÅ¾e vÅ¾dy dojde ke kontrole. Zde staÄÃ­ metoda action*(), kterÃ¡ se spustÃ­ podle naroutovÃ¡nÃ­. V mÃ©m pÅÃ­padÄ se tedy jednÃ¡ o actionCron():\n\n```php\n<?php\n\nnamespace App\\CliModule;\n\nuse Nette;\n\nclass CliPresenter extends BasePresenter {\n\n\tpublic function actionCron() {\n\t\techo 'FUNGUJU!';\n\t\t$this->terminate();\n\t}\n\n}\n```\n\nA teÄ to nejdÅ¯leÅ¾itÄjÅ¡Ã­! Aplikace se spustÃ­ pomocÃ­ terminÃ¡lu jednoduchÃ½m pÅÃ­kazem <code>php index.php</code>. SamozÅejmÄ je nutnÃ© ukÃ¡zat na index Nette aplikace. No a samozÅejmÄ se mohu odkÃ¡zat i na jinou ÄÃ¡st aplikace dopsÃ¡nÃ­ parametru. Pokud bych chtÄl podle vÃ½Å¡e uvedenÃ½ch souborÅ¯ pÅejÃ­t na hlavnÃ­ strÃ¡nku, staÄÃ­ napsat pouze <code>php index.php Front:Homepage:default</code>.","frontmatter":"id: 01c2866b-fd82-4562-ab63-dbab3505ee8e\ntimestamp: 1363554156000\ntitle: Nette 2.1-dev CliRouter\nslug: nette-2-1-dev-clirouter"},{"attributes":{"id":"5920d80f-a65c-40e0-9648-6a95bac6ab87","timestamp":1356648759000,"title":"NÃ¡vrhovÃ½ vzor Factory Method","slug":"navrhovy-vzor-factory-method"},"body":"NÃ¡vrhovÃ½ vzor Factory Method mÃ¡ za Ãºkol definovat rozhranÃ­ pro vytvÃ¡ÅenÃ­ objektÅ¯ s tÃ­m, Å¾e vlastnÃ­ tvorbu instancÃ­ pÅenechÃ¡vÃ¡ potomkÅ¯m. SamotnÃ½ nÃ¡vrhovÃ½ vzor tedy tvoÅÃ­ napÅÃ­klad tyto dvÄ tÅÃ­dy.\n\n```php\n<?php\nabstract class ACreator {\n\tprotected $attribute;\n\tpublic function __construct($attribute) {\n\t\t$this->attribute = $attribute;\n\t}\n\tabstract public function createConcreteObject();\n}\n```\n\n```php\n<?php\nclass ConcreteCreator extends ACreator {\n\tpublic function createConcreteObject() {\n\t\t$concreteObject = new ConcreteObject($this->attribute);\n\t\treturn $concreteObject;\n\t}\n}\n```\n\nAby vÅ¡ak tento vzor mÄl nÄjakÃ½ smysl, je potÅeba jeÅ¡tÄ minimÃ¡lnÄ jedna tÅÃ­da od kterÃ© se budou dÄlat instance (ConcreteObject).\n\n```php\n<?php\nclass ConcreteObject implements IObject {\n\tprotected $attribute;\n\tpublic function __construct($attribute) {\n\t\t$this->attribute = $attribute;\n\t}\n\tpublic function test() {\n\t\techo $this->attribute;\n\t}\n}\n```\n\nPÅÃ­padnÄ jeho rozhranÃ­:\n\n```php\n<?php\ninterface IObject {\n\tpublic function test();\n}\n```\n\nVraÅ¥me se vÅ¡ak na zaÄÃ¡tek. VytvÃ¡Ået objekty vÅ¡ichni umÃ­. SlouÅ¾Ã­ k tomu znÃ¡mÃ½ operÃ¡tor <code>new</code>. Na tom nenÃ­ nic divnÃ©ho, ale jen do chvÃ­le, neÅ¾ se nad tÃ­m zamyslÃ­te. PÅedstavte si rozsÃ¡hlou aplikaci, kde na kaÅ¾dÃ©m rohu potÅebujete vytvoÅit instanci urÄitÃ©ho objektu. TakÅ¾e jako vÅ¾dy zavolÃ¡te operÃ¡tor <code>new</code> a pÅedÃ¡te vÅ¡echny potÅebnÃ© argumenty. A pak se to stane. Najednou zjistÃ­te, Å¾e nutnÄ potÅebujete pÅidat do konstruktoru argument/y a mÃ¡te tÃ½den co dÄlat. K tomu se prÃ¡vÄ hodÃ­ vytvoÅit si tovÃ¡rnu na tyto instance, kdy budeme pouze volat metodu pro jejÃ­ vytvoÅenÃ­, ale to jak se vytvoÅÃ­ nechÃ¡me na tovÃ¡rnÄ. ObecnÄ se ve svÄtÄ OOP velmi Äasto dÄlÃ¡, Å¾e nÄjakou prÃ¡ci prostÄ nechÃ¡me na nÄkom jinÃ©m. Je to funkÄnÃ­ a pohodlnÃ½ pÅÃ­stup. :-)\n\nPokud tedy zapomenu na to, Å¾e existujÃ­ nÄjakÃ© tÅÃ­dy Creator, tak by pouÅ¾itÃ­ tÅÃ­dy ConcreteObject vypadalo asi takto:\n\n```php\n$instance = new ConcreteObject('TEST');\n$instance->test();\n```\n\nPÅi zapojenÃ­ tovÃ¡rny je pouÅ¾itÃ­ zdÃ¡nlivÄ sloÅ¾itÄjÅ¡Ã­.\n\n```php\n$factory = new ConcreteCreator('TEST');\n$instance = $factory->createConcreteObject();\n$instance->test();\n```\n\nPÅidanÃ¡ hodnota tohoto postupu je vÅ¡ak velkÃ¡. JiÅ¾ nejsme vÃ¡zÃ¡nÃ­ na konkrÃ©tnÃ­ implementaci objektu ConcreteObject. VlastnÄ nÃ¡s to vÅ¯bec nezajÃ­mÃ¡. VÃ­me, Å¾e pro jeho tvorbu potÅebuje tovÃ¡rna nÄjakÃ½ atribut a to, jestli pak jeÅ¡tÄ dalÅ¡Ã­ tÅi pÅidÃ¡, nebo ne, nÃ¡m mÅ¯Å¾e bÃ½t ÃºplnÄ jedno. Kdo stÃ¡le jeÅ¡tÄ nevÄÅÃ­, Å¾e je tento postup vÃ½hodnÃ½, nechÅ¥ si vyzkouÅ¡Ã­ vytvoÅit nÄkolik instancÃ­ stejnÃ©ho objektu (hloupÃ½, ale nÃ¡zornÃ½ pÅÃ­klad).\n\n```php\n// pomocÃ­ operÃ¡toru new:\n$instance = new ConcreteObject('TEST');\n$instance = new ConcreteObject('TEST');\n$instance = new ConcreteObject('TEST');\n$instance = new ConcreteObject('TEST');\n$instance = new ConcreteObject('TEST');\n\n// pomocÃ­ tovÃ¡rny:\n$factory = new ConcreteCreator('TEST');\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n```\n\nA teÄ pÅidejme novÃ½ atribut - aktuÃ¡lnÃ­ rok.\n\n```php\n// pomocÃ­ operÃ¡toru new:\n$instance = new ConcreteObject('TEST', date('Y'));\n$instance = new ConcreteObject('TEST', date('Y'));\n$instance = new ConcreteObject('TEST', date('Y'));\n$instance = new ConcreteObject('TEST', date('Y'));\n$instance = new ConcreteObject('TEST', date('Y'));\n\n// pomocÃ­ tovÃ¡rny:\n$factory = new ConcreteCreator('TEST', date('Y'));\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n$instance = $factory->createConcreteObject();\n```\n\nKrom toho, Å¾e by mÄ za chvÃ­li pÅestalo bavit do kaÅ¾dÃ©ho konstruktoru kopÃ­rovat novÃ½ atribut, tak jsem takÃ© mohl udÄlat o hodnÄ vÃ­ce chyb neÅ¾ u tovÃ¡rny. Pravdou je, Å¾e jsem musel upravit jeÅ¡tÄ pÃ¡r tÅÃ­d:\n\n```php\n<?php\nclass ConcreteObject implements IObject {\n\tprotected $attribute;\n\tprotected $year;\n\tpublic function __construct($attribute, $year) {\n\t\t$this->attribute = $attribute;\n\t\t$this->year = $year;\n\t}\n\t// ...\n}\n\nabstract class ACreator {\n\tprotected $attribute;\n\tprotected $year;\n\tpublic function __construct($attribute, $year) {\n\t\t$this->attribute = $attribute;\n\t\t$this->year = $year;\n\t}\n\tabstract public function createConcreteObject();\n}\n\nclass ConcreteCreator extends ACreator {\n\tpublic function createConcreteObject() {\n\t\t$concreteObject = new ConcreteObject($this->attribute, $this->year);\n\t\treturn $concreteObject;\n\t}\n}\n```\n\nNicmÃ©nÄ kÅivka vÃ½hod pÅi pouÅ¾Ã­vÃ¡nÃ­ tovÃ¡rny velmi rychle pÅekonÃ¡ svÃ½m stoupÃ¡nÃ­m kÅivku lenosti pÅi pouÅ¾Ã­vÃ¡nÃ­ operÃ¡toru new.\n\nMimochodem vzpomeÅte si na [osm nÃ¡vrhovÃ½ch pÅikÃ¡zÃ¡nÃ­](osm-navrhovych-prikazani), kde se takÃ© ÅÃ­kÃ¡, Å¾e mÃ¡me vÅ¾dy programovat vÅ¯Äi rozhranÃ­, a nikdy ne vÅ¯Äi konkrÃ©tnÃ­ implementaci, coÅ¾ tento nÃ¡vrhovÃ½ vzor perfektnÄ splÅuje.","frontmatter":"id: 5920d80f-a65c-40e0-9648-6a95bac6ab87\ntimestamp: 1356648759000\ntitle: NÃ¡vrhovÃ½ vzor Factory Method\nslug: navrhovy-vzor-factory-method"},{"attributes":{"id":"e9cd5692-13b4-495f-a63d-1dd5f4923fcb","timestamp":1356550681000,"title":"NÃ¡vrhovÃ½ vzor Singleton","slug":"navrhovy-vzor-singleton"},"body":"NÃ¡vrhovÃ½ vzor Singleton je velmi znÃ¡mÃ½. MÃ¡ za Ãºkol zajistit, Å¾e bude z urÄitÃ© tÅÃ­dy existovat pouze jedna instance. K tÃ©to instanci poskytne globÃ¡lnÃ­ pÅÃ­stupovÃ½ bod. JednoduchÃ© zadÃ¡nÃ­, ale samotnÃ¡ implementace mÅ¯Å¾e bÃ½t v PHP zÃ¡keÅnÃ¡. ProÄ? Tak prvnÄ zÃ¡leÅ¾Ã­ na tom, jak budeme u nÃ¡vrhu striktnÃ­.\n\n```php\n<?php\nclass Object {\n\tprivate static $instance = null;\n\tpublic static function getInstance() {\n\t\tif(self::$instance === null) {\n\t\t\tself::$instance = new self;\n\t\t}\n\t\treturn self::$instance;\n\t}\n}\n```\n\nTakovouto tÅÃ­du lze totiÅ¾ rovnou prohlÃ¡sit za nÃ¡vrhovÃ½ vzor Singleton. DÃ¡vÃ¡ to smysl, protoÅ¾e mÅ¯Å¾eme zavolat:\n\n```php\n$obj1 = Object::getInstance();\n$obj2 = Object::getInstance();\n```\n\nTÃ­m se pokusÃ­me vytvoÅit dvÄ instance tÃ©to tÅÃ­dy, ve skuteÄnosti se vÅ¡ak vytvoÅÃ­ jen jedna. Tyto objekty jsou identickÃ©, coÅ¾ lze dokÃ¡zat jednoduchou zkouÅ¡kou:\n\n```php\nif($obj1 === $obj2) {\n\techo '$obj1 === $obj2'; //TRUE\n} else {\n\techo '$obj1 !== $obj2';\n}\n```\n\nSingleton to je a nikdo nemÅ¯Å¾e ÅÃ­ct ne. Jak jsem vÅ¡ak jiÅ¾ psal, zÃ¡leÅ¾Ã­ na tom, jak budeme u nÃ¡vrhu striktnÃ­, protoÅ¾e by to nebylo PHP, kdyby neexistovalo nÄkolik otaznÃ­kÅ¯ a hÃ¡ÄkÅ¯. PravdÄpodobnÄ spoustu lidÃ­ totiÅ¾ napadne, Å¾e metoda <code>getInstance()</code> je sice hezkÃ¡, ale vÅ¯bec ji nemusÃ­m pouÅ¾Ã­t. V takovÃ©m pÅÃ­padÄ celÃ½ princip Singletona padÃ¡.\n\n```php\n$obj1 = Object::getInstance();\n$obj2 = new Object();\n\nif($obj1 === $obj2) {\n\techo '$obj1 === $obj2';\n} else {\n\techo '$obj1 !== $obj2'; //TRUE\n}\n```\n\nTo je jasnÃ©, zatÃ­m ve tÅÃ­dÄ neexistuje Å¾Ã¡dnÃ½ mechanismus, kterÃ½ by zakÃ¡zal pouÅ¾Ã­vÃ¡nÃ­ konstruktoru. K tomu je potÅeba pouze malÃ¡ Ãºprava tÅÃ­dy.\n\n```php\n<?php\nclass Object {\n\tprivate static $instance = null;\n\tpublic static function getInstance() {\n\t\tif(self::$instance === null) {\n\t\t\tself::$instance = new self;\n\t\t}\n\t\treturn self::$instance;\n\t}\n\tprotected function __construct() {}\n}\n```\n\nV tento moment jiÅ¾ nepÅ¯jde objekt vytvoÅit pomocÃ­ operÃ¡toru <code>new</code>. PÅÃ­padnÃ½ pokus skonÄÃ­ fatÃ¡lnÃ­ chybou. Nebylo by to vÅ¡ak PHP, kdyby neexistovalo nÄkolik dalÅ¡Ã­ch otaznÃ­kÅ¯ a hÃ¡ÄkÅ¯. S ledovÃ½m klidem si totiÅ¾ mohu prvnÃ­ vytvoÅenÃ½ objekt naklonovat a tÃ­m opÄt zÃ­skÃ¡m dvÄ nezÃ¡vislÃ© instance jednÃ© tÅÃ­dy. Ale to jsem pÅece nechtÄl!\n\n```php\n$obj1 = Object::getInstance();\n$obj2 = clone $obj1;\n\nif($obj1 === $obj2) {\n\techo '$obj1 === $obj2';\n} else {\n\techo '$obj1 !== $obj2'; //TRUE\n}\n```\n\nProti tomuto postupu se mohu brÃ¡nit opÄt podobnÃ½m zpÅ¯sobem jako u konstruktoru.\n\n```php\n<?php\nclass Object {\n\tprivate static $instance = null;\n\tpublic static function getInstance() {\n\t\tif(self::$instance === null) {\n\t\t\tself::$instance = new self;\n\t\t}\n\t\treturn self::$instance;\n\t}\n\tprotected function __construct() {}\n\tprivate function __clone() {}\n}\n```\n\nPokus o naklonovÃ¡nÃ­ jiÅ¾ vytvoÅenÃ© instance pomocÃ­ metody <code>getInstance()</code> skonÄÃ­ opÄt fatÃ¡lnÃ­ chybou. JenÅ¾e nebylo by to PHP, kdyby... Co se stane, kdyÅ¾ vytoÅenÃ­ objekt serializuji a pak ho zase deserializuji?\n\n```php\n$obj1 = Object::getInstance();\n$obj2 = unserialize(serialize($obj1));\n\nif($obj1 === $obj2) {\n\techo '$obj1 === $obj2';\n} else {\n\techo '$obj1 !== $obj2'; //TRUE\n}\n```\n\nTo uÅ¾ zaÄÃ­nÃ¡ bÃ½t ponÄkud otravnÃ©. Ale tak dobÅe, i to se dÃ¡ oÅ¡Ã©fovat.\n\n```php\n<?php\nclass Object {\n\tprivate static $instance = null;\n\tpublic static function getInstance() {\n\t\tif(self::$instance === null) {\n\t\t\tself::$instance = new self;\n\t\t}\n\t\treturn self::$instance;\n\t}\n\tprotected function __construct() {}\n\tprivate function __clone() {}\n\tprivate function __wakeup() {}\n}\n```\n\nToto uÅ¾ sice vrÃ¡tÃ­ jen warning, ale vÃ­me o tom. SchvÃ¡lnÄ jsem nepsal, Å¾e se to vÅ¡e dÃ¡ oÅ¡etÅit, protoÅ¾e je to spÃ­Å¡e zÃ¡kaz (popÅ. upozornÄnÃ­). Je samozÅejmÄ moÅ¾nÃ© (lepÅ¡Ã­) vracet rÅ¯znÃ© vyjÃ­mky atd. StejnÄ tak je spousta variant jak psÃ¡t pÅÃ­tupovÃ© modifikÃ¡tory k metodÃ¡m. To jednoduÅ¡e vÅ¡e zaleÅ¾Ã­ na tom, co od Singleton objektu oÄekÃ¡vÃ¡me a kdo objekt pouÅ¾Ã­vÃ¡, protoÅ¾e jak jsem jiÅ¾ psal, ÃºplnÄ klidnÄ staÄÃ­ Singleton s jednou metodou <code>getInstance()</code>. Svoji funkci plnÃ­, teÄka.\n\n```php\n<?php\nclass Object {\n\tprivate static $instance = null;\n\tpublic static function getInstance() {\n\t\tif(self::$instance === null) {\n\t\t\tself::$instance = new self;\n\t\t}\n\t\treturn self::$instance;\n\t}\n\tprotected function __construct() {}\n\tpublic final function __clone() {\n\t\tthrow new Exception('Objekt nelze klonovat!');\n\t}\n\tpublic final function __wakeup() {\n\t\tthrow new Exception('Objekt nelze deserializovat!');\n\t}\n}\n```","frontmatter":"id: e9cd5692-13b4-495f-a63d-1dd5f4923fcb\ntimestamp: 1356550681000\ntitle: NÃ¡vrhovÃ½ vzor Singleton\nslug: navrhovy-vzor-singleton"},{"attributes":{"id":"6ef2212c-312f-45c5-a31b-bb9a7327ff42","timestamp":1356472874000,"title":"Osm nÃ¡vrhovÃ½ch pÅikÃ¡zÃ¡nÃ­","slug":"osm-navrhovych-prikazani"},"body":"PrÃ¡vÄ mÃ¡m rozeÄtenou knihu, kterÃ¡ popisuje nÃ¡vrhovÃ© vzory v PHP. Mimo jinÃ© autor popisuje pravidla pÅi nÃ¡vrhu softwaru, kterÃ¡ jsou proklÃ¡dÃ¡na velkÃ½m mnoÅ¾stvÃ­m ukÃ¡zek a vysvÄtlivek. Celkem je na tÅiceti stranÃ¡ch knihy (kde je rozebÃ­rÃ¡n nÃ¡vrh) schovÃ¡n nÃ¡sledujÃ­cÃ­ seznam pravidel.\n\n1. PÅÃ­stup k ÃºdajÅ¯m vÅ¾dy v rÃ¡mci tÅÃ­dy zapouzdÅete a poskytnÄte metody, pomocÃ­ nichÅ¾ lze danÃ© Ãºdaje zÃ­skat.\n2. SvÃ¡ rozhranÃ­ navrhujte tak, aby je bylo moÅ¾nÃ© pozdÄji rozÅ¡Ã­Åit.\n3. V metodÃ¡ch tÅÃ­d nezapouzdÅujte jen Ãºdaje, ale takÃ© algoritmy, dÃ­ky ÄemuÅ¾ budou komplexnÃ­ operace implementovanÃ© centrÃ¡lnÄ na jednom mÃ­stÄ.\n4. ZnovupouÅ¾itelnost kÃ³du je lepÅ¡Ã­ neÅ¾ duplicitnÃ­ kÃ³d.\n5. Vyvarujte se monolitickÃ½m strukturÃ¡m a rozloÅ¾te je na co nejmenÅ¡Ã­ ÄÃ¡sti, kterÃ© mohou bÃ½t implementovanÃ© nezÃ¡visle na sobÄ. Pokud pouÅ¾Ã­vÃ¡te rozsÃ¡hlÃ© pÅÃ­kazy <code>if/elseif/else</code> nebo <code>switch</code>, popÅemÃ½Å¡lejte, zda by se nedaly nahradit zamÄnitelnÃ½mi tÅÃ­dami.\n6. DÄdÄnÃ­ vede k neflexibilnÃ­m strukturÃ¡m. Na kombinaci rÅ¯znÃ½ch funkcÃ­ pouÅ¾Ã­vejte radÄji kompozice objektÅ¯.\n7. VÅ¾dy programujte vÅ¯Äi rozhranÃ­, a nikdy ne vÅ¯Äi konkrÃ©tnÃ­ implementaci.\n8. VyhÃ½bejte se tÄsnÃ½m zÃ¡vislostem mezi jednotlivÃ½mi tÅÃ­dami aplikace a vÅ¾dy upÅednostÅujte volnÃ© vazby tÅÃ­d.\n\nDalÅ¡Ã­ seznam kterÃ½ vÅ¡ichni znajÃ­, ale mÃ¡lokdo ho ÃºplnÄ dodrÅ¾uje. (-:","frontmatter":"id: 6ef2212c-312f-45c5-a31b-bb9a7327ff42\ntimestamp: 1356472874000\ntitle: Osm nÃ¡vrhovÃ½ch pÅikÃ¡zÃ¡nÃ­\nslug: osm-navrhovych-prikazani"},{"attributes":{"id":"0939f66b-9d4b-4646-b787-76fa294fd2c4","timestamp":1353707019000,"title":"VÃ½poÄet mediÃ¡nu","slug":"vypocet-medianu"},"body":"# ZadÃ¡nÃ­\n\n\nNajdÄte v dostupnÃ© literatuÅe nebo vymyslete co nejlepÅ¡Ã­ algoritmus pro vÃ½poÄet mediÃ¡nu.\nNezapomeÅte na citaci zdrojÅ¯. KritÃ©ria kvality v sestupnÃ©m poÅadÃ­ jsou: vÃ½poÄetnÃ­ sloÅ¾itost, \njednoduchost a implementaÄnÃ­ nenÃ¡roÄnost, pamÄÅ¥ovÃ¡ spotÅeba.\n\n# Definice\n\n\nMediÃ¡n je hodnota, kterÃ¡ dÄlÃ­ seÅazenou posloupnost na dvÄ stejnÄ velkÃ© (co se mnoÅ¾stvÃ­ tÃ½Äe)\nÄÃ¡sti. DÅ¯leÅ¾itou vlastnostÃ­ mediÃ¡nu je skuteÄnost, Å¾e nenÃ­ ovlivnÄn Å¾Ã¡dnou extrÃ©mnÃ­ hodnotou,\njako je tomu napÅÃ­klad u prÅ¯mÄru.\n\n# AnalÃ½za problÃ©mu\n\n\nExistuje nÄkolik zpÅ¯sobÅ¯ jak danÃ½ problÃ©m vyÅeÅ¡it. PrvnÃ­ ÅeÅ¡enÃ­ bude velmi pÅÃ­moÄarÃ©. JednÃ¡ se\ntotiÅ¾ o zpÅ¯sob, kterÃ½ zÅejmÄ napadne kaÅ¾dÃ©ho jako prvnÃ­.\n\nPÅÃ­moÄarÃ© ÅeÅ¡enÃ­\n----------------\n\nToto ÅeÅ¡enÃ­ vlastnÄ ani nenÃ­ tak hledÃ¡nÃ­ mediÃ¡nu jako hledÃ¡nÃ­ algoritmicky nejrychlejÅ¡Ã­ho zpÅ¯sobu\njako seÅadit danou posloupnost ÄÃ­sel, protoÅ¾e pokud jiÅ¾ mÃ¡me seÅazenou posloupnost, staÄÃ­ zvolit\nprostÅednÃ­ prvek a zÃ­skÃ¡me poÅ¾adovanÃ½ mediÃ¡n. Tento poslednÃ­ krok mÅ¯Å¾eme pÅirozenÄ vykonat\nse sloÅ¾itostÃ­ O(1). SeÅadit posloupnost je moÅ¾nÃ© lineÃ¡rnÄ logaritmickou sloÅ¾itostÃ­ O(NlogN) avÅ¡ak\ns dodateÄnou pamÄtÃ­. DodateÄnÃ© pamÄti je samozÅejmÄ moÅ¾nÃ© se vyhnout, napÅÃ­klad pouÅ¾itÃ­m\nÅadicÃ­ho algoritmu Quicksort, vystavujeme se vÅ¡ak nebezpeÄÃ­ kvadratickÃ© sloÅ¾itosti v nejhorÅ¡Ã­m\npÅÃ­padÄ.\n\nPÅi zpÄtnÃ©m pohledu je jasnÃ©, Å¾e nejvÃ­ce Äasu strÃ¡vÃ­me ÅazenÃ­m posloupnosti. PÅitom ÅazenÃ­\nnebylo v zadÃ¡nÃ­. Je to opravdu nutnÃ©? NÃ¡sledujÃ­cÃ­ algoritmy uvaÅ¾ujÃ­ vstupnÃ­ neseÅazenou posloupnost\nstejnÄ jako pÅÃ­moÄarÃ© ÅeÅ¡enÃ­, ale nebudou vynaklÃ¡dat vÅ¡echen svÅ¯j drahocenÃ½ Äas k\nÅazenÃ­.\n\nAlgoritmus FIND\n---------------\n\nMetoda FIND je mnohem promyÅ¡lenÄjÅ¡Ã­. VyuÅ¾Ã­vÃ¡ techniky \"rozdÄl a panuj\", coÅ¾ je samo o sobÄ\nvelmi silnÃ¡ zbraÅ. FIND se chovÃ¡ velmi podobnÄ jako jiÅ¾ zmÃ­nÄnÃ½ Quicksort (oba algoritmy vymyslel\nTony Hoare) s tÃ­m, Å¾e hledÃ¡ k-tÃ© nejmenÅ¡Ã­ ÄÃ­slo, coÅ¾ je pouze zobecnÄnÃ­ problÃ©mu hledÃ¡nÃ­\nmediÃ¡nu.\n\nPÅi hledÃ¡nÃ­ postupujeme tak, Å¾e neseÅazenou posloupnost projÃ­Å¾dÃ­me zleva, dokud nenalezneme\nprvek, kterÃ½ je vÄtÅ¡Ã­ (nebo roven) neÅ¾ nÃ¡mi zvolenÃ½ pivot. PotÃ© projÃ­Å¾dÃ­me posloupnost\nzprava, dokud nenarazÃ­me na prvek, kterÃ½ je menÅ¡Ã­ (nebo roven) pivotu. V tuto chvÃ­li mÃ¡me k\ndispozici dva prvky, a oba jsou na Å¡patnÃ© stranÄ, takÅ¾e je prohodÃ­me. V procesu zkoumÃ¡nÃ­ vÃ½mÄn\npokraÄujeme tak dlouho, dokud se nestÅetneme. TÃ­m je zajiÅ¡tÄno, Å¾e jsou menÅ¡Ã­ prvky neÅ¾ pivot\numÃ­stÄny na levÃ© stranÄ a prvky vÄtÅ¡Ã­ neÅ¾ pivot zase na pravÃ©.\n\nTÃ­m vÅ¡ak jeÅ¡tÄ nenÃ­ mediÃ¡n urÄen, protoÅ¾e pivot byl zvolen (napÅÃ­klad) nÃ¡hodnÄ. MÅ¯Å¾ou\ntotiÅ¾ nastat tÅi pÅÃ­pady. V nejideÃ¡lnÄjÅ¡Ã­ situaci je opravdu pivot mediÃ¡nem a celÃ½ proces hledÃ¡nÃ­\nmÅ¯Å¾eme ÃºspÄÅ¡nÄ ukonÄit. MÅ¯Å¾e se vÅ¡ak stÃ¡t, Å¾e pivot nebude uprostÅed posloupnosti, tedy byl\nzvolen neÅ¡Å¥astnÄ a nenÃ­ mediÃ¡nem. V tom pÅÃ­padÄ musÃ­me hledat (napÅ. rekurzivnÄ) mediÃ¡n v\nhornÃ­, popÅ. dolnÃ­ ÄÃ¡sti posloupnosti v zÃ¡vislosti na umÃ­stÄnÃ­ aktuÃ¡lnÃ­ho pivota. Jinak ÅeÄeno pokud\nbyl pivot moc malÃ½, upravÃ­me spodnÃ­ mez posloupnosti. Pokud byl pivot naopak velkÃ½,\nupravÃ­me hornÃ­ mez posloupnosti a cel Ã½ postup opakujeme. Pokud je pivot \"tak akorÃ¡t\", pak je\nnaÅ¡Ã­m mediÃ¡nem.\n\nOÄekÃ¡vanÃ½ Äas metody FIND je 4n, je nutnÃ© vÅ¡ak pÅipomenout, Å¾e je celÃ© hledÃ¡nÃ­ zaloÅ¾eno na\nQuicksortu, takÅ¾e mÅ¯Å¾e sloÅ¾itost klesnout do kvadratickÃ© tÅÃ­dy. Existuje vÅ¡ak i lineÃ¡rnÃ­ ÅeÅ¡enÃ­ viz\nnÃ¡sledujÃ­cÃ­ odstavce.\n\nAlgoritmus SELECT\n-----------------\n\nSELECT je svÃ½m chovÃ¡nÃ­m velmi podobnÃ½ metodÄ FIND, ale dokÃ¡Å¾e eliminovat problÃ©m se\nÅ¡patnÃ½m zvolenÃ­m pivota. Postupuje se nÃ¡sledovnÄ. NejdÅÃ­ve rozdÄlÃ­me neseÅazenou posloupnost\nna pÄt ÄÃ¡stÃ­ s tÃ­m, Å¾e jedna nemusÃ­ bÃ½t ÃºplnÃ¡. NÃ¡slednÄ najdeme mediÃ¡n kaÅ¾dÃ© skupiny. Z\nnalezenÃ½ch mediÃ¡nÅ¯ najdeme jeden celkovÃ½ mediÃ¡n. Zde se vÅ¡ak nesmÃ­me ukvapit a pouÅ¾Ã­t tento\nmediÃ¡n jako vÃ½slednÃ½. ZatÃ­m to totiÅ¾ byl pouze pomÄrnÄ spolehlivÃ½ odhad vhodnÃ©ho pivota pro\ndÄlenÃ­ celÃ© posloupnosti.\n\nOpÄt mohou nastat tÅi pÅÃ­klady tzn. pivot je rovnou mediÃ¡nem, pivot je vÄtÅ¡Ã­, nebo je pivot\nmenÅ¡Ã­ neÅ¾ mediÃ¡n. PÅi neshodÄ pivota s mediÃ¡nem volÃ¡me SELECT rekurzivnÄ do tÃ© doby,\nneÅ¾ dostaneme poÅ¾adovanÃ½ prvek. Postup hledÃ¡nÃ­ se mÅ¯Å¾e zdÃ¡t dost zamotanÃ½ a rekurze na\npÅehlednosti nepÅidÃ¡vÃ¡, nicmÃ©nÄ tento algoritmus mÃ¡ sloÅ¾itost O(n).\n\n# SrovnÃ¡nÃ­ zmÃ­nÄnÃ½ch algoritmÅ¯\n\n\nHledÃ¡nÃ­ mediÃ¡nu pomocÃ­ pÅÃ­moÄarÃ© metody vede k seÅazenÃ­ posloupnosti (coÅ¾ nebylo zadÃ¡no).\nKromÄ toho zÃ­skÃ¡me nejlepÅ¡Ã­ sloÅ¾itost O(NlogN), coÅ¾ nemusÃ­ bÃ½t ÃºplnÄ Å¡patnÃ© vzhledem k nejhor\nÅ¡Ã­ sloÅ¾itosti Quicksortu O(n^2), ale spotÅebujeme vÃ­ce pamÄti. Oproti tomu algoritmus FIND\nnezabere vÃ­ce pamÄti neÅ¾ je nutnÃ©, jeho sloÅ¾itost vÅ¡ak mÅ¯Å¾e bÃ½t takÃ© kvadratickÃ¡. JednoznaÄnÄ\nnejlepÅ¡Ã­ ÅeÅ¡enÃ­ se zdÃ¡ bÃ½t metoda vyhledÃ¡vÃ¡nÃ­ SELECT, kterÃ¡ nejenÅ¾e nespotÅebuje dodateÄnou\npamÄÅ¥, ale navÃ­c si udrÅ¾uje lineÃ¡rnÃ­ sloÅ¾itost coÅ¾ je alespoÅ podle bÄÅ¾nÄ dostupnÃ© literatury\nnejlepÅ¡Ã­ moÅ¾nÃ© ÅeÅ¡enÃ­.\n\n# ZÃ¡vÄr\n\n\nNezÃ¡leÅ¾Ã­-li nÃ¡m na sloÅ¾itosti, nebo pamÄÅ¥ovÃ© nÃ¡roÄnosti, zvolÃ­me pÅÃ­moÄarou metodu hledÃ¡nÃ­\nmediÃ¡nu, kterÃ¡ je nejjednoduÅ¾Å¡Ã­ na implementaci a pochopenÃ­. V opaÄnÃ©m pÅÃ­padÄ zvolÃ­me algoritmus\nSELECT, kterÃ½ je sice sloÅ¾itÃ½, ale mÃ¡ vynikajÃ­cÃ­ vÃ½sledky.","frontmatter":"id: 0939f66b-9d4b-4646-b787-76fa294fd2c4\ntimestamp: 1353707019000\ntitle: VÃ½poÄet mediÃ¡nu\nslug: vypocet-medianu"},{"attributes":{"id":"6dcf0031-975d-4eb2-85d6-e4e00d02dd4a","timestamp":1349557092000,"title":"TabulkovÃ½ masakr","slug":"tabulkovy-masakr"},"body":"UrÄitÄ znÃ¡te HTML a tÃ­m pÃ¡dem znÃ¡te i tabulky. Pro jistotu pÅipomenutÃ­.\nTabulka se v HTML tvoÅÃ­ pÃ¡rovÃ½m tagem <code>&lt;table&gt;&lt;/table&gt;</code>, jejÃ­ ÅÃ¡dky jsou <code>&lt;tr&gt;&lt;/tr&gt;</code> a buÅky <code>&lt;td&gt;&lt;/td&gt;</code>. BuÅky majÃ­ volitelnÃ© atributy <code>rowspan</code> a <code>colspan</code>. Tyto atributy urÄujÃ­, kolik bude buÅka zabÃ­rat mÃ­sta v ÅÃ¡dce, resp. ve sloupci. Tyto znalosti staÄÃ­ k pochopenÃ­ pojmu \"tabulkovÃ½ paradox\".\n\nPodÃ­vejte se na prvnÃ­ ukÃ¡zku:\n\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr>\n\t\t<td width=\"33%\">A1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A2</td>\n\t\t<td width=\"33%\">A3</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"3\">B1</td>\n\t</tr>\n\t<tr>\n\t\t<td>C1</td>\n\t\t<td>C3</td>\n\t</tr>\n\t<tr>\n\t\t<td>D1</td>\n\t\t<td>D3</td>\n\t</tr>\n</table>\n\nZde je vidÄt co se stane, kdyÅ¾ roztÃ¡hneme buÅku **A2** na tÅi ÅÃ¡dky a zÃ¡roveÅ roztÃ¡hneme buÅku **B1** na tÅi sloupce podle nÃ¡sledujÃ­cÃ­ho kÃ³du:\n```html\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr>\n\t\t<td width=\"33%\">A1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A2</td>\n\t\t<td width=\"33%\">A3</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"3\">B1</td>\n\t</tr>\n\t<tr>\n\t\t<td>C1</td>\n\t\t<td>C3</td>\n\t</tr>\n\t<tr>\n\t\t<td>D1</td>\n\t\t<td>D3</td>\n\t</tr>\n</table>\n```\nTam kde by mÄla bÃ½t buÅka **B2** vznikÃ¡ krÃ¡snÃ© okÃ©nko do Narnie, kterÃ© je spoleÄnÃ© jako pro druhÃ½ sloupec, tak pro druhÃ½ ÅÃ¡dek.\n\nDÅ¯sledkem neopatrnÃ©ho zachÃ¡zenÃ­ se spojovÃ¡nÃ­m sloupcÅ¯ mÅ¯Å¾e bÃ½t vÃ½sledek viditelnÃ½ ve druhÃ© ukÃ¡zce:\n\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">A1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A2</td>\n\t\t<td width=\"33%\" colspan=\"4\">A3</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">B1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">B2</td>\n\t\t<td width=\"33%\" colspan=\"4\">B3</td>\n\t\t<td width=\"33%\" rowspan=\"4\">B4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">C1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">C2</td>\n\t\t<td width=\"33%\" colspan=\"4\">C3</td>\n\t\t<td width=\"33%\" rowspan=\"4\">C4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">D1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">D2</td>\n\t\t<td width=\"33%\" colspan=\"4\">D3</td>\n\t\t<td width=\"33%\" rowspan=\"4\">D4</td>\n\t</tr>\n</table>\n\n<br />\n\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr>\n\t\t<td width=\"33%\" rowspan=\"4\">A1</td>\n\t\t<td width=\"33%\" colspan=\"4\">A2</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A3</td>\n\t\t<td width=\"33%\" colspan=\"4\">A4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" rowspan=\"4\">B1</td>\n\t\t<td width=\"33%\" colspan=\"4\">B2</td>\n\t\t<td width=\"33%\" rowspan=\"4\">B3</td>\n\t\t<td width=\"33%\" colspan=\"4\">B4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" rowspan=\"4\">C1</td>\n\t\t<td width=\"33%\" colspan=\"4\">C2</td>\n\t\t<td width=\"33%\" rowspan=\"4\">C3</td>\n\t\t<td width=\"33%\" colspan=\"4\">C4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" rowspan=\"4\">D1</td>\n\t\t<td width=\"33%\" colspan=\"4\">D2</td>\n\t\t<td width=\"33%\" rowspan=\"4\">D3</td>\n\t\t<td width=\"33%\" colspan=\"4\">D4</td>\n\t</tr>\n</table>\n\n<br />\n\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">A1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">A2</td>\n\t\t<td width=\"33%\" colspan=\"4\">A3</td>\n\t\t<td width=\"33%\" colspan=\"4\">A4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" rowspan=\"4\">B1</td>\n\t\t<td width=\"33%\" colspan=\"4\">B2</td>\n\t\t<td width=\"33%\" rowspan=\"4\">B3</td>\n\t\t<td width=\"33%\" rowspan=\"4\">B4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">C1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">C2</td>\n\t\t<td width=\"33%\" colspan=\"4\">C3</td>\n\t\t<td width=\"33%\" colspan=\"4\">C4</td>\n\t</tr>\n\t<tr>\n\t\t<td width=\"33%\" colspan=\"4\">D1</td>\n\t\t<td width=\"33%\" rowspan=\"4\">D2</td>\n\t\t<td width=\"33%\" colspan=\"4\">D3</td>\n\t\t<td width=\"33%\" colspan=\"4\">D4</td>\n\t</tr>\n</table>\n\nZa domÃ¡cÃ­ Ãºkol se pokuste napsat alespoÅ jednu podobnou tabulku bez nahlÃ©dnutÃ­ do zdrojovÃ©ho kÃ³du... :-)\n\nA poslednÃ­ perliÄka vyvracejÃ­cÃ­ tvrzenÃ­, Å¾e pÃ¡rovÃ½ element <code>&lt;tr&gt;&lt;/tr&gt;</code> vytvÃ¡ÅÃ­ v tabulce novou ÅÃ¡dku. PodÃ­vejte se na nÃ¡sledujÃ­cÃ­ kÃ³d. HÃ¡dÃ¡m, Å¾e uÅ¾ je vÃ¡m jasnÃ© co se stane.\n```html\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr><td width=\"33%\" rowspan=\"4\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"3\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"2\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"1\">ÅÃ¡dka_1</td></tr>\n</table>\n```\nVÃ½sledek je vidÄt ve tÅetÃ­ ukÃ¡zce:\n\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"2\" width=\"400\">\n\t<tr><td width=\"33%\" rowspan=\"4\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"3\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"2\">ÅÃ¡dka_1</td></tr>\n\t<tr><td width=\"33%\" rowspan=\"1\">ÅÃ¡dka_1</td></tr>\n</table>\n\nVyzkouÅ¡ejte, Å¾e se tabulkovÃ½ paradox vykresluje ve vÅ¡ech prohlÃ­Å¾eÄÃ­ch stejnÄ. MÃ¡m to tedy chÃ¡pat tak, Å¾e tolik oblÃ­benÃ½ Chrome je stejnÃ½ shit jako IE? Kdepak... JednÃ¡ se opravdu o paradox, kterÃ½ by sice mÄl (prapodivnÃ©) ÅeÅ¡enÃ­((vÃ½sledek potlaÄujÃ­cÃ­ paradox, vyvolÃ¡vajÃ­cÃ­ dalÅ¡Ã­ spory)), ale pak by byl poruÅ¡en vÃ½znam nÄkterÃ½ch atributÅ¯ buÅek tabulky.","frontmatter":"id: 6dcf0031-975d-4eb2-85d6-e4e00d02dd4a\ntimestamp: 1349557092000\ntitle: TabulkovÃ½ masakr\nslug: tabulkovy-masakr"},{"attributes":{"id":"af8c8824-3542-4019-8dc1-dbea1e985808","timestamp":1347738626000,"title":"Lovec matematik","slug":"lovec-matematik"},"body":"ZnÃ¡te nÃ¡sledujÃ­cÃ­ hÃ¡danku?\n\nLovec rÃ¡no vyrazÃ­ na lov. Nejprve jde 10 km na jih, potÃ© 10 km na zÃ¡pad a nakonec 10 km na sever. V cÃ­li svÃ© cesty zjiÅ¡Å¥uje, Å¾e se vrÃ¡til na stejnÃ© mÃ­sto, ze kterÃ©ho rÃ¡no vyÅ¡el. Tam zastÅelil medvÄda. Jakou mÄl medvÄd barvu?\n\nÅeÅ¡enÃ­ je vÃ­ce neÅ¾ jednoduchÃ©. StaÄÃ­ si pÅedstavit sfÃ©rickÃ½ trojÃºhelnÃ­k vychÃ¡zejÃ­cÃ­ ze severnÃ­ho pÃ³lu, kterÃ½ mÃ¡ vÅ¡echny strany dlouhÃ© 10 km (tedy kaÅ¾dÃ½ Ãºhel mÃ¡ 90Â°). Vzhledem k severnÃ­mu pÃ³lu je zÅejmÃ©, Å¾e medvÄd musÃ­ bÃ½t bÃ­lÃ½. Existuje vÅ¡ak jeÅ¡tÄ jinÃ© ÅeÅ¡enÃ­ tÃ©to hÃ¡danky ÄistÄ z geometrickÃ©ho (matematickÃ©ho chcete-li) hlediska? VypusÅ¥me tedy medvÄda a zamysleme se nad nÃ¡sledujÃ­cÃ­ hÃ¡dankou:\n\nLovec rÃ¡no vyrazÃ­ na lov. Nejprve jde 10 km na jih, potÃ© 10 km na zÃ¡pad a nakonec 10 km na sever. V cÃ­li svÃ© cesty zjiÅ¡Å¥uje, Å¾e se vrÃ¡til na stejnÃ© mÃ­sto, ze kterÃ©ho rÃ¡no vyÅ¡el. MÄl vÅ¡ak smÅ¯lu a tak nic neulovil.\n\nJedno ÅeÅ¡enÃ­ uÅ¾ znÃ¡me. Zamyslete se jeÅ¡tÄ jednou nad druhÃ½m ÅeÅ¡enÃ­m. PÅesuÅme se na jiÅ¾nÃ­ polokouli do libovolnÃ©ho bodu vzdÃ¡lenÃ©ho 11 591,55 m od jiÅ¾nÃ­ho pÃ³lu. Pokud Å¡el lovec nejprve 10 km na jih, dorazil do druhÃ©ho bodu vzdÃ¡lenÃ©ho 1591,55 m od jiÅ¾nÃ­ho pÃ³lu. Ze zÃ¡kladnÃ­ matematiky jistÄ vÅ¡ichni znajÃ­ vzorec pro obvod kruhu O = 2&pi;r. DosazenÃ­m do vzorce zjistÃ­me velmi zajÃ­mavou skuteÄnost. Obvod kruhu, tedy dÃ©lka cesty na zÃ¡pad je dlouhÃ¡ pÅibliÅ¾nÄ pÅesnÄ 10 km. Lovec se tedy dostane na stejnÃ½ bod vzdÃ¡lenÃ½ 1591,55 m od pÃ³lu a cestou na sever dojde do ÃºplnÃ©ho zaÄÃ¡tku stejnÄ tak jako tomu bylo pÅi vyuÅ¾itÃ­ sfÃ©rickÃ©ho trojÃºhelnÃ­ku na opaÄnÃ© stranÄ planety.\n\nPokud nebyl lovec matematik a neuvÄdomoval si tuto skuteÄnost, muselo bÃ½t pomÄrnÄ vyÄerpÃ¡vajÃ­cÃ­ dorazit po tÅiceti kilometrech do stejnÃ©ho mÃ­sta...","frontmatter":"id: af8c8824-3542-4019-8dc1-dbea1e985808\ntimestamp: 1347738626000\ntitle: Lovec matematik\nslug: lovec-matematik"},{"attributes":{"id":"cec65f8d-f2c5-4820-8ca6-3c6c9c7b1e72","timestamp":1347049798000,"title":"AsymetrickÃ¡ Å¡ifra s veÅejnÃ½m klÃ­Äem","slug":"asymetricka-sifra-s-verejnym-klicem"},"body":"O veÅejnÃ© distribuci klÃ­ÄÅ¯ jsem jiÅ¾ dÅÃ­ve psal. PojÄme se vÅ¡ak podÃ­vat nejen na samotnou distribuci, ale i na myÅ¡lenku asymetrickÃ©ho Å¡ifrovÃ¡nÃ­. PrvnÄ je vÅ¡ak tÅeba vysvÄtlit nÄkolik dÅ¯leÅ¾itÃ½ch vÄcÃ­. ZaÄnÄme tÃ­m, co vlastnÄ znamenÃ¡ asymetrickÃ¡ Å¡ifra. PÅed myÅ¡lenkou asymetrickÃ©ho Å¡ifrovÃ¡nÃ­, jejÃ­Å¾ autorem je Whitfield Diffie, se pouÅ¾Ã­valo vÃ½hradnÄ Å¡ifrovÃ¡nÃ­ symetrickÃ©, coÅ¾ znamenÃ¡, Å¾e proces deÅ¡ifrovÃ¡nÃ­ zakÃ³dovanÃ© zprÃ¡vy je pÅesnÄ opaÄnÃ½ k procesu Å¡ifrovÃ¡nÃ­. AsymetrickÃ© Å¡ifrovÃ¡nÃ­ vÅ¡ak zavÃ¡dÃ­ myÅ¡lenku pouÅ¾itÃ­ jinÃ©ho klÃ­Äe na Å¡ifrovÃ¡nÃ­ a jinÃ©ho na deÅ¡ifrovÃ¡nÃ­.\n\nJak to vyÅeÅ¡it? Jak je moÅ¾nÃ© pouÅ¾Ã­t jinÃ½ klÃ­Ä na Å¡ifrovÃ¡nÃ­ a jinÃ½ na deÅ¡ifrovÃ¡nÃ­? JiÅ¾ existoval koncept, kterÃ½ umoÅ¾Åoval vÃ½mÄnu  klÃ­ÄÅ¯ veÅejnÄ (a bezpeÄnÄ). StÃ¡le byl vÅ¡ak na principu synchronnÃ­ komunikace odesÃ­latele a pÅÃ­jemce, coÅ¾ nebylo optimÃ¡lnÃ­ ÅeÅ¡enÃ­ a proto byl vymyÅ¡len zpÅ¯sob jak tento problÃ©m obejÃ­t. MyÅ¡lenka byla jednoduchÃ¡. PÅÃ­jemce musÃ­ vytvoÅit veÅejnÃ½ klÃ­Ä, kterÃ½ nÃ¡slednÄ zveÅejnÃ­ tak, aby byl veÅejnÃ½ opravdu pro vÅ¡echny. V tomto pÅÃ­padÄ je jasnÃ©, Å¾e by to nemÄlo smysl, pokud by se nepouÅ¾Ã­vala jednosmÄrnÃ¡ funkce Å¡ifrovÃ¡nÃ­, coÅ¾ je dalÅ¡Ã­ pravidlo. A zÃ¡roveÅ opÄt onen pÅÃ­jemce musÃ­ mÃ­t svÅ¯j tajnÃ½ klÃ­Ä, kterÃ½ dokÃ¡Å¾e informaci zaÅ¡ifrovanou veÅejnÃ½m klÃ­Äem deÅ¡ifrovat. Z toho je patrnÃ¡ ta asymetriÄnost Å¡ifry. NepouÅ¾Ã­vÃ¡m stejnÃ½ klÃ­Ä na zaÅ¡ifrovÃ¡nÃ­ a deÅ¡ifrovÃ¡nÃ­ jako u jinÃ½ch Å¡ifer.\n\nTomuto systÃ©mu se ÅÃ­kÃ¡ RSA (Ronald Riverst, Adi Shamir, Leonard Adleman). PojÄme se na nÄj teÄ podÃ­vat matematicky, protoÅ¾e teorie je moc obecnÃ¡ (a matematika zase sloÅ¾itÃ¡). OdesÃ­latel zprÃ¡vy si musÃ­ zvolit dvÄ velmi velkÃ¡ prvoÄÃ­sla (A, B). Tyto prvoÄÃ­sla mezi sebou vynÃ¡sobÃ­ a dostane dalÅ¡Ã­ jeÅ¡tÄ vÄtÅ¡Ã­ ÄÃ­slo (AB). NÃ¡sobenÃ­ je zcela triviÃ¡lnÃ­ jednosmÄrnÃ¡ operace a systÃ©m RSA si zaklÃ¡dÃ¡ na tom, Å¾e faktorizovat velkÃ© ÄÃ­slo je v reÃ¡lnÃ­m Äase prakticky nemoÅ¾nÃ©. DÃ¡le si odesÃ­latel zvolÃ­ ÄÃ­slo C a to uveÅejnÃ­ spoleÄnÄ s ÄÃ­slem AB. Toto jsou informace, kterÃ© mÃ¡ kaÅ¾dÃ½ k dispozici. Pro Å¡ifrovÃ¡nÃ­ je nutnÃ© zprÃ¡vu pÅevÃ©st na ÄÃ­slo M (napÅÃ­klad binÃ¡rnÄ). Toto ÄÃ­slo se potÃ© dosadÃ­ podle vzorce \"Å¡ifra\"= M^C (mod AB). ZpÄtnÄ se pak informace dÃ¡ velmi snadno dostat obrÃ¡cenÃ½m postupem se znalostÃ­ onoho souÄinu prvoÄÃ­sel zvolenÃ½ch na zaÄÃ¡tku. Bez znalosti tÄchto prvoÄÃ­sel je deÅ¡ifrovÃ¡nÃ­ tÃ©mÄÅ nemoÅ¾nÃ©, coÅ¾ vÅ¡ak takÃ© nenÃ­ ÃºplnÄ pravda viz poslednÃ­ odstavec.\n\nJe zÅejmÃ©, Å¾e ÃºspÄch Å¡ifry spoÄÃ­vÃ¡ ve zvolenÃ­ dostateÄnÄ velkÃ½ch prvoÄÃ­sel a mocnitele C, kterÃ½ by vzhledem k prvoÄÃ­slÅ¯m nemÄl mÃ­t Å¾Ã¡dnÃ©ho spoleÄnÃ©ho dÄlitele. Resp. pÅesnÄji ÄÃ­sla C a (A-1) * (B-1). PÅi pÅedstavenÃ­ RSA byl pro jeho reprezentaci uveÅejnÄn zaÅ¡ifrovanÃ½ text s veÅejnÃ½m klÃ­Äem. SoutÄÅ¾nÃ­m Ãºkolem bylo faktorizovat veÅejnÃ½ klÃ­Ä na dvÄ sloÅ¾ky a potÃ© zprÃ¡vu deÅ¡ifrovat. Faktorizace trvala ve vÃ½sledku celkem 17 let, kdy tÃ½m 600 dobrovolnÃ­kÅ¯ oznÃ¡mil 26. dubna 1994 Äinitele veÅejnÃ©ho klÃ­Äe. A jakÃ½ Å¾e byl ten klÃ­Ä?\n\n```\nN = 114 381 625 757 888 867 669 235 779 976 146 612 010 218 296 721 242 362 562 561 842 935 706 935 245 733 897 830 597 123 563 958 705 058 989 075 147 599 290 026 879 543 541\n```\n\nDÃ­lÄÃ­ prvoÄÃ­sla si nechÃ¡m jako tajemstvÃ­? (-:","frontmatter":"id: cec65f8d-f2c5-4820-8ca6-3c6c9c7b1e72\ntimestamp: 1347049798000\ntitle: AsymetrickÃ¡ Å¡ifra s veÅejnÃ½m klÃ­Äem\nslug: asymetricka-sifra-s-verejnym-klicem"}]