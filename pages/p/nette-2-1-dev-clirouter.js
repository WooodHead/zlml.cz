// @flow

import WithPost from '../../components/WithPost';

export default WithPost({
  "attributes": {
    "timestamp": 1363554156000,
    "title": "Nette 2.1-dev CliRouter",
    "slug": "nette-2-1-dev-clirouter"
  },
  "body": "<p>Routování CLI((Command Line Interface)) aplikací je oblast, o které se v Nette moc nemluví. A když mluví, tak divně (nebo staře). Což na jednu stranu dává smysl, protože tato routa existuje už od roku 2009. Na druhou stranu je to zvláštní, protože je stále experimentální.</p>\n<blockquote>\n<p>The unidirectional router for CLI.</p>\n<p>(experimental)</p>\n</blockquote>\n<p>Dokonce se už mluvilo o tom, že se zruší. No snad se to nestane...</p>\n<p>Proč o tom mluvím? Rád bych ukázal, jak se dá v nastávající verzi Nette tato routa použít. V nové verzi Nette se již routy nepíší do bootsrap.php jak tomu bylo (alespoň myslím) dříve. Tentokrát je v adresářové struktuře soubor router/<strong>RouterFactory.php</strong>, který se právě o routování postará. Tento soubor může vypadat například takto:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">App</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Nette</span>,\n    <span class=\"hljs-title\">Nette</span>\\<span class=\"hljs-title\">Application</span>\\<span class=\"hljs-title\">Routers</span>\\<span class=\"hljs-title\">RouteList</span>,\n    <span class=\"hljs-title\">Nette</span>\\<span class=\"hljs-title\">Application</span>\\<span class=\"hljs-title\">Routers</span>\\<span class=\"hljs-title\">Route</span>,\n    <span class=\"hljs-title\">Nette</span>\\<span class=\"hljs-title\">Application</span>\\<span class=\"hljs-title\">Routers</span>\\<span class=\"hljs-title\">CliRouter</span>;\n\n<span class=\"hljs-comment\">/**\n * Router factory.\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RouterFactory</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> $container;\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">__construct</span><span class=\"hljs-params\">(Nette\\DI\\Container $container)</span> </span>{\n        <span class=\"hljs-keyword\">$this</span>-&gt;container = $container;\n    }\n\n    <span class=\"hljs-comment\">/**\n     * <span class=\"hljs-doctag\">@return</span> \\Nette\\Application\\IRouter\n     */</span>\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createRouter</span><span class=\"hljs-params\">()</span> </span>{\n        $router = <span class=\"hljs-keyword\">new</span> RouteList();\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">$this</span>-&gt;container-&gt;parameters[<span class=\"hljs-string\">'consoleMode'</span>]) {\n            $router[] = <span class=\"hljs-keyword\">new</span> CliRouter(<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">'action'</span> =&gt; <span class=\"hljs-string\">'Cli:Cli:cron'</span>));\n        } <span class=\"hljs-keyword\">else</span> {\n            $router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'rss.xml'</span>, <span class=\"hljs-string\">'Front:Blog:rss'</span>);\n            $router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'user/&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]'</span>, <span class=\"hljs-keyword\">array</span>(\n                <span class=\"hljs-string\">'module'</span> =&gt; <span class=\"hljs-string\">'User'</span>,\n                <span class=\"hljs-string\">'presenter'</span> =&gt; <span class=\"hljs-string\">'Board'</span>,\n                <span class=\"hljs-string\">'action'</span> =&gt; <span class=\"hljs-string\">'default'</span>,\n            ));\n            $router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]'</span>, <span class=\"hljs-keyword\">array</span>(\n                <span class=\"hljs-string\">'module'</span> =&gt; <span class=\"hljs-string\">'Front'</span>,\n                <span class=\"hljs-string\">'presenter'</span> =&gt; <span class=\"hljs-string\">'Homepage'</span>,\n                <span class=\"hljs-string\">'action'</span> =&gt; <span class=\"hljs-string\">'default'</span>,\n            ));\n        }\n        <span class=\"hljs-keyword\">return</span> $router;\n    }\n\n}\n</code></pre>\n<p>Toto je reálná funkční ukázka (ze které jsem něco nepodstatného umazal). Jak je vidět, tak aplikaci mám rozdělenou na moduly, takže defaultní routa ukazuje do modulu Front, pak je k dispozici User modul, link na RSS a konečně CliRouter, který se naroutuje pouze v případě, že běží aplikace v konzolovém módu (CLI).</p>\n<p>Pokud se teď přesunu k presenterové části modulu Cli, mohu zde umístit dvě třídy. Klasický BasePresenter, který bude pro jistotu kontrolovat, jestli se opravdu jedná o consoleMode například takto:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">CliModule</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Nette</span>;\n\n<span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BasePresenter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Nette</span>\\<span class=\"hljs-title\">Application</span>\\<span class=\"hljs-title\">UI</span>\\<span class=\"hljs-title\">Presenter</span> </span>{\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">startup</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">parent</span>::startup();\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">$this</span>-&gt;context-&gt;parameters[<span class=\"hljs-string\">'consoleMode'</span>]) {\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> Nette\\Security\\AuthenticationException;\n        }\n    }\n\n}\n</code></pre>\n<p>No a pak už stačí jen CliPresenter, který bude dědit od BasePresenteru, takže vždy dojde ke kontrole. Zde stačí metoda action*(), která se spustí podle naroutování. V mém případě se tedy jedná o actionCron():</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">App</span>\\<span class=\"hljs-title\">CliModule</span>;\n\n<span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">Nette</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CliPresenter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">BasePresenter</span> </span>{\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">actionCron</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">'FUNGUJU!'</span>;\n        <span class=\"hljs-keyword\">$this</span>-&gt;terminate();\n    }\n\n}\n</code></pre>\n<p>A teď to nejdůležitější! Aplikace se spustí pomocí terminálu jednoduchým příkazem <code>php index.php</code>. Samozřejmě je nutné ukázat na index Nette aplikace. No a samozřejmě se mohu odkázat i na jinou část aplikace dopsání parametru. Pokud bych chtěl podle výše uvedených souborů přejít na hlavní stránku, stačí napsat pouze <code>php index.php Front:Homepage:default</code>.</p>\n"
});
