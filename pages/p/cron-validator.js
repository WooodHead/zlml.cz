// @flow

import WithPost from '../../components/WithPost';

export default WithPost({
  "attributes": {
    "timestamp": 1375044812000,
    "title": "CRON validátor",
    "slug": "cron-validator"
  },
  "body": "<p>A jak už to tak bývá, tak opět ohnutý pro Nette. Tentokráte inspirovaný řešením ISPConfigu.</p>\n<h2 id=\"m-e-tohle-nesm-tamto\">Můžeš tohle, nesmíš tamto <a href=\"#m-e-tohle-nesm-tamto\">#</a></h2><p>Samotný CRON zápis je velmi rozmanitý a proto se omezím pouze na základní požadavky:</p>\n<ol>\n<li>obecně jsou povolené znaky <code>0-9</code>, <code>čárka</code>, <code>*</code>, <code>-</code>, <code>/</code></li>\n<li><code>čárka</code>, <code>-</code> a <code>/</code> nesmí být nikdy vedle sebe</li>\n<li><code>x</code>, <code>x-y</code>, <code>x/y</code>, <code>x-y/z</code>, <code>*/x</code>, kde x,y,z jsou čísla z povolených časových rozsahů</li>\n<li>povolený rozsah pro minuty: <strong>0-59</strong></li>\n<li>povolený rozsah pro hodiny: <strong>0-23</strong></li>\n<li>povolený rozsah pro dny měsíce: <strong>1-31</strong></li>\n<li>povolený rozsah pro měsíce: <strong>1-12</strong></li>\n<li>povolený rozsah pro dny v týdnu: <strong>0-6</strong></li>\n</ol>\n<p>To je myslím slušný výčet pravidel pro zvalidování jednoho příkazu.\nÚkolem tohoto článku není ukázat jak tvořit a zpracovávat formulář, ale bude vhodné\numístit sem celý kód alespoň vytvoření:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-comment\">/**\n  * <span class=\"hljs-doctag\">@return</span> Nette\\Application\\UI\\Form\n  */</span>\n<span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createComponentAddCron</span><span class=\"hljs-params\">()</span> </span>{\n    $form = <span class=\"hljs-keyword\">new</span> Nette\\Application\\UI\\Form;\n    $form-&gt;addProtection();\n    $form-&gt;addText(<span class=\"hljs-string\">'minutes'</span>, <span class=\"hljs-string\">'Minuty:'</span>)\n        -&gt;addRule(\\Fresh\\ValidateCron::MINUTES, <span class=\"hljs-string\">'Nevalidní CRON zápis - minuty.'</span>);\n    $form-&gt;addText(<span class=\"hljs-string\">'hours'</span>, <span class=\"hljs-string\">'Hodiny:'</span>)\n        -&gt;addRule(\\Fresh\\ValidateCron::HOURS, <span class=\"hljs-string\">'Nevalidní CRON zápis - hodiny.'</span>);\n    $form-&gt;addText(<span class=\"hljs-string\">'mdays'</span>, <span class=\"hljs-string\">'Dny měsíce:'</span>)\n        -&gt;addRule(\\Fresh\\ValidateCron::MDAYS, <span class=\"hljs-string\">'Nevalidní CRON zápis - mdays.'</span>);\n    $form-&gt;addText(<span class=\"hljs-string\">'months'</span>, <span class=\"hljs-string\">'Měsíce:'</span>)\n        -&gt;addRule(\\Fresh\\ValidateCron::MONTHS, <span class=\"hljs-string\">'Nevalidní CRON zápis - měsíce.'</span>);\n    $form-&gt;addText(<span class=\"hljs-string\">'wdays'</span>, <span class=\"hljs-string\">'Dny v týdnu:'</span>)\n        -&gt;addRule(\\Fresh\\ValidateCron::WDAYS, <span class=\"hljs-string\">'Nevalidní CRON zápis - wdays.'</span>);\n    $form-&gt;addText(<span class=\"hljs-string\">'command'</span>, <span class=\"hljs-string\">'Příkaz:'</span>)\n        -&gt;setRequired(<span class=\"hljs-string\">'Vyplňte prosím příkaz, který bude CRON spouštět.'</span>);\n    $form-&gt;addSubmit(<span class=\"hljs-string\">'save'</span>, <span class=\"hljs-string\">'Přidat nový CRON'</span>);\n    $form-&gt;onSuccess[] = <span class=\"hljs-keyword\">$this</span>-&gt;addCronSucceeded;\n    <span class=\"hljs-keyword\">return</span> $form;\n}\n</code></pre>\n<p>A rovnou bez hloupých povídání celý validátor:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-meta\">&lt;?php</span>\n\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Fresh</span>;\n\n<span class=\"hljs-comment\">/**\n * Class ValidateCron - inspired by ISPConfig\n * <span class=\"hljs-doctag\">@package</span> Fresh\n */</span>\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ValidateCron</span> <span class=\"hljs-keyword\">extends</span> \\<span class=\"hljs-title\">Nette</span>\\<span class=\"hljs-title\">Object</span> </span>{\n\n        <span class=\"hljs-keyword\">const</span> MINUTES = <span class=\"hljs-string\">'\\Fresh\\ValidateCron::validateMinutes'</span>;\n        <span class=\"hljs-keyword\">const</span> HOURS = <span class=\"hljs-string\">'\\Fresh\\ValidateCron::validateHours'</span>;\n        <span class=\"hljs-keyword\">const</span> MDAYS = <span class=\"hljs-string\">'\\Fresh\\ValidateCron::validateMdays'</span>;\n        <span class=\"hljs-keyword\">const</span> MONTHS = <span class=\"hljs-string\">'\\Fresh\\ValidateCron::validateMonths'</span>;\n        <span class=\"hljs-keyword\">const</span> WDAYS = <span class=\"hljs-string\">'\\Fresh\\ValidateCron::validateWdays'</span>;\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateMinutes</span><span class=\"hljs-params\">(\\Nette\\Forms\\IControl $control)</span> </span>{\n                <span class=\"hljs-keyword\">return</span> \\Fresh\\ValidateCron::validateTimeFormat($control-&gt;getValue(), <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">59</span>);\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateHours</span><span class=\"hljs-params\">(\\Nette\\Forms\\IControl $control)</span> </span>{\n                <span class=\"hljs-keyword\">return</span> \\Fresh\\ValidateCron::validateTimeFormat($control-&gt;getValue(), <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">23</span>);\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateMdays</span><span class=\"hljs-params\">(\\Nette\\Forms\\IControl $control)</span> </span>{\n                <span class=\"hljs-keyword\">return</span> \\Fresh\\ValidateCron::validateTimeFormat($control-&gt;getValue(), <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">31</span>);\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateMonths</span><span class=\"hljs-params\">(\\Nette\\Forms\\IControl $control)</span> </span>{\n                <span class=\"hljs-keyword\">if</span>($control-&gt;getValue() != <span class=\"hljs-string\">'@reboot'</span>) { <span class=\"hljs-comment\">// allow value @reboot in month field</span>\n                        <span class=\"hljs-keyword\">return</span> \\Fresh\\ValidateCron::validateTimeFormat($control-&gt;getValue(), <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">12</span>);\n                } <span class=\"hljs-keyword\">else</span> {\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">TRUE</span>;\n                }\n        }\n\n        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateWdays</span><span class=\"hljs-params\">(\\Nette\\Forms\\IControl $control)</span> </span>{\n                <span class=\"hljs-keyword\">return</span> \\Fresh\\ValidateCron::validateTimeFormat($control-&gt;getValue(), <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">6</span>);\n        }\n\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateTimeFormat</span><span class=\"hljs-params\">($value, $min_entry = <span class=\"hljs-number\">0</span>, $max_entry = <span class=\"hljs-number\">0</span>)</span> </span>{\n                <span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">\"'^[0-9\\-\\,\\/\\*]+$'\"</span>, $value) == <span class=\"hljs-keyword\">false</span>) { <span class=\"hljs-comment\">// allowed characters are 0-9, comma, *, -, /</span>\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                } <span class=\"hljs-keyword\">elseif</span> (preg_match(<span class=\"hljs-string\">\"'[\\-\\,\\/][\\-\\,\\/]'\"</span>, $value) == <span class=\"hljs-keyword\">true</span>) { <span class=\"hljs-comment\">// comma, - and / never stand together</span>\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                }\n                $time_list = explode(<span class=\"hljs-string\">\",\"</span>, $value);\n                <span class=\"hljs-keyword\">foreach</span> ($time_list <span class=\"hljs-keyword\">as</span> $entry) {\n                        <span class=\"hljs-comment\">// possible value combinations:</span>\n                        <span class=\"hljs-comment\">// x               =&gt;      ^(\\d+)$</span>\n                        <span class=\"hljs-comment\">// x-y             =&gt;      ^(\\d+)\\-(\\d+)$</span>\n                        <span class=\"hljs-comment\">// x/y             =&gt;      ^(\\d+)\\/([1-9]\\d*)$</span>\n                        <span class=\"hljs-comment\">// x-y/z           =&gt;      ^(\\d+)\\-(\\d+)\\/([1-9]\\d*)$</span>\n                        <span class=\"hljs-comment\">// */x             =&gt;      ^\\*\\/([1-9]\\d*)$</span>\n                        <span class=\"hljs-comment\">// combined regex  =&gt;      ^(\\d+|\\*)(\\-(\\d+))?(\\/([1-9]\\d*))?$</span>\n                        <span class=\"hljs-keyword\">if</span> (preg_match(<span class=\"hljs-string\">\"'^(((\\d+)(\\-(\\d+))?)|\\*)(\\/([1-9]\\d*))?$'\"</span>, $entry, $matches) == <span class=\"hljs-keyword\">false</span>) {\n                                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                        }\n                        <span class=\"hljs-comment\">// matches contains:</span>\n                        <span class=\"hljs-comment\">// 1       =&gt;      * or value or x-y range</span>\n                        <span class=\"hljs-comment\">// 2       =&gt;      unused</span>\n                        <span class=\"hljs-comment\">// 3       =&gt;      value if [1] != *</span>\n                        <span class=\"hljs-comment\">// 4       =&gt;      empty if no range was used</span>\n                        <span class=\"hljs-comment\">// 5       =&gt;      2nd value of range if [1] != * and range was used</span>\n                        <span class=\"hljs-comment\">// 6       =&gt;      empty if step was not used</span>\n                        <span class=\"hljs-comment\">// 7       =&gt;      step</span>\n                        <span class=\"hljs-keyword\">if</span> ($matches[<span class=\"hljs-number\">1</span>] == <span class=\"hljs-string\">\"*\"</span>) {\n                                <span class=\"hljs-comment\">// not to check</span>\n                        } <span class=\"hljs-keyword\">else</span> {\n                                <span class=\"hljs-keyword\">if</span> ($matches[<span class=\"hljs-number\">3</span>] &lt; $min_entry || $matches[<span class=\"hljs-number\">3</span>] &gt; $max_entry) { <span class=\"hljs-comment\">// check if value is in allowed range</span>\n                                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                                } <span class=\"hljs-keyword\">elseif</span> (<span class=\"hljs-keyword\">isset</span>($matches[<span class=\"hljs-number\">4</span>]) &amp;&amp; ($matches[<span class=\"hljs-number\">5</span>] &lt; $min_entry || $matches[<span class=\"hljs-number\">5</span>] &gt; $max_entry || $matches[<span class=\"hljs-number\">5</span>] &lt;= $matches[<span class=\"hljs-number\">3</span>])) {\n                                        <span class=\"hljs-comment\">// check if value is in allowed range and not less or equal to first value</span>\n                                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                                }\n                        }\n                        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">isset</span>($matches[<span class=\"hljs-number\">6</span>]) &amp;&amp; ($matches[<span class=\"hljs-number\">7</span>] &lt; <span class=\"hljs-number\">2</span> || $matches[<span class=\"hljs-number\">7</span>] &gt; $max_entry - <span class=\"hljs-number\">1</span>)) { <span class=\"hljs-comment\">// check if step value is valid</span>\n                                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">FALSE</span>;\n                        }\n                } <span class=\"hljs-comment\">// end foreach entry loop</span>\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">TRUE</span>;\n        }\n\n}\n</code></pre>\n<p>Validátorem navrácené errory lze vykreslit například takto ručně (nově v DEV Nette):</p>\n<pre><code class=\"hljs lang-html\">{form $form}\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"error\"</span> <span class=\"hljs-attr\">n:if</span>=<span class=\"hljs-string\">\"$form-&gt;allErrors\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">n:foreach</span>=<span class=\"hljs-string\">\"$form-&gt;allErrors as $error\"</span>&gt;</span>{$error}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n...\n\n{/form}\n</code></pre>\n"
});
