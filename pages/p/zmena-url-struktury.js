// @flow

import WithPost from '../../components/WithPost';

export default WithPost({
  "attributes": {
    "timestamp": 1382905620000,
    "title": "Změna URL struktury",
    "slug": "zmena-url-struktury"
  },
  "body": "<p>Rád bych tímto upozornil na změny URL adres na tomto webu. A zároveň k technické povaze tohoto webu\nprozradím i bližší informace ze zákulisí.</p>\n<p>Před úpravou URL struktury jsem definoval několik důležitých bodů, kterých jsem se držel:</p>\n<ol>\n<li>Musí zůstat maximální (úplná) zpětná kompatibilita</li>\n<li>Výsledné URL musí být maximálně jednoduché a cool</li>\n</ol>\n<h2 id=\"p-edt-m-a-potom\">Předtím a potom <a href=\"#p-edt-m-a-potom\">#</a></h2><p>Důležité je, aby stará URL adresa nekončila chybou 404, ale aby přesměrovala na novou URL.\nRSS je nyní na adrese <a href=\"http://zlml.cz/rss\">http://zlml.cz/rss</a>. Původně bylo na adrese <a href=\"http://zlml.cz/homepage/rss\">http://zlml.cz/homepage/rss</a>.\nObě dvě adresy fungují stále, rozdíl je v tom, že homepage/rss nyní přesměrovává pomocí 301 na */rss.\nToho se dalo docílit velice jednoduše:</p>\n<pre><code class=\"hljs lang-php\">$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'rss'</span>, <span class=\"hljs-string\">'Homepage:rss'</span>); <span class=\"hljs-comment\">//nová routa</span>\n$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]'</span>, <span class=\"hljs-string\">'Homepage:default'</span>); <span class=\"hljs-comment\">//původní</span>\n<span class=\"hljs-comment\">//záleží na pořadí!</span>\n</code></pre>\n<p>Ačkoliv je teď druhá routa zbytečná, nechal jsem jí pro případ, že bych měl nějakou URL nezachycenou.\nV tom případě ji zachytí tato obecná.</p>\n<h2 id=\"zp-tn-kompatibilita\">Zpětná kompatibilita <a href=\"#zp-tn-kompatibilita\">#</a></h2><p>Stejně tak jako změna adresy RSS, tak si i ostatní adresy musí zachovat stejné vlastnosti viz první bod.\nA vzhledem k tomu, že jsem se rozhodl změnit adresu vyhledávání a tagů, nezbývalo, než další\ndvě routy přidat. Opět záleží na pořadí:</p>\n<pre><code class=\"hljs lang-php\">$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'s[/&lt;search&gt;]'</span>, <span class=\"hljs-string\">'Search:default'</span>); <span class=\"hljs-comment\">//nová</span>\n$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'t[/&lt;search&gt;]'</span>, <span class=\"hljs-string\">'Tag:default'</span>); <span class=\"hljs-comment\">//nová</span>\n\n<span class=\"hljs-comment\">//tyto routy (až uznám za vhodné) mohu smazat:</span>\n$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'search[/&lt;search&gt;]'</span>, <span class=\"hljs-string\">'Search:default'</span>, Route::ONE_WAY); <span class=\"hljs-comment\">//původní</span>\n$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'tag[/&lt;search&gt;]'</span>, <span class=\"hljs-string\">'Tag:default'</span>, Route::ONE_WAY); <span class=\"hljs-comment\">//původní</span>\n</code></pre>\n<p>Opět platí, že funguje jak stará adresa <a href=\"http://zlml.cz/search/nette\">http://zlml.cz/search/nette</a> s přesměrováním 301, tak i nová \n<a href=\"http://zlml.cz/s/nette\">http://zlml.cz/s/nette</a>. Obdobně je tomu u tagů.</p>\n<h2 id=\"-arod-jnictv-\">Čarodějnictví! <a href=\"#-arod-jnictv-\">#</a></h2><p>Největší sranda však začíná u druhého požadavku. Už dlouho jsem si pohrával s myšlenkou,\nže chci názvy článků a adresy jednotlivých stránek v menu hned za lomítkem jako v kořenovém\nadresáři. Tedy aby článek měl adresu <a href=\"http://zlml.cz/lovec-matematik\">http://zlml.cz/lovec-matematik</a> a stránka <a href=\"http://zlml.cz/about\">http://zlml.cz/about</a>.\nZde jsem se však vždy dostával do velkého problému. Jak rozlišit a nabídnout z databáze článek a \njak poznat, kdy naopak nabídnout stránku například s referencemi?</p>\n<p>No, tak nejdříve je zapotřebí routa pro články:</p>\n<pre><code class=\"hljs lang-php\">$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'&lt;slug&gt;'</span>, <span class=\"hljs-string\">'Single:article'</span>);\n</code></pre>\n<p>Kdy v presenteru tahám články z databáze podle slugu:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">renderArticle</span><span class=\"hljs-params\">($slug)</span> </span>{\n    $post = <span class=\"hljs-keyword\">$this</span>-&gt;posts-&gt;getBySlug($slug)-&gt;fetch(); <span class=\"hljs-comment\">//načetní článku podle slugu</span>\n    <span class=\"hljs-keyword\">if</span> (!$post) { <span class=\"hljs-comment\">//článek neexistuje (db vrací FALSE)</span>\n        <span class=\"hljs-keyword\">$this</span>-&gt;forward($slug); <span class=\"hljs-comment\">//nabídni statickou šablonu</span>\n    } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-comment\">// zobrazení článku</span>\n        <span class=\"hljs-comment\">//...</span>\n    }\n}\n</code></pre>\n<p>Což je podle mého dostatečně elegantní řešení. Jednoduše se pokusím o načtení stránky podle slugu\nz databáze a když se to nepodaří, nabídnu nějaký latte soubor, pokud existuje. Pokud neexistuje, \ntak ErrorPresenter již obstará vrácení 404, což je správně, protože není co nabídnout...</p>\n<p>Ještě je zapotřebí vytvořit jednu routu:</p>\n<pre><code class=\"hljs lang-php\">$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">'&lt;action&gt;'</span>, <span class=\"hljs-string\">'Single:article'</span>);\n</code></pre>\n<p>Bez této routy by to také fungovalo, ale latte ony latte soubory (action) bych našel na dvou URL\nadresách, což nechci. Takže se z původního <a href=\"http://zlml.cz/single/about\">http://zlml.cz/single/about</a> dostanu na <a href=\"http://zlml.cz/about\">http://zlml.cz/about</a>, \ncož je cool a splňuji tak druhý požadavek.</p>\n<p>Poslední routa, která stojí za zmíňku pak zajišťuje stránkování. Pouze rozpoznává čísla podle\nregulárního výrazu a podle toho stránkuje:</p>\n<pre><code class=\"hljs lang-php\">$regex = <span class=\"hljs-string\">'1|2|3'</span>; <span class=\"hljs-comment\">//zjednodušeně</span>\n$router[] = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">\"[&lt;paginator-page [$regex]&gt;]\"</span>, <span class=\"hljs-keyword\">array</span>(\n    <span class=\"hljs-string\">'presenter'</span> =&gt; <span class=\"hljs-string\">'Homepage'</span>,\n    <span class=\"hljs-string\">'action'</span> =&gt; <span class=\"hljs-string\">'default'</span>,\n    <span class=\"hljs-string\">'paginator-page'</span> =&gt; <span class=\"hljs-number\">1</span>\n));\n</code></pre>\n<p>Ostatně to jak mám v době psaní tohoto článku router vytvořený můžete zjistit na <a href=\"https://bitbucket.org/mrtnzlml/zlml.cz/src/0580e2e9f0e4edb162fe97ad563cfef766bea625/app/router/RouterFactory.php\">bitbucketu</a>.</p>\n"
});
