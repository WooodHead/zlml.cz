// @flow

import WithPost from '../../components/WithPost';

export default WithPost({
  "attributes": {
    "id": "dbf85219-5173-4c7b-924a-636e86172b93",
    "timestamp": 1382905620000,
    "title": "Změna URL struktury",
    "slug": "zmena-url-struktury"
  },
  "body": "<p>Rád bych tímto upozornil na změny URL adres na tomto webu. A zároveň k technické povaze tohoto webu\nprozradím i bližší informace ze zákulisí.</p>\n<p>Před úpravou URL struktury jsem definoval několik důležitých bodů, kterých jsem se držel:</p>\n<ol>\n<li>Musí zůstat maximální (úplná) zpětná kompatibilita</li>\n<li>Výsledné URL musí být maximálně jednoduché a cool</li>\n</ol>\n<h2 id=\"p-edt-m-a-potom\">Předtím a potom <a href=\"#p-edt-m-a-potom\">#</a></h2><p>Důležité je, aby stará URL adresa nekončila chybou 404, ale aby přesměrovala na novou URL.\nRSS je nyní na adrese <a href=\"http://zlml.cz/rss\">http://zlml.cz/rss</a>. Původně bylo na adrese <a href=\"http://zlml.cz/homepage/rss\">http://zlml.cz/homepage/rss</a>.\nObě dvě adresy fungují stále, rozdíl je v tom, že homepage/rss nyní přesměrovává pomocí 301 na */rss.\nToho se dalo docílit velice jednoduše:</p>\n<pre><code class=\"lang-php\">$router[] = new Route(&#39;rss&#39;, &#39;Homepage:rss&#39;); //nová routa\n$router[] = new Route(&#39;&lt;presenter&gt;/&lt;action&gt;[/&lt;id&gt;]&#39;, &#39;Homepage:default&#39;); //původní\n//záleží na pořadí!\n</code></pre>\n<p>Ačkoliv je teď druhá routa zbytečná, nechal jsem jí pro případ, že bych měl nějakou URL nezachycenou.\nV tom případě ji zachytí tato obecná.</p>\n<h2 id=\"zp-tn-kompatibilita\">Zpětná kompatibilita <a href=\"#zp-tn-kompatibilita\">#</a></h2><p>Stejně tak jako změna adresy RSS, tak si i ostatní adresy musí zachovat stejné vlastnosti viz první bod.\nA vzhledem k tomu, že jsem se rozhodl změnit adresu vyhledávání a tagů, nezbývalo, než další\ndvě routy přidat. Opět záleží na pořadí:</p>\n<pre><code class=\"lang-php\">$router[] = new Route(&#39;s[/&lt;search&gt;]&#39;, &#39;Search:default&#39;); //nová\n$router[] = new Route(&#39;t[/&lt;search&gt;]&#39;, &#39;Tag:default&#39;); //nová\n\n//tyto routy (až uznám za vhodné) mohu smazat:\n$router[] = new Route(&#39;search[/&lt;search&gt;]&#39;, &#39;Search:default&#39;, Route::ONE_WAY); //původní\n$router[] = new Route(&#39;tag[/&lt;search&gt;]&#39;, &#39;Tag:default&#39;, Route::ONE_WAY); //původní\n</code></pre>\n<p>Opět platí, že funguje jak stará adresa <a href=\"http://zlml.cz/search/nette\">http://zlml.cz/search/nette</a> s přesměrováním 301, tak i nová \n<a href=\"http://zlml.cz/s/nette\">http://zlml.cz/s/nette</a>. Obdobně je tomu u tagů.</p>\n<h2 id=\"-arod-jnictv-\">Čarodějnictví! <a href=\"#-arod-jnictv-\">#</a></h2><p>Největší sranda však začíná u druhého požadavku. Už dlouho jsem si pohrával s myšlenkou,\nže chci názvy článků a adresy jednotlivých stránek v menu hned za lomítkem jako v kořenovém\nadresáři. Tedy aby článek měl adresu <a href=\"http://zlml.cz/lovec-matematik\">http://zlml.cz/lovec-matematik</a> a stránka <a href=\"http://zlml.cz/about\">http://zlml.cz/about</a>.\nZde jsem se však vždy dostával do velkého problému. Jak rozlišit a nabídnout z databáze článek a \njak poznat, kdy naopak nabídnout stránku například s referencemi?</p>\n<p>No, tak nejdříve je zapotřebí routa pro články:</p>\n<pre><code class=\"lang-php\">$router[] = new Route(&#39;&lt;slug&gt;&#39;, &#39;Single:article&#39;);\n</code></pre>\n<p>Kdy v presenteru tahám články z databáze podle slugu:</p>\n<pre><code class=\"lang-php\">public function renderArticle($slug) {\n    $post = $this-&gt;posts-&gt;getBySlug($slug)-&gt;fetch(); //načetní článku podle slugu\n    if (!$post) { //článek neexistuje (db vrací FALSE)\n        $this-&gt;forward($slug); //nabídni statickou šablonu\n    } else { // zobrazení článku\n        //...\n    }\n}\n</code></pre>\n<p>Což je podle mého dostatečně elegantní řešení. Jednoduše se pokusím o načtení stránky podle slugu\nz databáze a když se to nepodaří, nabídnu nějaký latte soubor, pokud existuje. Pokud neexistuje, \ntak ErrorPresenter již obstará vrácení 404, což je správně, protože není co nabídnout...</p>\n<p>Ještě je zapotřebí vytvořit jednu routu:</p>\n<pre><code class=\"lang-php\">$router[] = new Route(&#39;&lt;action&gt;&#39;, &#39;Single:article&#39;);\n</code></pre>\n<p>Bez této routy by to také fungovalo, ale latte ony latte soubory (action) bych našel na dvou URL\nadresách, což nechci. Takže se z původního <a href=\"http://zlml.cz/single/about\">http://zlml.cz/single/about</a> dostanu na <a href=\"http://zlml.cz/about\">http://zlml.cz/about</a>, \ncož je cool a splňuji tak druhý požadavek.</p>\n<p>Poslední routa, která stojí za zmíňku pak zajišťuje stránkování. Pouze rozpoznává čísla podle\nregulárního výrazu a podle toho stránkuje:</p>\n<pre><code class=\"lang-php\">$regex = &#39;1|2|3&#39;; //zjednodušeně\n$router[] = new Route(&quot;[&lt;paginator-page [$regex]&gt;]&quot;, array(\n    &#39;presenter&#39; =&gt; &#39;Homepage&#39;,\n    &#39;action&#39; =&gt; &#39;default&#39;,\n    &#39;paginator-page&#39; =&gt; 1\n));\n</code></pre>\n<p>Ostatně to jak mám v době psaní tohoto článku router vytvořený můžete zjistit na <a href=\"https://bitbucket.org/mrtnzlml/zlml.cz/src/0580e2e9f0e4edb162fe97ad563cfef766bea625/app/router/RouterFactory.php\">bitbucketu</a>.</p>\n"
});
