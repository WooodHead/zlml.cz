// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <div
    className="jsx-1307704868 wrapper"
  >
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      ¡Hola! My name is
    </p>
    <h1
      className="jsx-2279252371"
    >
      <span
        className="jsx-3168189516"
      >
        <a
          className="jsx-3168189516"
          href="/"
          onClick={[Function]}
        >
          Martin Zlámal
        </a>
      </span>
    </h1>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3168189516"
      >
        <a
          className="jsx-3168189516"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
    <h1
      className="jsx-764030434"
    >
      Using fulltext searching with InnoDB
    </h1>
    <div
      className="jsx-764030434 article"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>Sometimes is quite useful to use InnoDB engine. 
Unfortunately InnoDB is good for tables with foreign keys, but useless for fulltext search. 
You can&#39;t create fulltext index on InnoDB tables, but you can create this index on MyISAM tables. 
Unfortunately you can&#39;t create foreign keys on MyISAM. It&#39;s starting to be quite embarassing. 
Let me show you how to search via fulltext on InnoDB tables.</p>
<p>In fact it&#39;s not possible to use fulltext index on InnoDB tables, 
but there is possible workaround. At first you need a classic InnoDB structure. 
For example database of  blog:</p>
<pre><code class=\\"hljs lang-sql\\"><span class=\\"hljs-keyword\\">SET</span> <span class=\\"hljs-keyword\\">NAMES</span> utf8;
<span class=\\"hljs-keyword\\">SET</span> foreign_key_checks = <span class=\\"hljs-number\\">0</span>;
<span class=\\"hljs-keyword\\">SET</span> <span class=\\"hljs-keyword\\">time_zone</span> = <span class=\\"hljs-string\\">'SYSTEM'</span>;
<span class=\\"hljs-keyword\\">SET</span> sql_mode = <span class=\\"hljs-string\\">'NO_AUTO_VALUE_ON_ZERO'</span>;

<span class=\\"hljs-keyword\\">DROP</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-keyword\\">IF</span> <span class=\\"hljs-keyword\\">EXISTS</span> <span class=\\"hljs-string\\">\`posts\`</span>;
<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-string\\">\`posts\`</span> (
  <span class=\\"hljs-string\\">\`id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span> AUTO_INCREMENT,
  <span class=\\"hljs-string\\">\`title\`</span> <span class=\\"hljs-built_in\\">text</span> <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`body\`</span> <span class=\\"hljs-built_in\\">text</span> <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`date\`</span> datetime <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`release_date\`</span> datetime <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  PRIMARY <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`id\`</span>),
  <span class=\\"hljs-keyword\\">UNIQUE</span> <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`title_3\`</span> (<span class=\\"hljs-string\\">\`title\`</span>(<span class=\\"hljs-number\\">200</span>))
) <span class=\\"hljs-keyword\\">ENGINE</span>=<span class=\\"hljs-keyword\\">InnoDB</span> <span class=\\"hljs-keyword\\">DEFAULT</span> <span class=\\"hljs-keyword\\">CHARSET</span>=utf8;

<span class=\\"hljs-keyword\\">DROP</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-keyword\\">IF</span> <span class=\\"hljs-keyword\\">EXISTS</span> <span class=\\"hljs-string\\">\`tags\`</span>;
<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-string\\">\`tags\`</span> (
  <span class=\\"hljs-string\\">\`id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span> AUTO_INCREMENT,
  <span class=\\"hljs-string\\">\`name\`</span> <span class=\\"hljs-built_in\\">varchar</span>(<span class=\\"hljs-number\\">50</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`color\`</span> <span class=\\"hljs-built_in\\">varchar</span>(<span class=\\"hljs-number\\">6</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  PRIMARY <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`id\`</span>)
) <span class=\\"hljs-keyword\\">ENGINE</span>=<span class=\\"hljs-keyword\\">InnoDB</span> <span class=\\"hljs-keyword\\">DEFAULT</span> <span class=\\"hljs-keyword\\">CHARSET</span>=utf8;

<span class=\\"hljs-keyword\\">DROP</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-keyword\\">IF</span> <span class=\\"hljs-keyword\\">EXISTS</span> <span class=\\"hljs-string\\">\`posts_tags\`</span>;
<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-string\\">\`posts_tags\`</span> (
  <span class=\\"hljs-string\\">\`id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span> AUTO_INCREMENT,
  <span class=\\"hljs-string\\">\`tag_id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`post_id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  PRIMARY <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`id\`</span>),
  <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`tag_id\`</span> (<span class=\\"hljs-string\\">\`tag_id\`</span>),
  <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`post_id\`</span> (<span class=\\"hljs-string\\">\`post_id\`</span>),
  <span class=\\"hljs-keyword\\">CONSTRAINT</span> <span class=\\"hljs-string\\">\`posts_tags_ibfk_1\`</span> FOREIGN <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`tag_id\`</span>) <span class=\\"hljs-keyword\\">REFERENCES</span> <span class=\\"hljs-string\\">\`tags\`</span> (<span class=\\"hljs-string\\">\`id\`</span>),
  <span class=\\"hljs-keyword\\">CONSTRAINT</span> <span class=\\"hljs-string\\">\`posts_tags_ibfk_2\`</span> FOREIGN <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`post_id\`</span>) <span class=\\"hljs-keyword\\">REFERENCES</span> <span class=\\"hljs-string\\">\`posts\`</span> (<span class=\\"hljs-string\\">\`id\`</span>)
) <span class=\\"hljs-keyword\\">ENGINE</span>=<span class=\\"hljs-keyword\\">InnoDB</span> <span class=\\"hljs-keyword\\">DEFAULT</span> <span class=\\"hljs-keyword\\">CHARSET</span>=utf8;
</code></pre>
<p>Now we have pretty simple database structure with InnoDB tables with foreign keys. 
It would be nice to be able search on database table <strong>posts</strong> using fulltext search:</p>
<pre><code class=\\"hljs lang-sql\\"><span class=\\"hljs-keyword\\">SELECT</span> *
<span class=\\"hljs-keyword\\">FROM</span> posts
<span class=\\"hljs-keyword\\">WHERE</span> <span class=\\"hljs-keyword\\">MATCH</span>(title, <span class=\\"hljs-keyword\\">body</span>) AGAINST (<span class=\\"hljs-string\\">'something'</span> <span class=\\"hljs-keyword\\">IN</span> <span class=\\"hljs-built_in\\">BOOLEAN</span> <span class=\\"hljs-keyword\\">MODE</span>);
</code></pre>
<p>But it is not possible. It returns something like:</p>
<blockquote>
<p>  Error in query: The used table type doesn&#39;t support FULLTEXT indexes</p>
</blockquote>
<p>Let&#39;s create another one table with triggers and fulltext indexes. 
We need to create mirror table. For example:</p>
<pre><code class=\\"hljs lang-sql\\"><span class=\\"hljs-keyword\\">DROP</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-keyword\\">IF</span> <span class=\\"hljs-keyword\\">EXISTS</span> <span class=\\"hljs-string\\">\`mirror_posts\`</span>;
<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TABLE</span> <span class=\\"hljs-string\\">\`mirror_posts\`</span> (
  <span class=\\"hljs-string\\">\`id\`</span> <span class=\\"hljs-built_in\\">int</span>(<span class=\\"hljs-number\\">11</span>) <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span> AUTO_INCREMENT,
  <span class=\\"hljs-string\\">\`title\`</span> <span class=\\"hljs-built_in\\">text</span> <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  <span class=\\"hljs-string\\">\`body\`</span> <span class=\\"hljs-built_in\\">text</span> <span class=\\"hljs-keyword\\">NOT</span> <span class=\\"hljs-literal\\">NULL</span>,
  PRIMARY <span class=\\"hljs-keyword\\">KEY</span> (<span class=\\"hljs-string\\">\`id\`</span>),
  FULLTEXT <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`title_body\`</span> (<span class=\\"hljs-string\\">\`title\`</span>,<span class=\\"hljs-string\\">\`body\`</span>),
  FULLTEXT <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`title\`</span> (<span class=\\"hljs-string\\">\`title\`</span>),
  FULLTEXT <span class=\\"hljs-keyword\\">KEY</span> <span class=\\"hljs-string\\">\`body\`</span> (<span class=\\"hljs-string\\">\`body\`</span>)
) <span class=\\"hljs-keyword\\">ENGINE</span>=MyISAM <span class=\\"hljs-keyword\\">DEFAULT</span> <span class=\\"hljs-keyword\\">CHARSET</span>=utf8;
</code></pre>
<p>And than we need to create triggers:</p>
<pre><code class=\\"hljs lang-sql\\">DELIMITER ;;

<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TRIGGER</span> <span class=\\"hljs-string\\">\`insert_posts\`</span> <span class=\\"hljs-keyword\\">AFTER</span> <span class=\\"hljs-keyword\\">INSERT</span> <span class=\\"hljs-keyword\\">ON</span> <span class=\\"hljs-string\\">\`posts\`</span> <span class=\\"hljs-keyword\\">FOR</span> <span class=\\"hljs-keyword\\">EACH</span> <span class=\\"hljs-keyword\\">ROW</span>
<span class=\\"hljs-keyword\\">INSERT</span> <span class=\\"hljs-keyword\\">INTO</span> mirror_posts <span class=\\"hljs-keyword\\">VALUES</span> (NEW.id, NEW.title, NEW.body);;

<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TRIGGER</span> <span class=\\"hljs-string\\">\`update_posts\`</span> <span class=\\"hljs-keyword\\">AFTER</span> <span class=\\"hljs-keyword\\">UPDATE</span> <span class=\\"hljs-keyword\\">ON</span> <span class=\\"hljs-string\\">\`posts\`</span> <span class=\\"hljs-keyword\\">FOR</span> <span class=\\"hljs-keyword\\">EACH</span> <span class=\\"hljs-keyword\\">ROW</span>
<span class=\\"hljs-keyword\\">UPDATE</span> mirror_posts <span class=\\"hljs-keyword\\">SET</span>
    <span class=\\"hljs-keyword\\">id</span> = NEW.id,
    title = NEW.title,
    <span class=\\"hljs-keyword\\">body</span> = NEW.body
<span class=\\"hljs-keyword\\">WHERE</span> <span class=\\"hljs-keyword\\">id</span> = OLD.id;;

<span class=\\"hljs-keyword\\">CREATE</span> <span class=\\"hljs-keyword\\">TRIGGER</span> <span class=\\"hljs-string\\">\`delete_posts\`</span> <span class=\\"hljs-keyword\\">AFTER</span> <span class=\\"hljs-keyword\\">DELETE</span> <span class=\\"hljs-keyword\\">ON</span> <span class=\\"hljs-string\\">\`posts\`</span> <span class=\\"hljs-keyword\\">FOR</span> <span class=\\"hljs-keyword\\">EACH</span> <span class=\\"hljs-keyword\\">ROW</span>
<span class=\\"hljs-keyword\\">DELETE</span> <span class=\\"hljs-keyword\\">FROM</span> mirror_posts <span class=\\"hljs-keyword\\">WHERE</span> <span class=\\"hljs-keyword\\">id</span> = OLD.id;;
</code></pre>
<p>It means, that we copy all of events and data from table <strong>posts</strong> to the table <strong>mirror_posts</strong>.
Finally we can use more complex fulltext search feature:</p>
<pre><code class=\\"hljs lang-sql\\"><span class=\\"hljs-keyword\\">SELECT</span> *
<span class=\\"hljs-keyword\\">FROM</span> mirror_posts
<span class=\\"hljs-keyword\\">WHERE</span> <span class=\\"hljs-keyword\\">MATCH</span>(title, <span class=\\"hljs-keyword\\">body</span>) AGAINST (<span class=\\"hljs-string\\">'something'</span> <span class=\\"hljs-keyword\\">IN</span> <span class=\\"hljs-built_in\\">BOOLEAN</span> <span class=\\"hljs-keyword\\">MODE</span>)
<span class=\\"hljs-keyword\\">ORDER</span> <span class=\\"hljs-keyword\\">BY</span> <span class=\\"hljs-number\\">5</span> * <span class=\\"hljs-keyword\\">MATCH</span>(title) AGAINST (<span class=\\"hljs-string\\">'something'</span>) + <span class=\\"hljs-keyword\\">MATCH</span>(<span class=\\"hljs-keyword\\">body</span>) AGAINST (<span class=\\"hljs-string\\">'something'</span>) <span class=\\"hljs-keyword\\">DESC</span>;
</code></pre>
<p>As I said, this is just workaround, not solution. 
Sometimes it&#39;s bad practice, because you need copy of indexed columns. 
But it works. And for small blogs it&#39;s sufficient.</p>
",
        }
      }
    />
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <strong>
        Do you have any comments? That's great!
         
        <span
          className="jsx-3168189516"
        >
          <a
            className="jsx-3168189516 "
            href="https://twitter.com/home?status=https%3A%2F%2Fzlml.cz%2Fusing-fulltext-searching-with-innodb%20cc%20%40mrtnzlml"
          >
            Tweet them
          </a>
        </span>
         
        so everyone can hear you…
      </strong>
    </p>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3168189516"
      >
        <a
          className="jsx-3168189516"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
  </div>
</div>
`;
