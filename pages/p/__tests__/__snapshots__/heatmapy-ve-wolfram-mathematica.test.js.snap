// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <div
    className="jsx-1307704868 wrapper"
  >
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      ¡Hola! My name is
    </p>
    <h1
      className="jsx-2345896288"
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/"
          onClick={[Function]}
        >
          Martin Zlámal
        </a>
      </span>
    </h1>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
    <h1
      className="jsx-764030434"
    >
      Heatmapy ve Wolfram Mathematica
    </h1>
    <div
      className="jsx-764030434 article"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p><img src=\\"https://zlmlcz-media.s3-eu-west-1.amazonaws.com/1bb55605-d567-4fe0-b1d1-69e921940e0d/heatmap1.png\\" alt=\\"\\"></p>
<p>Právě teď jsem řešil jak vizualizovat nějaká data, která jsou v maticovém formátu. Pro mé účely jsou prakticky dva grafy. Prvním grafem je heatmapa (viz obrázek) a druhým klasický 3D graf, který data reprezentuje stejně dobře (možná lépe), ale v určitých případech je špatně čitelný. Zejména pak když není možnost s grafem otáčet. V mém případě bylo zapotřebí poměrně velké množství grafů, které jsem nakonec minimalizoval na počet 40, takže bylo nemožné je vykreslovat ručně. Zvlášť pokud jsem zajistit, že budou všechny grafy stejné.</p>
<p>K tomu jak jsem postupoval se dostanu v další části. Teď však ještě pár úvodních slov k tomu, co jsem to vlastně měřil. Cílem měření bylo změřit s využitím jasoměrů hodnoty jasů <em>L [cd/m^2]</em> určitých objektů a jejich okolí v pravidelné síti kontrolních bodů při různém osvětlení (denní, sdružené a umělé) a různé vzdálenosti a úhlu. Z těchto jasů je zapotřebí spočítat kontrast <em>C [-]</em> a tuto kontrastní mapu také vizualizovat. Je tedy zřejmé, že stačí změřit pár objektů a počet grafů rychle roste.</p>
<h2 id=\\"vizualizace-dat\\">Vizualizace dat <a href=\\"#vizualizace-dat\\">#</a></h2><p><img src=\\"https://zlmlcz-media.s3-eu-west-1.amazonaws.com/40a97326-5410-4385-821c-62dc8542387a/3d2.png\\" alt=\\"\\">
Tato část se sice jmenuje vizualizace dat, ale aby bylo co vizualizovat, je zapotřebí data připravit. Já jsem zvolil JSON formát vstupu, protože se velmi jednoduše parsuje a matici v něm mohu zapsat také jednoduše. Z měření jednoho objektu mi tedy stačí data v tomto formátu:</p>
<pre><code class=\\"hljs lang-javascript\\">{
    <span class=\\"hljs-string\\">\\"Tabule - umělé osvětlení\\"</span>: {
        <span class=\\"hljs-string\\">\\"up\\"</span>: <span class=\\"hljs-string\\">\\"STROP\\"</span>,
        <span class=\\"hljs-string\\">\\"down\\"</span>: <span class=\\"hljs-string\\">\\"PODLAHA\\"</span>,
        <span class=\\"hljs-string\\">\\"left\\"</span>: <span class=\\"hljs-string\\">\\"OKNA\\"</span>,
        <span class=\\"hljs-string\\">\\"right\\"</span>: <span class=\\"hljs-string\\">\\"DVEŘE\\"</span>,
        <span class=\\"hljs-string\\">\\"values\\"</span>: [
            [<span class=\\"hljs-number\\">121.3</span>, <span class=\\"hljs-number\\">146</span>, <span class=\\"hljs-number\\">74.2</span>, <span class=\\"hljs-number\\">39.5</span>, <span class=\\"hljs-number\\">27.6</span>, <span class=\\"hljs-number\\">53.9</span>, <span class=\\"hljs-number\\">66.7</span>],
            [<span class=\\"hljs-number\\">96.5</span>, <span class=\\"hljs-number\\">86.1</span>, <span class=\\"hljs-number\\">80.2</span>, <span class=\\"hljs-number\\">54.8</span>, <span class=\\"hljs-number\\">47.3</span>, <span class=\\"hljs-number\\">65.8</span>, <span class=\\"hljs-number\\">79.5</span>],
            [<span class=\\"hljs-number\\">82.6</span>, <span class=\\"hljs-number\\">78</span>, <span class=\\"hljs-number\\">71.8</span>, <span class=\\"hljs-number\\">65.3</span>, <span class=\\"hljs-number\\">58.7</span>, <span class=\\"hljs-number\\">62.3</span>, <span class=\\"hljs-number\\">79.5</span>],
            [<span class=\\"hljs-number\\">63.8</span>, <span class=\\"hljs-number\\">71.5</span>, <span class=\\"hljs-number\\">66.7</span>, <span class=\\"hljs-number\\">63</span>, <span class=\\"hljs-number\\">59.4</span>, <span class=\\"hljs-number\\">63.2</span>, <span class=\\"hljs-number\\">77.5</span>],
            [<span class=\\"hljs-number\\">62.4</span>, <span class=\\"hljs-number\\">61</span>, <span class=\\"hljs-number\\">63.9</span>, <span class=\\"hljs-number\\">62.4</span>, <span class=\\"hljs-number\\">62.7</span>, <span class=\\"hljs-number\\">63.4</span>, <span class=\\"hljs-number\\">70.5</span>]
        ]
    }
}
</code></pre>
<p>Takových dat je již možné se chytit a vykreslit celou řadu průběhů. Samotný parser se však postupem času poměrně zkomplikoval. Prohlédnout si ho však můžete <a href=\\"https://gist.github.com/mrtnzlml/9ec02541555e419a8df9#file-parser7-php\\">na GitHub Gistu</a> a to včetně kompletního vstupu a výsledného výstupu pro Wolfram Mathematica. Tento výstup je v zásadě jednoduchý. Například graf, který je v úvodu vykreslíme pomocí následujícího výstřižku:</p>
<pre><code class=\\"hljs lang-php\\">Show[MatrixPlot[{
    {<span class=\\"hljs-number\\">-0.063</span>, <span class=\\"hljs-number\\">-0.753</span>, <span class=\\"hljs-number\\">-0.706</span>, <span class=\\"hljs-number\\">-0.788</span>, <span class=\\"hljs-number\\">-0.443</span>, <span class=\\"hljs-number\\">0.311</span>, <span class=\\"hljs-number\\">0.327</span>},
    {<span class=\\"hljs-number\\">0.619</span>, <span class=\\"hljs-number\\">0.613</span>, <span class=\\"hljs-number\\">0.671</span>, <span class=\\"hljs-number\\">-0.013</span>, <span class=\\"hljs-number\\">-0.162</span>, <span class=\\"hljs-number\\">0.295</span>, <span class=\\"hljs-number\\">0.344</span>},
    {<span class=\\"hljs-number\\">0.297</span>, <span class=\\"hljs-number\\">0.441</span>, <span class=\\"hljs-number\\">0.351</span>, <span class=\\"hljs-number\\">0.178</span>, <span class=\\"hljs-number\\">0.087</span>, <span class=\\"hljs-number\\">0.166</span>, <span class=\\"hljs-number\\">0.339</span>},
    {<span class=\\"hljs-number\\">-0.085</span>, <span class=\\"hljs-number\\">0.27</span>, <span class=\\"hljs-number\\">0.225</span>, <span class=\\"hljs-number\\">0.155</span>, <span class=\\"hljs-number\\">0.118</span>, <span class=\\"hljs-number\\">0.163</span>, <span class=\\"hljs-number\\">0.317</span>},
    {<span class=\\"hljs-number\\">-0.033</span>, <span class=\\"hljs-number\\">0.017</span>, <span class=\\"hljs-number\\">-0.015</span>, <span class=\\"hljs-number\\">0.03</span>, <span class=\\"hljs-number\\">0.019</span>, <span class=\\"hljs-number\\">0.077</span>, <span class=\\"hljs-number\\">0.198</span>}
}, PlotTheme -&gt; <span class=\\"hljs-string\\">\\"Detailed\\"</span>, Mesh -&gt; Automatic, MeshStyle -&gt; Directive[GrayLevel[<span class=\\"hljs-number\\">0</span>], Opacity[<span class=\\"hljs-number\\">0.5</span>], Dashing[{<span class=\\"hljs-number\\">0</span>, Small}]]],
FrameLabel -&gt; {{HoldForm[OKNA], HoldForm[DVEŘE]}, {HoldForm[PODLAHA], HoldForm[STROP]}},
PlotLabel -&gt; RawBoxes[<span class=\\"hljs-string\\">\\"Tabule - umělé osvětlení, zezadu (kontrast, Lp = 59.7)\\"</span>], LabelStyle -&gt; {GrayLevel[<span class=\\"hljs-number\\">0</span>]}]
</code></pre>
<p><img src=\\"https://zlmlcz-media.s3-eu-west-1.amazonaws.com/79b1a8e3-1efc-42b0-bb79-3409b9acd49d/3d.png\\" alt=\\"\\"></p>
<p>Kromě nastavování popisek a záhlaví, tak je důležitý hlavně blok kde jsou data. V tomto grafu není žádná zrada. Malá zrada číhá až v 3D grafech. Zde je háček v tom, že občas relativně malá plocha grafu ustřelí mimo průměrnou hodnotu všech bodů a na grafu dojde k oříznutí. Aby se tomuto efektu předešlo, je bezpodmínečně nutné nastavit grafu <code>PlotRange -&gt; All</code>. Tím se vykreslí celý graf nezávisle na tom, jaké obsahuje extrémní hodnoty. Je však otázka jestli je to žádoucí. V mém případě ano, ale umím si přestavit případy, kdy by velká špička totálně zničila celý graf a bylo by výhodnější spičku oříznout.</p>
<pre><code class=\\"hljs lang-php\\">ListPlot3D[{
    {<span class=\\"hljs-number\\">62.4</span>, <span class=\\"hljs-number\\">61</span>, <span class=\\"hljs-number\\">63.9</span>, <span class=\\"hljs-number\\">62.4</span>, <span class=\\"hljs-number\\">62.7</span>, <span class=\\"hljs-number\\">63.4</span>, <span class=\\"hljs-number\\">70.5</span>},
    {<span class=\\"hljs-number\\">63.8</span>, <span class=\\"hljs-number\\">71.5</span>, <span class=\\"hljs-number\\">66.7</span>, <span class=\\"hljs-number\\">63</span>, <span class=\\"hljs-number\\">59.4</span>, <span class=\\"hljs-number\\">63.2</span>, <span class=\\"hljs-number\\">77.5</span>},
    {<span class=\\"hljs-number\\">82.6</span>, <span class=\\"hljs-number\\">78</span>, <span class=\\"hljs-number\\">71.8</span>, <span class=\\"hljs-number\\">65.3</span>, <span class=\\"hljs-number\\">58.7</span>, <span class=\\"hljs-number\\">62.3</span>, <span class=\\"hljs-number\\">79.5</span>},
    {<span class=\\"hljs-number\\">96.5</span>, <span class=\\"hljs-number\\">86.1</span>, <span class=\\"hljs-number\\">80.2</span>, <span class=\\"hljs-number\\">54.8</span>, <span class=\\"hljs-number\\">47.3</span>, <span class=\\"hljs-number\\">65.8</span>, <span class=\\"hljs-number\\">79.5</span>},
    {<span class=\\"hljs-number\\">121.3</span>, <span class=\\"hljs-number\\">146</span>, <span class=\\"hljs-number\\">74.2</span>, <span class=\\"hljs-number\\">39.5</span>, <span class=\\"hljs-number\\">27.6</span>, <span class=\\"hljs-number\\">53.9</span>, <span class=\\"hljs-number\\">66.7</span>}
}, ColorFunction -&gt; <span class=\\"hljs-string\\">\\"DarkRainbow\\"</span>, PlotRange -&gt; All, PlotTheme -&gt; <span class=\\"hljs-string\\">\\"Business\\"</span>]
</code></pre>
<p>Pro vykreslení horního pohledu stačí přidat další atribut <code>ViewPoint -&gt; Above</code>, čímž získáme teplotní mapu v trošku jiném zobrazení a díky Business tématu budou na grafu vidět i vrstevnice, což ulehčí představu o tom jak je graf tvarově rozložen. <span style=\\"color:green\\">Také pozor na to, že do funkcí <code>MatrixPlot</code> a <code>ListPlot3D</code> se zadávají matice v obráceném pořadí z hlediska řádek matice! Dojde tak ke vykreslení stejných map.</span></p>
",
        }
      }
    />
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <strong>
        Do you have any comments? That's great!
         
        <span
          className="jsx-3140515621"
        >
          <a
            className="jsx-3140515621 "
            href="https://twitter.com/home?status=https%3A%2F%2Fzlml.cz%2Fheatmapy-ve-wolfram-mathematica%20cc%20%40mrtnzlml"
          >
            Tweet them
          </a>
        </span>
         
        so everyone can hear you…
      </strong>
    </p>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
  </div>
</div>
`;
