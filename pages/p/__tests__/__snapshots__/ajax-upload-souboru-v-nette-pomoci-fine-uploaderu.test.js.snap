// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div>
  <div
    className="jsx-1307704868 wrapper"
  >
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      ¡Hola! My name is
    </p>
    <h1
      className="jsx-2345896288"
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/"
          onClick={[Function]}
        >
          Martin Zlámal
        </a>
      </span>
    </h1>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
    <h1
      className="jsx-764030434"
    >
      AJAX upload souborů v Nette pomocí Fine Uploaderu
    </h1>
    <div
      className="jsx-764030434 article"
      dangerouslySetInnerHTML={
        Object {
          "__html": "<div class=\\"alert alert-danger\\">Následující text řeší starší verzi FineUploaderu <code>3.*</code>, nikoliv nejnovější. Hledáte-li aktuálnější návod, přečtěte si prosím <a href=\\"http://zlml.cz/ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2\\">http://zlml.cz/ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2</a>...</div>

<p>A je zde další ukázka vlastní práce, která se může hodit i někomu dalšímu. Tentokrát půjde o ajaxové
nahrávání souborů v Nette pomocí <a href=\\"http://fineuploader.com/\\">Fine Uploaderu .{target:_blank}</a>.
Obecně to není moc jednoduchá sranda, ale uvidíte, že to zase není taková věda...</p>
<p>A jak už to tak dělávám, lepší než spoustu povídání je spousta ukázek. Prvně je potřeba nalinkovat
soubory Fine Uploaderu, nette.ajaxu a vlastního javascriptového souboru:</p>
<pre><code class=\\"hljs lang-html\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"{$basePath}/js/jquery.fineuploader-3.7.0.min.js\\"</span>&gt;</span><span class=\\"undefined\\"></span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>
<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"{$basePath}/js/nette.ajax.js\\"</span>&gt;</span><span class=\\"undefined\\"></span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>
<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"{$basePath}/js/main.js\\"</span>&gt;</span><span class=\\"undefined\\"></span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>
</code></pre>
<p>Použití samotného Fine Uploaderu je nesmírně jednoduché. Nejdříve je třeba vytvořit element na který
se uploader později zavěsí a případně tlačítko na upload, pokud nechceme soubory uploadovat rovnou:</p>
<pre><code class=\\"hljs lang-html\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"image-uploader\\"</span>{<span class=\\"hljs-attr\\">ifset</span> $<span class=\\"hljs-attr\\">selected</span>} <span class=\\"hljs-attr\\">data-id</span>=<span class=\\"hljs-string\\">\\"{$selected}\\"</span>{/<span class=\\"hljs-attr\\">ifset</span>}&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>
<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"triggerUpload\\"</span>&gt;</span>Nahrát obrázky<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>
</code></pre>
<p>Přichází na řadu samotné oživení uploaderu pomocí javascriptu (soubor main.js):</p>
<pre><code class=\\"hljs lang-javascript\\">$(<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{
    <span class=\\"hljs-keyword\\">if</span> ($(<span class=\\"hljs-string\\">'#image-uploader'</span>).length != <span class=\\"hljs-number\\">0</span>) { <span class=\\"hljs-comment\\">//test existence elementu</span>
        $.nette.ext(<span class=\\"hljs-string\\">'uploader'</span>, {
            <span class=\\"hljs-attr\\">complete</span>: <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{ <span class=\\"hljs-comment\\">//zavěšení na konec ajaxového požadavku</span>
                <span class=\\"hljs-keyword\\">var</span> uploader = $(<span class=\\"hljs-string\\">'#image-uploader'</span>).fineUploader({
                    <span class=\\"hljs-attr\\">request</span>: {
                        <span class=\\"hljs-attr\\">endpoint</span>: <span class=\\"hljs-string\\">'product/default/'</span> + $(<span class=\\"hljs-string\\">'#image-uploader'</span>).data(<span class=\\"hljs-string\\">'id'</span>) + <span class=\\"hljs-string\\">'?do=upload'</span>
                    },
                    <span class=\\"hljs-attr\\">text</span>: {
                        <span class=\\"hljs-attr\\">uploadButton</span>: <span class=\\"hljs-string\\">'Klikněte, nebo přetáhněte obrázky'</span>,
                        <span class=\\"hljs-attr\\">cancelButton</span>: <span class=\\"hljs-string\\">'zrušit'</span>,
                        <span class=\\"hljs-attr\\">failUpload</span>: <span class=\\"hljs-string\\">'Nahrání obrázku se nezdařilo'</span>,
                        <span class=\\"hljs-attr\\">dragZone</span>: <span class=\\"hljs-string\\">'Přetáhněte soubory sem'</span>,
                        <span class=\\"hljs-attr\\">dropProcessing</span>: <span class=\\"hljs-string\\">'Zpracovávám přetažené soubory...'</span>,
                        <span class=\\"hljs-attr\\">formatProgress</span>: <span class=\\"hljs-string\\">'{percent}% z {total_size}'</span>,
                        <span class=\\"hljs-attr\\">waitingForResponse</span>: <span class=\\"hljs-string\\">'Zpracovávám...'</span>
                    },
                    <span class=\\"hljs-attr\\">autoUpload</span>: <span class=\\"hljs-literal\\">false</span>,
                    <span class=\\"hljs-attr\\">failedUploadTextDisplay</span>: {
                        <span class=\\"hljs-attr\\">mode</span>: <span class=\\"hljs-string\\">'custom'</span>,
                        <span class=\\"hljs-attr\\">maxChars</span>: <span class=\\"hljs-number\\">70</span>,
                        <span class=\\"hljs-attr\\">responseProperty</span>: <span class=\\"hljs-string\\">'error'</span>,
                        <span class=\\"hljs-attr\\">enableTooltip</span>: <span class=\\"hljs-literal\\">true</span>
                    }
                });
                $(<span class=\\"hljs-string\\">'#triggerUpload'</span>).click(<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{
                    uploader.fineUploader(<span class=\\"hljs-string\\">'uploadStoredFiles'</span>);
                });
            }
        });
    }

    $.nette.init(); <span class=\\"hljs-comment\\">//inicializace nette.ajax</span>
});
</code></pre>
<p>Protože jsem v mém případě donačítal tento upload element ajaxově, musel jsem script pro uploader
zavěsit na nette.ajax událost complete. Tato obálka se dá smazat a spouštět klasicky
při události document.ready. Je zde spoustu, pro samotnou funkčnost, zbytečného kódu.
Podstatný je pouze request:endpoint, který ukazuje na URL adresu aplikace, kde čeká Nette handle.
Ten může vypadat například takto:</p>
<pre><code class=\\"hljs lang-php\\"><span class=\\"hljs-keyword\\">public</span> <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">handleUpload</span><span class=\\"hljs-params\\">($id)</span> </span>{
    $allowedExtensions = <span class=\\"hljs-keyword\\">array</span>(<span class=\\"hljs-string\\">\\"jpeg\\"</span>, <span class=\\"hljs-string\\">\\"jpg\\"</span>, <span class=\\"hljs-string\\">\\"png\\"</span>, <span class=\\"hljs-string\\">\\"gif\\"</span>); <span class=\\"hljs-comment\\">//například pro obrázky</span>
    $uploader = <span class=\\"hljs-keyword\\">new</span> \\\\qqFileUploader($allowedExtensions);
    <span class=\\"hljs-comment\\">//...</span>
    <span class=\\"hljs-keyword\\">try</span> {
        $result = $uploader-&gt;handleUpload(<span class=\\"hljs-keyword\\">__DIR__</span> . <span class=\\"hljs-string\\">'/../../../www/uploads/'</span> . $id . <span class=\\"hljs-string\\">'/default'</span>, <span class=\\"hljs-keyword\\">NULL</span>);
        $result[<span class=\\"hljs-string\\">'uploadName'</span>] = $uploader-&gt;getUploadName();
        <span class=\\"hljs-comment\\">//...</span>
    } <span class=\\"hljs-keyword\\">catch</span> (\\\\<span class=\\"hljs-keyword\\">Exception</span> $exc) {
        <span class=\\"hljs-keyword\\">$this</span>-&gt;sendResponse(<span class=\\"hljs-keyword\\">new</span> \\\\Nette\\\\Application\\\\Responses\\\\JsonResponse(<span class=\\"hljs-keyword\\">array</span>(
            <span class=\\"hljs-string\\">'error'</span> =&gt; $exc-&gt;getMessage(),
        )));
    }
    <span class=\\"hljs-keyword\\">$this</span>-&gt;invalidateControl();
    <span class=\\"hljs-keyword\\">$this</span>-&gt;sendResponse(<span class=\\"hljs-keyword\\">new</span> \\\\Nette\\\\Application\\\\Responses\\\\JsonResponse($result));
}
</code></pre>
<p>Opět jsem vypustil části, které nejsou úplně důležité pro samotnou funkčnost. Jde pouze o to mít
připravenou handle metodu, která převezme například ID, důležité však je, že spouští metodu handleUpload()
a odesílá JSON odpověď a to jak errorovou, tak normální, což je následně na straně klienta vyhodnoceno
jako úspěšný upload.</p>
<p>V kódu je zmíněna také třída qqFileUploader. Tu naleznete například na <a href=\\"https://github.com/Widen/fine-uploader-server\\">GitHubu .{target:_blank}</a> a nejenom pro PHP. Já jsem si tuto třídu obohatil pouze
o webalize názvů souborů.</p>
<p>A to je vlastně úplně celé. Stačí tedy spustit Fine Uploader na straně klienta například
podle oficiálních návodů, endpoint nastavit na nějaký handle v aplikaci a ten správně použít.
To konkrétně obnáší odeslání JSON odpovědi o úspěšném zpracování obrázku.</p>
",
        }
      }
    />
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <strong>
        Do you have any comments? That's great!
         
        <span
          className="jsx-3140515621"
        >
          <a
            className="jsx-3140515621 "
            href="https://twitter.com/home?status=https%3A%2F%2Fzlml.cz%2Fajax-upload-souboru-v-nette-pomoci-fine-uploaderu%20cc%20%40mrtnzlml"
          >
            Tweet them
          </a>
        </span>
         
        so everyone can hear you…
      </strong>
    </p>
    <p
      style={
        Object {
          "fontSize": "2rem",
          "hyphens": "auto",
          "textAlign": "justify",
        }
      }
    >
      <span
        className="jsx-3140515621"
      >
        <a
          className="jsx-3140515621"
          href="/archive"
          onClick={[Function]}
        >
          ← back to the archive
        </a>
      </span>
    </p>
  </div>
</div>
`;
