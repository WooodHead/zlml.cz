// @flow

import WithPost from '../../components/WithPost';

export default WithPost({
  "attributes": {
    "timestamp": 1377116084000,
    "title": "AJAX upload souborů v Nette pomocí Fine Uploaderu",
    "slug": "ajax-upload-souboru-v-nette-pomoci-fine-uploaderu"
  },
  "body": "<div class=\"alert alert-danger\">Následující text řeší starší verzi FineUploaderu <code>3.*</code>, nikoliv nejnovější. Hledáte-li aktuálnější návod, přečtěte si prosím <a href=\"http://zlml.cz/ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2\">http://zlml.cz/ajax-upload-souboru-v-nette-pomoci-fine-uploaderu-2</a>...</div>\n\n<p>A je zde další ukázka vlastní práce, která se může hodit i někomu dalšímu. Tentokrát půjde o ajaxové\nnahrávání souborů v Nette pomocí <a href=\"http://fineuploader.com/\">Fine Uploaderu</a>.\nObecně to není moc jednoduchá sranda, ale uvidíte, že to zase není taková věda...</p>\n<p>A jak už to tak dělávám, lepší než spoustu povídání je spousta ukázek. Prvně je potřeba nalinkovat\nsoubory Fine Uploaderu, nette.ajaxu a vlastního javascriptového souboru:</p>\n<pre><code class=\"hljs lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"{$basePath}/js/jquery.fineuploader-3.7.0.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"{$basePath}/js/nette.ajax.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"{$basePath}/js/main.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>Použití samotného Fine Uploaderu je nesmírně jednoduché. Nejdříve je třeba vytvořit element na který\nse uploader později zavěsí a případně tlačítko na upload, pokud nechceme soubory uploadovat rovnou:</p>\n<pre><code class=\"hljs lang-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"image-uploader\"</span>{<span class=\"hljs-attr\">ifset</span> $<span class=\"hljs-attr\">selected</span>} <span class=\"hljs-attr\">data-id</span>=<span class=\"hljs-string\">\"{$selected}\"</span>{/<span class=\"hljs-attr\">ifset</span>}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"triggerUpload\"</span>&gt;</span>Nahrát obrázky<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>Přichází na řadu samotné oživení uploaderu pomocí javascriptu (soubor main.js):</p>\n<pre><code class=\"hljs lang-javascript\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">if</span> ($(<span class=\"hljs-string\">'#image-uploader'</span>).length != <span class=\"hljs-number\">0</span>) { <span class=\"hljs-comment\">//test existence elementu</span>\n        $.nette.ext(<span class=\"hljs-string\">'uploader'</span>, {\n            <span class=\"hljs-attr\">complete</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-comment\">//zavěšení na konec ajaxového požadavku</span>\n                <span class=\"hljs-keyword\">var</span> uploader = $(<span class=\"hljs-string\">'#image-uploader'</span>).fineUploader({\n                    <span class=\"hljs-attr\">request</span>: {\n                        <span class=\"hljs-attr\">endpoint</span>: <span class=\"hljs-string\">'product/default/'</span> + $(<span class=\"hljs-string\">'#image-uploader'</span>).data(<span class=\"hljs-string\">'id'</span>) + <span class=\"hljs-string\">'?do=upload'</span>\n                    },\n                    <span class=\"hljs-attr\">text</span>: {\n                        <span class=\"hljs-attr\">uploadButton</span>: <span class=\"hljs-string\">'Klikněte, nebo přetáhněte obrázky'</span>,\n                        <span class=\"hljs-attr\">cancelButton</span>: <span class=\"hljs-string\">'zrušit'</span>,\n                        <span class=\"hljs-attr\">failUpload</span>: <span class=\"hljs-string\">'Nahrání obrázku se nezdařilo'</span>,\n                        <span class=\"hljs-attr\">dragZone</span>: <span class=\"hljs-string\">'Přetáhněte soubory sem'</span>,\n                        <span class=\"hljs-attr\">dropProcessing</span>: <span class=\"hljs-string\">'Zpracovávám přetažené soubory...'</span>,\n                        <span class=\"hljs-attr\">formatProgress</span>: <span class=\"hljs-string\">'{percent}% z {total_size}'</span>,\n                        <span class=\"hljs-attr\">waitingForResponse</span>: <span class=\"hljs-string\">'Zpracovávám...'</span>\n                    },\n                    <span class=\"hljs-attr\">autoUpload</span>: <span class=\"hljs-literal\">false</span>,\n                    <span class=\"hljs-attr\">failedUploadTextDisplay</span>: {\n                        <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'custom'</span>,\n                        <span class=\"hljs-attr\">maxChars</span>: <span class=\"hljs-number\">70</span>,\n                        <span class=\"hljs-attr\">responseProperty</span>: <span class=\"hljs-string\">'error'</span>,\n                        <span class=\"hljs-attr\">enableTooltip</span>: <span class=\"hljs-literal\">true</span>\n                    }\n                });\n                $(<span class=\"hljs-string\">'#triggerUpload'</span>).click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                    uploader.fineUploader(<span class=\"hljs-string\">'uploadStoredFiles'</span>);\n                });\n            }\n        });\n    }\n\n    $.nette.init(); <span class=\"hljs-comment\">//inicializace nette.ajax</span>\n});\n</code></pre>\n<p>Protože jsem v mém případě donačítal tento upload element ajaxově, musel jsem script pro uploader\nzavěsit na nette.ajax událost complete. Tato obálka se dá smazat a spouštět klasicky\npři události document.ready. Je zde spoustu, pro samotnou funkčnost, zbytečného kódu.\nPodstatný je pouze request:endpoint, který ukazuje na URL adresu aplikace, kde čeká Nette handle.\nTen může vypadat například takto:</p>\n<pre><code class=\"hljs lang-php\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">handleUpload</span><span class=\"hljs-params\">($id)</span> </span>{\n    $allowedExtensions = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">\"jpeg\"</span>, <span class=\"hljs-string\">\"jpg\"</span>, <span class=\"hljs-string\">\"png\"</span>, <span class=\"hljs-string\">\"gif\"</span>); <span class=\"hljs-comment\">//například pro obrázky</span>\n    $uploader = <span class=\"hljs-keyword\">new</span> \\qqFileUploader($allowedExtensions);\n    <span class=\"hljs-comment\">//...</span>\n    <span class=\"hljs-keyword\">try</span> {\n        $result = $uploader-&gt;handleUpload(<span class=\"hljs-keyword\">__DIR__</span> . <span class=\"hljs-string\">'/../../../www/uploads/'</span> . $id . <span class=\"hljs-string\">'/default'</span>, <span class=\"hljs-keyword\">NULL</span>);\n        $result[<span class=\"hljs-string\">'uploadName'</span>] = $uploader-&gt;getUploadName();\n        <span class=\"hljs-comment\">//...</span>\n    } <span class=\"hljs-keyword\">catch</span> (\\<span class=\"hljs-keyword\">Exception</span> $exc) {\n        <span class=\"hljs-keyword\">$this</span>-&gt;sendResponse(<span class=\"hljs-keyword\">new</span> \\Nette\\Application\\Responses\\JsonResponse(<span class=\"hljs-keyword\">array</span>(\n            <span class=\"hljs-string\">'error'</span> =&gt; $exc-&gt;getMessage(),\n        )));\n    }\n    <span class=\"hljs-keyword\">$this</span>-&gt;invalidateControl();\n    <span class=\"hljs-keyword\">$this</span>-&gt;sendResponse(<span class=\"hljs-keyword\">new</span> \\Nette\\Application\\Responses\\JsonResponse($result));\n}\n</code></pre>\n<p>Opět jsem vypustil části, které nejsou úplně důležité pro samotnou funkčnost. Jde pouze o to mít\npřipravenou handle metodu, která převezme například ID, důležité však je, že spouští metodu handleUpload()\na odesílá JSON odpověď a to jak errorovou, tak normální, což je následně na straně klienta vyhodnoceno\njako úspěšný upload.</p>\n<p>V kódu je zmíněna také třída qqFileUploader. Tu naleznete například na <a href=\"https://github.com/Widen/fine-uploader-server\">GitHubu</a> a nejenom pro PHP. Já jsem si tuto třídu obohatil pouze\no webalize názvů souborů.</p>\n<p>A to je vlastně úplně celé. Stačí tedy spustit Fine Uploader na straně klienta například\npodle oficiálních návodů, endpoint nastavit na nějaký handle v aplikaci a ten správně použít.\nTo konkrétně obnáší odeslání JSON odpovědi o úspěšném zpracování obrázku.</p>\n"
});
