service: zlmlcz

plugins:
  - serverless-dynamodb-autoscaling
  - serverless-offline
  - serverless-plugin-warmup

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1 # Ireland
  stage: production
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
      - Fn::Join:
        - ':'
        - - arn:aws:lambda
          - Ref: AWS::Region
          - Ref: AWS::AccountId
          - function:${self:service}-${opt:stage, self:provider.stage}-*

custom:
  custom:
    warmup:
      schedule: 'rate(1 minute)'
      prewarm: true
  capacities:
    - table: articlesTable
      read: &AUTOSCALE_CONFIG
        minimum: 1
        maximum: 1000
        usage: 0.7
      write:
        <<: *AUTOSCALE_CONFIG
    - table: picturesTable
      read:
        <<: *AUTOSCALE_CONFIG
      write:
        <<: *AUTOSCALE_CONFIG

package:
  excludeDevDependencies: false
#  exclude:
#    - ./**
#  include:
#    - .next/**
#    - node_modules/** # TODO: remove
#    - services/Lambda.js
#    - services/Application.js

functions:
  blog:
    warmup: true
    handler: services/Lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: GET
          cors: true
          integration: lambda-proxy
      - http:
          path: /
          method: GET
          cors: true
          integration: lambda-proxy

resources:
  Resources:
    articlesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: articles
        AttributeDefinitions:
          - AttributeName: articleId
            AttributeType: S # string
        KeySchema:
          - AttributeName: articleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    picturesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pictures
        AttributeDefinitions:
          - AttributeName: pictureId
            AttributeType: S # string
        KeySchema:
          - AttributeName: pictureId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
